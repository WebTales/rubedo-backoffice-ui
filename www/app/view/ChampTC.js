/*
 * File: app/view/ChampTC.js
 *
 * This file was generated by Sencha Architect version 2.0.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('KECMdesktop.view.ChampTC', {
    extend: 'Ext.container.Container',
    alias: 'widget.ChampTC',

    padding: 10,
    layout: {
        type: 'anchor'
    },

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'button',
                    style: '{float: right;}',
                    iconCls: 'close',
                    text: '',
                    listeners: {
                        click: {
                            fn: me.onButtonClick,
                            scope: me
                        }
                    }
                },
                {
                    xtype: 'button',
                    style: '{float: right;}',
                    iconCls: 'arrow_down',
                    text: '',
                    listeners: {
                        click: {
                            fn: me.onButtonClick2,
                            scope: me
                        }
                    }
                },
                {
                    xtype: 'button',
                    style: '{float: right;}',
                    iconCls: 'arrow_up',
                    text: '',
                    listeners: {
                        click: {
                            fn: me.onButtonClick1,
                            scope: me
                        }
                    }
                },
                {
                    xtype: 'button',
                    itemId: 'helpBouton',
                    margin: '0 20 0 0',
                    style: '{float:right;}',
                    handleMouseEvents: false,
                    iconCls: 'help',
                    pressedCls: 'x-btn',
                    text: ''
                }
            ]
        });

        me.callParent(arguments);
    },

    onButtonClick: function(button, e, options) {
        button.up().destroy();

    },

    onButtonClick2: function(button, e, options) {
        var pos = button.up().up().items.indexOf(button.up());
        button.up().up().move(pos,pos+1);
    },

    onButtonClick1: function(button, e, options) {
        var pos = button.up().up().items.indexOf(button.up());
        if (pos > 0) {
            button.up().up().move(pos,pos-1);
        }
    }

});