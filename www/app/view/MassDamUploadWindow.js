/*
 * File: app/view/MassDamUploadWindow.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Rubedo.view.MassDamUploadWindow', {
    extend: 'Ext.window.Window',
    alias: 'widget.MassDamUploadWindow',

    height: 323,
    id: 'MassDamUploadWindow',
    width: 466,
    resizable: false,
    layout: {
        type: 'fit'
    },
    bodyPadding: 2,
    title: 'Digital assets mass upload',
    constrain: true,
    modal: true,

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'panel',
                    border: 4,
                    id: 'massDamUploadDropZone',
                    layout: {
                        align: 'center',
                        pack: 'center',
                        type: 'vbox'
                    },
                    bodyBorder: true,
                    bodyCls: 'contrastRow',
                    title: '',
                    listeners: {
                        afterrender: {
                            fn: me.onMassDamUploadDropZoneAfterRender,
                            scope: me
                        }
                    },
                    items: [
                        {
                            xtype: 'image',
                            height: 128,
                            style: '{opacity:0.4;}',
                            width: 128,
                            src: 'resources/icones/generic/image_add.png'
                        },
                        {
                            xtype: 'container',
                            height: 60,
                            html: '<h1 style="color:#999;">Drop files here</h1>',
                            styleHtmlContent: true,
                            width: 179
                        }
                    ]
                }
            ],
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'bottom',
                    height: 30
                }
            ]
        });

        me.callParent(arguments);
    },

    onMassDamUploadDropZoneAfterRender: function(component, eOpts) {
        component.setBorder(4);
    }

});