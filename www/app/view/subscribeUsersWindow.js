/*
 * File: app/view/subscribeUsersWindow.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Rubedo.view.subscribeUsersWindow', {
    extend: 'Ext.window.Window',
    alias: 'widget.subscribeUsersWindow',

    id: 'subscribeUsersWindow',
    width: 400,
    layout: {
        type: 'fit'
    },
    title: 'Subscribe users',
    modal: true,

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'form',
                    bodyPadding: 10,
                    title: '',
                    items: [
                        {
                            xtype: 'button',
                            anchor: '100%',
                            id: 'subscribeUsersSubmitBtn',
                            text: 'Subscribe',
                            listeners: {
                                click: {
                                    fn: me.onSubscribeUsersSubmitBtnClick,
                                    scope: me
                                }
                            }
                        }
                    ],
                    listeners: {
                        afterrender: {
                            fn: me.onFormAfterRender,
                            scope: me
                        }
                    }
                }
            ]
        });

        me.callParent(arguments);
    },

    onSubscribeUsersSubmitBtnClick: function(button, e, eOpts) {
        var form=button.up().getForm();
        if (form.isValid()){
            Ext.Ajax.request({
                url: 'mailing-lists/subscribe-users', 
                method:'POST',
                params: {
                    mlId: Ext.getCmp("MLMainGrid").getSelectionModel().getLastSelected().get("id"),
                    userEmailArray:Ext.JSON.encode(form.getValues().emails)
                },
                success: function(response){
                    var answer=Ext.JSON.decode(response.responseText);
                    if (answer.success){
                        button.up().up().close();
                        Ext.getStore("MLUsers").load();
                    } else {
                        Ext.Msg.alert("Error","User subscription error");
                    }
                }
            });
        }
    },

    onFormAfterRender: function(component, eOpts) {
        var picker=Ext.create("Ext.ux.form.field.BoxSelect",{
            "store":[ ],
            "name":"emails",
            "fieldLabel":"Emails",
            "labelWidth":60,
            "anchor":"100%",
            "multiSelect":true,
            "forceSelection":false,
            "allowBlank":false,
            "stacked":true,
            "createNewOnEnter":true,
            "hideTrigger":true,
            "triggerOnClick":false,
            "createNewOnBlur":true,
            "pinList":false
        });
        component.insert(0, picker);
    }

});