/*
 * File: app/view/MailingListsInterface.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Rubedo.view.MailingListsInterface', {
    extend: 'Ext.window.Window',
    alias: 'widget.MailingListsInterface',

    requires: [
        'Rubedo.view.WorkspaceCombo',
        'Rubedo.view.MyTool16',
        'Rubedo.view.MyTool17'
    ],

    localiserId: 'mailingListsWindow',
    height: 456,
    id: 'MailingListsInterface',
    width: 723,
    layout: {
        align: 'stretch',
        type: 'hbox'
    },
    constrainHeader: true,
    iconCls: 'mail_small',
    title: 'Listes de diffusion',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'top',
                    items: [
                        {
                            xtype: 'button',
                            ACL: 'write.ui.mailingLists',
                            localiserId: 'addBtn',
                            id: 'MailingListsAdd',
                            iconAlign: 'top',
                            iconCls: 'add_big',
                            scale: 'large',
                            text: 'Ajouter'
                        },
                        {
                            xtype: 'button',
                            ACL: 'write.ui.mailingLists',
                            localiserId: 'removeBtn',
                            disabled: true,
                            id: 'MailingListsRemove',
                            iconAlign: 'top',
                            iconCls: 'remove_big',
                            scale: 'large',
                            text: 'Supprimer'
                        },
                        {
                            xtype: 'button',
                            ACL: 'write.ui.mailingLists',
                            localiserId: 'saveBtn',
                            disabled: true,
                            id: 'MailingListsUpdate',
                            iconAlign: 'top',
                            iconCls: 'floppy_disc_big',
                            scale: 'large',
                            text: 'Enregistrer',
                            listeners: {
                                afterrender: {
                                    fn: me.onWorkspaceSaveAfterRender,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'buttongroup',
                            disabled: true,
                            id: 'mlUsersManager',
                            headerPosition: 'bottom',
                            title: 'Manage users',
                            columns: 3,
                            items: [
                                {
                                    xtype: 'button',
                                    id: 'mlAddUser',
                                    iconAlign: 'top',
                                    iconCls: 'user_add_big',
                                    scale: 'large',
                                    text: 'Subscribe'
                                },
                                {
                                    xtype: 'button',
                                    disabled: true,
                                    id: 'mlRemoveUser',
                                    iconAlign: 'top',
                                    iconCls: 'user_remove_big',
                                    scale: 'large',
                                    text: 'Unsubscribe'
                                },
                                {
                                    xtype: 'button',
                                    id: 'mlExportUsersBtn',
                                    iconAlign: 'top',
                                    iconCls: 'user_down_big',
                                    scale: 'large',
                                    text: 'Export'
                                }
                            ]
                        },
                        {
                            xtype: 'tbfill'
                        }
                    ]
                }
            ],
            items: [
                {
                    xtype: 'gridpanel',
                    id: 'MLMainGrid',
                    width: 200,
                    title: '',
                    forceFit: true,
                    store: 'MailingListsCombo',
                    columns: [
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                if (record.get("readOnly")) {
                                    return("<i style=\"color:#777;\">"+value+"</i>");
                                } else {
                                    return(value);
                                }
                            },
                            localiserId: 'nameColumn',
                            dataIndex: 'name',
                            text: 'Nom'
                        }
                    ]
                },
                {
                    xtype: 'tabpanel',
                    flex: 1,
                    disabled: true,
                    activeTab: 0,
                    items: [
                        {
                            xtype: 'form',
                            localiserId: 'propertiesForm',
                            id: 'MLPropsForm',
                            autoScroll: true,
                            bodyPadding: 10,
                            title: 'Propriétés',
                            items: [
                                {
                                    xtype: 'textfield',
                                    localiserId: 'nameField',
                                    anchor: '100%',
                                    fieldLabel: 'Nom',
                                    labelWidth: 140,
                                    name: 'name',
                                    allowBlank: false
                                },
                                {
                                    xtype: 'WorkspaceCombo',
                                    fieldLabel: 'Espaces de travail',
                                    labelWidth: 140,
                                    name: 'workspaces',
                                    multiSelect: true,
                                    store: 'ContributeWorkspacesCombo',
                                    anchor: '100%'
                                },
                                {
                                    xtype: 'fieldset',
                                    localiserId: 'expeditorFieldset',
                                    title: 'Expéditeur',
                                    items: [
                                        {
                                            xtype: 'textfield',
                                            localiserId: 'expeditorAdressField',
                                            anchor: '100%',
                                            fieldLabel: 'Adresse de l\'expéditeur',
                                            labelWidth: 140,
                                            name: 'fromAddress',
                                            vtype: 'email'
                                        },
                                        {
                                            xtype: 'textfield',
                                            localiserId: 'expeditorNameField',
                                            anchor: '100%',
                                            fieldLabel: 'Nom de l\'expéditeur',
                                            labelWidth: 140,
                                            name: 'fromName'
                                        }
                                    ]
                                },
                                {
                                    xtype: 'fieldset',
                                    localiserId: 'responseFieldset',
                                    title: 'Réponse',
                                    items: [
                                        {
                                            xtype: 'textfield',
                                            localiserId: 'replyToAdressField',
                                            anchor: '100%',
                                            fieldLabel: 'Adresse de réponse',
                                            labelWidth: 140,
                                            name: 'replyToAddress',
                                            vtype: 'email'
                                        },
                                        {
                                            xtype: 'textfield',
                                            localiserId: 'replyToNameField',
                                            anchor: '100%',
                                            fieldLabel: 'Nom de réponse',
                                            labelWidth: 140,
                                            name: 'replyToName'
                                        }
                                    ]
                                },
                                {
                                    xtype: 'textfield',
                                    localiserId: 'returnPathAdressField',
                                    anchor: '100%',
                                    fieldLabel: 'Adresse d\'erreur',
                                    labelWidth: 140,
                                    name: 'returnPathAddress',
                                    vtype: 'email'
                                }
                            ]
                        },
                        {
                            xtype: 'gridpanel',
                            id: 'MLUsersGrid',
                            title: 'Users',
                            forceFit: true,
                            store: 'MLUsers',
                            columns: [
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'name',
                                    text: 'Name'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'email',
                                    text: 'Email'
                                },
                                {
                                    xtype: 'datecolumn',
                                    dataIndex: 'createTime',
                                    text: 'Creation'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                        try {
                                            var myDate=value[Ext.getCmp("MLMainGrid").getSelectionModel().getLastSelected().get("id")].date;
                                            return(Ext.util.Format.date(Ext.Date.parse(myDate,"U")));
                                        } catch(err){
                                            return("");
                                        }
                                    },
                                    dataIndex: 'mailingLists',
                                    text: 'Subscription'
                                }
                            ],
                            dockedItems: [
                                {
                                    xtype: 'pagingtoolbar',
                                    dock: 'bottom',
                                    width: 360,
                                    displayInfo: true,
                                    store: 'MLUsers'
                                }
                            ],
                            selModel: Ext.create('Ext.selection.CheckboxModel', {

                            })
                        }
                    ]
                }
            ],
            tools: [
                {
                    xtype: 'mytool16'
                },
                {
                    xtype: 'mytool17'
                }
            ]
        });

        me.callParent(arguments);
    },

    onWorkspaceSaveAfterRender: function(component, eOpts) {
        component.findParentByType("window").getEl().addKeyListener({key:"s", ctrl:true}, function(e,t){
        if (!component.disabled){
            component.fireEvent("click", component);
            t.stopEvent();
        }
    });
    }

});