/*
 * File: app/view/OpenFieldConfigurator.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Rubedo.view.OpenFieldConfigurator', {
    extend: 'Ext.window.Window',
    alias: 'widget.OpenFieldConfigurator',

    height: 286,
    id: 'OpenFieldConfigurator',
    width: 632,
    resizable: false,
    layout: {
        align: 'stretch',
        type: 'vbox'
    },
    title: 'Editeur de question ouverte',
    constrain: true,
    modal: true,

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'bottom',
                    items: [
                        {
                            xtype: 'tbfill'
                        },
                        {
                            xtype: 'button',
                            id: 'OpenFieldConfiguratorSubmit',
                            iconCls: 'ouiSpetit',
                            text: 'Valider',
                            listeners: {
                                click: {
                                    fn: me.onOpenFieldConfiguratorSubmitClick,
                                    scope: me
                                }
                            }
                        }
                    ]
                }
            ],
            items: [
                {
                    xtype: 'form',
                    border: 0,
                    height: 134,
                    bodyPadding: 10,
                    title: '',
                    items: [
                        {
                            xtype: 'textfield',
                            anchor: '100%',
                            name: 'fieldLabel',
                            fieldLabel: 'Label de la question',
                            labelWidth: 140
                        },
                        {
                            xtype: 'textfield',
                            anchor: '100%',
                            name: 'qNb',
                            fieldLabel: 'Code de la question',
                            labelWidth: 140
                        },
                        {
                            xtype: 'textfield',
                            anchor: '100%',
                            name: 'tooltip',
                            fieldLabel: 'Bulle d\'aide',
                            labelWidth: 140
                        },
                        {
                            xtype: 'checkboxfield',
                            anchor: '100%',
                            name: 'mandatory',
                            fieldLabel: 'Obligatoire',
                            labelWidth: 140,
                            boxLabel: '',
                            inputValue: 'true'
                        },
                        {
                            xtype: 'radiogroup',
                            fieldLabel: 'Type de champ',
                            labelSeparator: ' ',
                            labelWidth: 140,
                            items: [
                                {
                                    xtype: 'radiofield',
                                    name: 'fieldType',
                                    boxLabel: 'Texte',
                                    inputValue: 'textfield'
                                },
                                {
                                    xtype: 'radiofield',
                                    name: 'fieldType',
                                    boxLabel: 'Nombre',
                                    inputValue: 'numberfield'
                                },
                                {
                                    xtype: 'radiofield',
                                    name: 'fieldType',
                                    boxLabel: 'Date',
                                    inputValue: 'datefield'
                                },
                                {
                                    xtype: 'radiofield',
                                    name: 'fieldType',
                                    boxLabel: 'Temps',
                                    inputValue: 'timefield'
                                }
                            ],
                            listeners: {
                                change: {
                                    fn: me.onRadiogroupChange,
                                    scope: me
                                }
                            }
                        }
                    ]
                },
                {
                    xtype: 'container',
                    flex: 1,
                    activeItem: 1,
                    id: 'CameleonicFormContainer',
                    layout: {
                        type: 'card'
                    },
                    items: [
                        {
                            xtype: 'form',
                            border: 0,
                            itemId: 'textfield',
                            bodyPadding: 10,
                            title: '',
                            items: [
                                {
                                    xtype: 'numberfield',
                                    anchor: '100%',
                                    name: 'minLength',
                                    fieldLabel: 'Longueur min',
                                    labelWidth: 140,
                                    allowDecimals: false,
                                    minValue: 0
                                },
                                {
                                    xtype: 'numberfield',
                                    anchor: '100%',
                                    name: 'maxLength',
                                    fieldLabel: 'Longueur max',
                                    labelWidth: 140,
                                    allowDecimals: false,
                                    minValue: 0
                                },
                                {
                                    xtype: 'combobox',
                                    anchor: '100%',
                                    name: 'vtype',
                                    fieldLabel: 'Validation',
                                    labelWidth: 140,
                                    forceSelection: true,
                                    multiSelect: false,
                                    store: [
                                        'alpha',
                                        'alphanum',
                                        'email',
                                        'url'
                                    ]
                                }
                            ]
                        },
                        {
                            xtype: 'form',
                            border: 0,
                            itemId: 'numberfield',
                            bodyPadding: 10,
                            title: '',
                            items: [
                                {
                                    xtype: 'numberfield',
                                    anchor: '100%',
                                    name: 'minValue',
                                    fieldLabel: 'Valeur min',
                                    labelWidth: 140
                                },
                                {
                                    xtype: 'numberfield',
                                    anchor: '100%',
                                    name: 'maxValue',
                                    fieldLabel: 'Valeur max',
                                    labelWidth: 140
                                },
                                {
                                    xtype: 'checkboxfield',
                                    anchor: '100%',
                                    name: 'allowDecimals',
                                    fieldLabel: 'DÃ©cimales',
                                    labelWidth: 140,
                                    boxLabel: ''
                                }
                            ]
                        },
                        {
                            xtype: 'form',
                            border: 0,
                            itemId: 'datefield',
                            bodyPadding: 10,
                            title: '',
                            items: [
                                {
                                    xtype: 'datefield',
                                    anchor: '100%',
                                    name: 'minValue',
                                    fieldLabel: 'Valeur min',
                                    labelWidth: 140
                                },
                                {
                                    xtype: 'datefield',
                                    anchor: '100%',
                                    name: 'maxValue',
                                    fieldLabel: 'Valeur max',
                                    labelWidth: 140
                                }
                            ]
                        },
                        {
                            xtype: 'form',
                            border: 0,
                            itemId: 'timefield',
                            bodyPadding: 10,
                            title: '',
                            items: [
                                {
                                    xtype: 'timefield',
                                    anchor: '100%',
                                    name: 'minValue',
                                    fieldLabel: 'Valeur min',
                                    labelWidth: 140
                                },
                                {
                                    xtype: 'timefield',
                                    anchor: '100%',
                                    name: 'maxValue',
                                    fieldLabel: 'Valeur max',
                                    labelWidth: 140
                                }
                            ]
                        }
                    ]
                }
            ],
            listeners: {
                afterrender: {
                    fn: me.onOpenFieldConfiguratorAfterRender,
                    scope: me
                }
            }
        });

        me.callParent(arguments);
    },

    onOpenFieldConfiguratorSubmitClick: function(button, e, options) {
        var initialValues = Ext.clone(button.up().up().initialItemConfig);
        var myId = Ext.clone(button.up().up().targetedId);
        var form = button.up().up().getComponent(0).getForm();
        var form2=Ext.getCmp("CameleonicFormContainer").getLayout().getActiveItem().getForm();
        if ((form.isValid())&&(form2.isValid())) {
            var newData = Ext.clone(form.getFieldValues());
            var partData = form2.getFieldValues();
            Ext.Object.each(partData, function(key,value,it){
                if (Ext.isEmpty(value)){
                    it[key]=undefined;
                }
            });
            Ext.apply(newData,partData);
            initialValues.fieldType=newData.fieldType;
            initialValues.label=newData.fieldLabel;
            initialValues.tooltip=newData.tooltip;
            initialValues.qNb=newData.qNb;
            delete newData.fieldType;
            delete newData.fieldLabel;
            delete newData.tooltip;
            initialValues.fieldConfig=newData;
            Ext.getCmp(myId).itemConfig=initialValues;
            button.up().up().close();
            Ext.getCmp(myId).sync();
        }
    },

    onRadiogroupChange: function(field, newValue, oldValue, options) {
        Ext.getCmp("CameleonicFormContainer").getLayout().setActiveItem(Ext.getCmp("CameleonicFormContainer").getComponent(newValue.fieldType));
    },

    onOpenFieldConfiguratorAfterRender: function(abstractcomponent, options) {
        var initialValues = Ext.clone(abstractcomponent.initialItemConfig.fieldConfig);
        initialValues.fieldType= Ext.clone(abstractcomponent.initialItemConfig.fieldType);
        initialValues.fieldLabel=Ext.clone(abstractcomponent.initialItemConfig.label);
        initialValues.tooltip=Ext.clone(abstractcomponent.initialItemConfig.tooltip);
        initialValues.qNb=Ext.clone(abstractcomponent.initialItemConfig.qNb);
        abstractcomponent.getComponent(0).getForm().setValues(initialValues);
        var task = new Ext.util.DelayedTask(function(){
            Ext.getCmp("CameleonicFormContainer").getLayout().getActiveItem().getForm().setValues(initialValues);
        });
        task.delay(200);
    }

});