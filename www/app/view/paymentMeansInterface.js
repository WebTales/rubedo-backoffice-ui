/*
 * File: app/view/paymentMeansInterface.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Rubedo.view.paymentMeansInterface', {
    extend: 'Ext.window.Window',
    alias: 'widget.paymentMeansInterface',

    requires: [
        'Rubedo.view.MyTool16',
        'Rubedo.view.MyTool17'
    ],

    height: 471,
    id: 'paymentMeansInterface',
    width: 753,
    layout: {
        align: 'stretch',
        type: 'hbox'
    },
    constrainHeader: true,
    iconCls: 'credit_card',
    title: 'Payment means',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            tools: [
                {
                    xtype: 'mytool16'
                },
                {
                    xtype: 'mytool17'
                }
            ],
            items: [
                {
                    xtype: 'gridpanel',
                    width: 200,
                    title: '',
                    forceFit: true,
                    store: 'PaymentMeans',
                    columns: [
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'name',
                            text: 'Name'
                        }
                    ]
                },
                {
                    xtype: 'form',
                    flex: 1,
                    bodyPadding: 10,
                    title: 'Configuration',
                    dockedItems: [
                        {
                            xtype: 'toolbar',
                            dock: 'bottom',
                            items: [
                                {
                                    xtype: 'tbfill'
                                },
                                {
                                    xtype: 'button',
                                    iconCls: 'save',
                                    text: 'Save configuration'
                                }
                            ]
                        }
                    ]
                }
            ],
            listeners: {
                render: {
                    fn: me.onPaymentMeansInterfaceRender,
                    scope: me
                },
                beforeclose: {
                    fn: me.onPaymentMeansInterfaceBeforeClose,
                    scope: me
                }
            }
        });

        me.callParent(arguments);
    },

    onPaymentMeansInterfaceRender: function(component, eOpts) {
        Ext.getStore("PaymentMeans").load();
    },

    onPaymentMeansInterfaceBeforeClose: function(panel, eOpts) {
        Ext.getStore("PaymentMeans").removeAll();
    }

});