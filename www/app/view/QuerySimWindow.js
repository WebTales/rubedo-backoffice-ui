/*
 * File: app/view/QuerySimWindow.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Rubedo.view.QuerySimWindow', {
    extend: 'Ext.window.Window',
    alias: 'widget.QuerySimWindow',

    height: 407,
    width: 355,
    layout: {
        type: 'fit'
    },
    title: 'Query result simulation',
    modal: true,

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'gridpanel',
                    title: '',
                    forceFit: true,
                    store: 'QuerySim',
                    columns: [
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'text',
                            text: 'Title'
                        }
                    ],
                    dockedItems: [
                        {
                            xtype: 'pagingtoolbar',
                            dock: 'bottom',
                            width: 360,
                            displayInfo: true,
                            store: 'QuerySim'
                        }
                    ]
                }
            ],
            listeners: {
                afterrender: {
                    fn: me.onWindowAfterRender,
                    scope: me
                },
                beforeclose: {
                    fn: me.onWindowBeforeClose,
                    scope: me
                }
            }
        });

        me.callParent(arguments);
    },

    onWindowAfterRender: function(component, eOpts) {
        component.getComponent(0).getStore().getProxy().extraParams.query=component.queryId;
        component.getComponent(0).getStore().loadPage(1);
    },

    onWindowBeforeClose: function(panel, eOpts) {
        panel.getComponent(0).getStore().removeAll();
    }

});