/*
 * File: app/view/adminFUtilisateurs.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Rubedo.view.adminFUtilisateurs', {
    extend: 'Ext.window.Window',
    alias: 'widget.adminFUtilisateurs',

    height: 578,
    id: 'adminFUtilisateurs',
    width: 1000,
    layout: {
        align: 'stretch',
        type: 'hbox'
    },
    iconCls: 'user',
    title: 'Groupes',
    constrainHeader: true,

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            tools: [
                {
                    xtype: 'tool',
                    itemId: 'windowMinimize',
                    type: 'minimize'
                },
                {
                    xtype: 'tool',
                    itemId: 'windowMaximize',
                    type: 'maximize'
                }
            ],
            dockedItems: [
                {
                    xtype: 'toolbar',
                    flex: 1,
                    dock: 'top',
                    height: 30,
                    itemId: 'filArianne',
                    items: [
                        {
                            xtype: 'button',
                            itemId: 'origine',
                            iconCls: 'user',
                            text: 'Groupes <b>></b> '
                        }
                    ]
                },
                {
                    xtype: 'toolbar',
                    flex: 1,
                    dock: 'bottom',
                    height: 50,
                    itemId: 'barreMeta',
                    items: [
                        {
                            xtype: 'image',
                            height: 45,
                            width: 48,
                            listeners: {
                                render: {
                                    fn: me.onImageRender,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'container',
                            itemId: 'boiteBarreMeta',
                            margin: '0 0 0 10',
                            styleHtmlContent: true,
                            tpl: [
                                '<p> <b> {name} </b> {userNb} {calif} </p>'
                            ]
                        }
                    ]
                },
                {
                    xtype: 'toolbar',
                    flex: 1,
                    dock: 'top',
                    height: 86,
                    itemId: 'contextBar',
                    items: [
                        {
                            xtype: 'button',
                            id: 'groupAddButton',
                            iconAlign: 'top',
                            iconCls: 'add_big',
                            scale: 'large',
                            text: 'Ajouter'
                        },
                        {
                            xtype: 'button',
                            disabled: true,
                            id: 'groupDeleteButton',
                            iconAlign: 'top',
                            iconCls: 'remove_big',
                            scale: 'large',
                            text: 'Supprimer'
                        },
                        {
                            xtype: 'buttongroup',
                            disabled: true,
                            header: true,
                            headerPosition: 'bottom',
                            overlapHeader: false,
                            title: 'Edition',
                            columns: 2,
                            items: [
                                {
                                    xtype: 'button',
                                    id: 'userAddButton',
                                    iconAlign: 'top',
                                    iconCls: 'user_add_big',
                                    scale: 'large',
                                    text: 'Ajouter'
                                },
                                {
                                    xtype: 'button',
                                    id: 'userRemoveButton',
                                    iconAlign: 'top',
                                    iconCls: 'user_remove_big',
                                    scale: 'large',
                                    text: 'Supprimer'
                                }
                            ]
                        },
                        {
                            xtype: 'tbfill'
                        },
                        {
                            xtype: 'button',
                            itemId: 'boutonAide',
                            iconCls: 'info_big',
                            scale: 'large',
                            text: ''
                        }
                    ]
                }
            ],
            items: [
                {
                    xtype: 'treepanel',
                    flex: 0.4,
                    id: 'groupsGrid',
                    title: '',
                    hideHeaders: false,
                    store: 'GroupsDataStore',
                    displayField: 'name',
                    folderSort: false,
                    rootVisible: false,
                    singleExpand: false,
                    useArrows: true,
                    viewConfig: {
                        plugins: [
                            Ext.create('Ext.tree.plugin.TreeViewDragDrop', {
                                ptype: 'treeviewdragdrop'
                            })
                        ]
                    },
                    columns: [
                        {
                            xtype: 'treecolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                return ('<img src="resources/icones/'+MyPrefData.iconsDir+'/16x16/users.png"> '+value);
                            },
                            dataIndex: 'name',
                            flex: 1,
                            text: 'Nom'
                        }
                    ]
                },
                {
                    xtype: 'tabpanel',
                    flex: 1,
                    activeTab: 0,
                    items: [
                        {
                            xtype: 'panel',
                            layout: {
                                type: 'fit'
                            },
                            title: 'Utilisateurs',
                            items: [
                                {
                                    xtype: 'gridpanel',
                                    id: 'UsersInGroupGrid',
                                    title: '',
                                    store: 'UsersGroupStore',
                                    viewConfig: {

                                    },
                                    columns: [
                                        {
                                            xtype: 'gridcolumn',
                                            dataIndex: 'name',
                                            flex: 1,
                                            text: 'Nom'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            dataIndex: 'email',
                                            flex: 1,
                                            text: 'Email'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            dataIndex: 'telephone',
                                            flex: 1,
                                            text: 'Téléphone'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            dataIndex: 'adress',
                                            flex: 1,
                                            text: 'Adresse'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            dataIndex: 'position',
                                            flex: 1,
                                            text: 'Poste'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            dataIndex: 'department',
                                            flex: 1,
                                            text: 'Département'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'groups',
                                            flex: 1,
                                            text: 'Groupes'
                                        },
                                        {
                                            xtype: 'datecolumn',
                                            hidden: true,
                                            dataIndex: 'creationDate',
                                            flex: 1,
                                            text: 'Création'
                                        },
                                        {
                                            xtype: 'datecolumn',
                                            hidden: true,
                                            dataIndex: 'lastUpdate',
                                            flex: 1,
                                            text: 'Dernière modification'
                                        }
                                    ],
                                    selModel: Ext.create('Ext.selection.CheckboxModel', {

                                    })
                                }
                            ]
                        },
                        {
                            xtype: 'panel',
                            layout: {
                                type: 'fit'
                            },
                            title: 'Droits',
                            items: [
                                {
                                    xtype: 'panel',
                                    layout: {
                                        type: 'accordion'
                                    },
                                    title: '',
                                    items: [
                                        {
                                            xtype: 'panel',
                                            title: 'Sites'
                                        },
                                        {
                                            xtype: 'panel',
                                            title: 'Types de contenus'
                                        },
                                        {
                                            xtype: 'panel',
                                            title: 'Médias'
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    },

    onImageRender: function(abstractcomponent, options) {
        abstractcomponent.setSrc('resources/icones/'+MyPrefData.iconsDir+'/48x48/users.png');
    }

});