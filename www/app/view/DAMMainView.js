/*
 * File: app/view/DAMMainView.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Rubedo.view.DAMMainView', {
    extend: 'Ext.grid.Panel',
    alias: 'widget.DAMMainView',

    requires: [
        'Rubedo.view.override.DAMMainView',
        'Ext.ux.container.SwitchButtonSegment'
    ],

    title: '',
    forceFit: true,
    store: 'DAMStore',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            viewConfig: {
                id: 'DAMImageDrop'
            },
            columns: [
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        if (record.get("readOnly")){
                            return("<i style=\"color:#777;\">"+value+"</i>");
                        } else {
                            return(value);
                        }
                    },
                    filter: true,
                    localiserId: 'titleColumn',
                    dataIndex: 'text',
                    text: 'Titre'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        if (Ext.getCmp("DAMInterface").currentViewMode=="search"){
                            var availableLanguages=record.get("availableLanguages");
                            var returner="";
                            Ext.Array.forEach(availableLanguages,function(item){
                                try{var myFlagCode2=Ext.getStore("AllLanguagesStore3").query("locale",item,false,false,true).items[0].get("flagCode");}
                                catch(err){var myFlagCode2="_unknown";}
                                returner=returner+" <img src=\"/assets/flags/16/"+myFlagCode2+".png\"> ";
                            });
                            return(returner);
                        } else {
                            try{var myFlagCode=Ext.getStore("AllLanguagesStore3").query("locale",record.get("locale"),false,false,true).items[0].get("flagCode");}
                            catch(err){var myFlagCode="_unknown";}
                            var returner =" <img src=\"/assets/flags/16/"+myFlagCode+".png\"> ";
                            if(!Ext.isEmpty(value)){
                                Ext.Object.each(value, function(key, value, myself) {
                                    if (key!=record.get("locale")){
                                        try{var myFlagCode2=Ext.getStore("AllLanguagesStore3").query("locale",key,false,false,true).items[0].get("flagCode");}
                                        catch(err){var myFlagCode2="_unknown";}
                                        returner=returner+" <img src=\"/assets/flags/16/"+myFlagCode2+".png\"> ";
                                    }
                                });
                            }
                            return(returner);
                        }
                    },
                    dataIndex: 'i18n',
                    text: 'Languages'
                },
                {
                    xtype: 'gridcolumn',
                    localiserId: 'authorColumn',
                    dataIndex: 'author',
                    text: 'Auteur'
                },
                {
                    xtype: 'datecolumn',
                    localiserId: 'createDateColumn',
                    dataIndex: 'lastUpdateTime',
                    text: 'Date de cr√©ation',
                    format: 'd-m-Y'
                }
            ]
        });

        me.callParent(arguments);
    }

});