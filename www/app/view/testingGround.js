/*
 * File: app/view/testingGround.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Rubedo.view.testingGround', {
    extend: 'Ext.window.Window',
    alias: 'widget.testingGround',

    height: 450,
    id: 'testingGround',
    width: 959,
    layout: {
        type: 'fit'
    },
    title: 'Testing ground',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'form',
                    overflowY: 'scroll',
                    bodyPadding: 20,
                    title: 'My Form',
                    items: [
                        {
                            xtype: 'textareafield',
                            anchor: '100%',
                            fieldLabel: 'Label'
                        }
                    ],
                    listeners: {
                        afterrender: {
                            fn: me.onFormAfterRender,
                            scope: me
                        }
                    }
                }
            ],
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'top',
                    items: [
                        {
                            xtype: 'splitbutton',
                            cls: 'show-cross',
                            allowDepress: false,
                            enableToggle: true,
                            pressed: true,
                            text: 'MyButton'
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    },

    onFormAfterRender: function(abstractcomponent, options) {
        var homePageSelector = Ext.create("Ext.ux.TreePicker", {
            store:Ext.getStore("PagePickerStore"),
            displayField:"text",
            labelWidth:110,
            fieldLabel:"Page d'accueil",
            id:"sitesHomePicker",
            anchor: "100%",
            name:"homePage"
        });
        abstractcomponent.add(homePageSelector);
    }

});