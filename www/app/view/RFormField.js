/*
 * File: app/view/RFormField.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Rubedo.view.RFormField', {
    extend: 'Ext.panel.Panel',
    alias: 'widget.RFormField',

    isPortlet: 'true',
    draggable: {
        moveOnDrag: false
    },
    frame: false,
    minHeight: 50,
    layout: {
        type: 'anchor'
    },
    bodyCls: 'noBordered',
    bodyPadding: 10,
    frameHeader: false,

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            listeners: {
                afterrender: {
                    fn: me.onPanelAfterRender,
                    scope: me
                }
            },
            dockedItems: [
                {
                    xtype: 'container',
                    dock: 'top',
                    hidden: true,
                    itemId: 'editBar',
                    layout: {
                        align: 'stretch',
                        pack: 'end',
                        type: 'hbox'
                    },
                    items: [
                        {
                            xtype: 'button',
                            itemId: 'formFieldCofiguratorBtn',
                            iconCls: 'pencil_med',
                            scale: 'medium',
                            text: '',
                            tooltip: 'Param√®tres'
                        },
                        {
                            xtype: 'button',
                            itemId: 'formFieldConditionsBtn',
                            margin: '0 0 0 10',
                            iconCls: 'cond_med',
                            scale: 'medium',
                            text: '',
                            tooltip: 'Condition d\'affichage'
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    },

    onPanelAfterRender: function(abstractcomponent, options) {
        this.sync();
    },

    sync: function() {
        var me=this;
        me.removeAll();
        if ((me.itemConfig.fType=="openQuestion")||(me.itemConfig.fType=="multiChoiceQuestion")){
            var previewField = Ext.widget(me.itemConfig.fieldType, me.itemConfig.fieldConfig);
            previewField.anchor = "100%";
            previewField.labelAlign="top";
            previewField.fieldLabel="<b>"+me.itemConfig.qNb+" </b> "+me.itemConfig.label;
            if (!Ext.isEmpty(me.itemConfig.tooltip)){
                previewField.RTip=me.itemConfig.tooltip;
            }
            me.add(previewField);
        } else if (me.itemConfig.fType=="richText") {
            me.update(me.itemConfig.html);
        }
        me.doLayout();    
    }

});