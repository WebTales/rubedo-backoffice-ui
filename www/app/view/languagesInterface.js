/*
 * File: app/view/languagesInterface.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Rubedo.view.languagesInterface', {
    extend: 'Ext.window.Window',
    alias: 'widget.languagesInterface',

    requires: [
        'Rubedo.view.MyTool16'
    ],

    height: 368,
    id: 'languagesInterface',
    width: 281,
    layout: {
        type: 'fit'
    },
    iconCls: 'world_small',
    title: 'Languages',
    constrain: true,

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                me.processMyGridPanel1({
                    xtype: 'gridpanel',
                    managesStore: true,
                    title: '',
                    forceFit: false,
                    store: 'MainLanguagesStore',
                    viewConfig: {
                        preserveScrollOnRefresh: true
                    },
                    columns: [
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                return('<img src="/assets/flags/16/'+record.get("iso2").toUpperCase()+'.png"> '+value);
                            },
                            dataIndex: 'label',
                            text: 'Name',
                            flex: 1
                        }
                    ]
                })
            ],
            tools: [
                {
                    xtype: 'mytool16'
                }
            ]
        });

        me.callParent(arguments);
    },

    processMyGridPanel1: function(config) {
        config.columns.push(Ext.create("Ext.ux.CheckColumn",{
            text: 'Active',
            dataIndex: 'active',
            width:60,
            listeners:{
                beforecheckchange:function(cc,ix,isChecked){
                    if((!isChecked)&&(Ext.getStore("MainLanguagesStore").query("active",true).items.length<=1)){
                        var task = new Ext.util.DelayedTask(function(){
                            Ext.Msg.alert(Rubedo.RubedoAutomatedElementsLoc.errorTitle,Rubedo.RubedoAutomatedElementsLoc.atLeastOneLocError);
                        });
                        task.delay(200);
                        return(false);
                    }
                }
            }
        }));
        return config;
    }

});