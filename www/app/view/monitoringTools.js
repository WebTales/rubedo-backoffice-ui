/*
 * File: app/view/monitoringTools.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Rubedo.view.monitoringTools', {
    extend: 'Ext.window.Window',
    alias: 'widget.monitoringTools',

    requires: [
        'Rubedo.view.SystemStatusPanel',
        'Rubedo.view.MyTool16',
        'Rubedo.view.MyTool17'
    ],

    ACL: 'exe.ui.elasticSearch',
    height: 658,
    id: 'monitoringTools',
    width: 1016,
    layout: {
        type: 'fit'
    },
    iconCls: 'monitoring',
    title: 'Supervision',
    constrainHeader: true,
    maximizable: false,
    minimizable: false,

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'tabpanel',
                    activeTab: 0,
                    items: [
                        {
                            xtype: 'panel',
                            layout: {
                                type: 'fit'
                            },
                            title: 'Qualité & Accessibilité',
                            items: [
                                {
                                    xtype: 'container',
                                    autoEl: {
                                        tag: 'iframe',
                                        src: 'https://reporting.opquast.com/fr/projects/20223/inspector/indicators/'
                                    }
                                }
                            ]
                        },
                        {
                            xtype: 'panel',
                            layout: {
                                type: 'fit'
                            },
                            title: 'Performances',
                            items: [
                                {
                                    xtype: 'SystemStatusPanel'
                                }
                            ]
                        },
                        {
                            xtype: 'panel',
                            height: 500,
                            id: 'ESWindow',
                            width: 1100,
                            layout: {
                                type: 'fit'
                            },
                            title: 'ElasticSearch',
                            dockedItems: [
                                {
                                    xtype: 'toolbar',
                                    dock: 'bottom',
                                    height: 30,
                                    items: [
                                        {
                                            xtype: 'tbfill'
                                        },
                                        {
                                            xtype: 'button',
                                            handler: function(button, event) {
                                                button.setLoading(true);
                                                Ext.Ajax.request({
                                                    url: 'elastic-indexer?option=content',
                                                    params:{
                                                    },
                                                    success: function(response){
                                                        var answerMe = Ext.widget("esResponseWindow");
                                                        answerMe.getComponent(0).setSource(Ext.JSON.decode(response.responseText));
                                                        Ext.getCmp("ViewportPrimaire").add(answerMe);
                                                        answerMe.show();
                                                        button.setLoading(false);
                                                    },
                                                    failure: function(form, action) {
                                                        switch (action.failureType) {
                                                            case Ext.form.action.Action.CONNECT_FAILURE:
                                                            Ext.Msg.alert('Erreur', 'Erreur Ajax');
                                                            break;
                                                            case Ext.form.action.Action.SERVER_INVALID:
                                                            Ext.Msg.alert('Erreur', 'Erreur Serveur');
                                                        }
                                                    }
                                                });
                                            },
                                            text: '<b>Indexation des contenus</b>'
                                        },
                                        {
                                            xtype: 'button',
                                            handler: function(button, event) {
                                                button.setLoading(true);
                                                Ext.Ajax.request({
                                                    url: 'elastic-indexer?option=dam',
                                                    params:{
                                                    },
                                                    success: function(response){
                                                        var answerMe = Ext.widget("esResponseWindow");
                                                        answerMe.getComponent(0).setSource(Ext.JSON.decode(response.responseText));
                                                        Ext.getCmp("ViewportPrimaire").add(answerMe);
                                                        answerMe.show();
                                                        button.setLoading(false);
                                                    },
                                                    failure: function(form, action) {
                                                        switch (action.failureType) {
                                                            case Ext.form.action.Action.CONNECT_FAILURE:
                                                            Ext.Msg.alert('Erreur', 'Erreur Ajax');
                                                            break;
                                                            case Ext.form.action.Action.SERVER_INVALID:
                                                            Ext.Msg.alert('Erreur', 'Erreur Serveur');
                                                        }
                                                    }
                                                });
                                            },
                                            text: '<b>Indexation des médias</b>'
                                        },
                                        {
                                            xtype: 'button',
                                            handler: function(button, event) {
                                                button.setLoading(true);
                                                Ext.Ajax.request({
                                                    url: 'elastic-indexer?option=all',
                                                    params:{
                                                    },
                                                    success: function(response){
                                                        var answerMe = Ext.widget("esResponseWindow");
                                                        answerMe.getComponent(0).setSource(Ext.JSON.decode(response.responseText));
                                                        Ext.getCmp("ViewportPrimaire").add(answerMe);
                                                        answerMe.show();
                                                        button.setLoading(false);
                                                    },
                                                    failure: function(form, action) {
                                                        switch (action.failureType) {
                                                            case Ext.form.action.Action.CONNECT_FAILURE:
                                                            Ext.Msg.alert('Erreur', 'Erreur Ajax');
                                                            break;
                                                            case Ext.form.action.Action.SERVER_INVALID:
                                                            Ext.Msg.alert('Erreur', 'Erreur Serveur');
                                                        }
                                                    }
                                                });
                                            },
                                            text: '<b>Indexation complète</b>'
                                        }
                                    ]
                                }
                            ],
                            listeners: {
                                render: {
                                    fn: me.onESWindowRender,
                                    scope: me
                                }
                            }
                        }
                    ]
                }
            ],
            tools: [
                {
                    xtype: 'mytool16'
                },
                {
                    xtype: 'mytool17'
                }
            ]
        });

        me.callParent(arguments);
    },

    onESWindowRender: function(abstractcomponent, options) {
        Ext.Ajax.request({
            url:'elastic-search/get-options',
            params:{

            },
            success:function(response){
                var result=Ext.JSON.decode(response.responseText).data;
                abstractcomponent.add(Ext.widget("container",{autoEl: {
                    tag: 'iframe',
                    src: 'http://'+result.host+':'+result.port+'/_plugin/bigdesk/'
                }}));
            },
            failure:function(){
                Ext.Msg.alert('Erreur', 'Erreur dans la récupération de la config ElasticSearch');
            }
        });
    }

});