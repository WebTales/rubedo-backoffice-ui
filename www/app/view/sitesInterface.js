/*
 * File: app/view/sitesInterface.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Rubedo.view.sitesInterface', {
    extend: 'Ext.window.Window',
    alias: 'widget.sitesInterface',

    height: 387,
    id: 'sitesInterface',
    width: 537,
    layout: {
        align: 'stretch',
        type: 'hbox'
    },
    iconCls: 'referencement_icon',
    title: 'Sites',
    constrainHeader: true,
    maximizable: true,
    minimizable: true,

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'top',
                    items: [
                        {
                            xtype: 'button',
                            ACL: 'write.ui.sites',
                            id: 'siteAddBtn',
                            iconCls: 'add',
                            text: 'Ajouter'
                        },
                        {
                            xtype: 'button',
                            ACL: 'write.ui.sites',
                            disabled: true,
                            id: 'siteRemoveBtn',
                            iconCls: 'close',
                            text: 'Supprimer'
                        }
                    ]
                }
            ],
            items: [
                {
                    xtype: 'gridpanel',
                    managesStore: true,
                    id: 'mainSitesGrid',
                    width: 200,
                    title: '',
                    forceFit: true,
                    store: 'SitesJson',
                    viewConfig: {

                    },
                    columns: [
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'text',
                            text: 'Nom',
                            editor: {
                                xtype: 'textfield',
                                allowBlank: false
                            }
                        }
                    ],
                    plugins: [
                        Ext.create('Ext.grid.plugin.CellEditing', {
                            ptype: 'cellediting',
                            listeners: {
                                beforeedit: {
                                    fn: me.onGridcelleditingpluginBeforeEdit,
                                    scope: me
                                }
                            }
                        })
                    ]
                },
                {
                    xtype: 'form',
                    flex: 1,
                    disabled: true,
                    id: 'mainSiteProps',
                    bodyPadding: 10,
                    title: '',
                    items: [
                        {
                            xtype: 'textfield',
                            anchor: '100%',
                            name: 'alias',
                            fieldLabel: 'Alias '
                        },
                        {
                            xtype: 'button',
                            anchor: '100%',
                            id: 'updateSiteBtn',
                            scale: 'large',
                            text: 'Appliquer'
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    },

    onGridcelleditingpluginBeforeEdit: function(editor, e, options) {
        if (!ACL.interfaceRights['write.ui.sites']){return(false);}
    }

});