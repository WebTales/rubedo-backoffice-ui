/*
 * File: app/view/simpleModeMainBar.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Rubedo.view.simpleModeMainBar', {
    extend: 'Ext.toolbar.Toolbar',
    alias: 'widget.simpleModeMainBar',

    height: 40,
    id: 'simpleModeMainBar',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'image',
                    height: 32,
                    width: 32,
                    src: 'resources/images/logoRubedo.png'
                },
                {
                    xtype: 'tbseparator'
                },
                {
                    xtype: 'button',
                    id: 'favoritesAdaptiveMenu',
                    iconCls: 'favoris',
                    text: 'Favorites',
                    menu: {
                        xtype: 'menu',
                        items: [
                            {
                                xtype: 'menuitem',
                                text: 'Menu Item'
                            },
                            {
                                xtype: 'menuitem',
                                text: 'Menu Item'
                            },
                            {
                                xtype: 'menuitem',
                                text: 'Menu Item'
                            }
                        ]
                    }
                },
                {
                    xtype: 'tbseparator'
                },
                {
                    xtype: 'button',
                    ACL: 'read.ui.pages',
                    favoriteIcon: 'application.png',
                    localiserId: 'pagesLaunchBtn',
                    itemId: 'contributionPages',
                    iconCls: 'site-icon',
                    text: 'Pages'
                },
                {
                    xtype: 'button',
                    ACL: 'read.ui.pages',
                    favoriteIcon: 'computer.png',
                    localiserId: 'previewLaunchBtn',
                    itemId: 'contributionPrevisualisation',
                    iconCls: 'personalize',
                    text: 'Prévisualisation'
                },
                {
                    xtype: 'button',
                    ACL: 'read.ui.contents',
                    favoriteIcon: 'page_full.png',
                    localiserId: 'contentsLaunchBtn',
                    itemId: 'contributionContenus',
                    iconCls: 'content-icon',
                    text: 'Contenus'
                },
                {
                    xtype: 'button',
                    ACL: 'read.ui.dam',
                    favoriteIcon: 'images.png',
                    localiserId: 'DAMLaunchBtn',
                    itemId: 'DAMInterface',
                    iconCls: 'mediaTypes',
                    text: 'Médiathèque'
                },
                {
                    xtype: 'tbseparator',
                    ACL: 'read.ui.contents'
                },
                {
                    xtype: 'button',
                    usesMenu: true,
                    usedMenu: 'salamanderStudioMenu',
                    localiserId: 'studioMenuBtn',
                    iconCls: 'applications',
                    text: 'Studio',
                    listeners: {
                        render: {
                            fn: me.onButtonRender2,
                            scope: me
                        }
                    },
                    menu: me.processSpecialStudioMenu11({
                        xtype: 'menu',
                        id: 'specialStudioMenu11'
                    })
                },
                {
                    xtype: 'button',
                    usesMenu: true,
                    usedMenu: 'salamanderAdminMenu',
                    localiserId: 'adminLenuBtn',
                    iconCls: 'process-icon',
                    text: 'Administration',
                    listeners: {
                        render: {
                            fn: me.onButtonRender11,
                            scope: me
                        }
                    },
                    menu: me.processSpecialAdminMenu22({
                        xtype: 'menu',
                        id: 'specialAdminMenu22'
                    })
                },
                {
                    xtype: 'button',
                    favoriteIcon: 'tools.png',
                    localiserId: 'mySettingsLaunchBtn',
                    itemId: 'userSettings',
                    iconCls: 'parametres',
                    text: 'Paramètres'
                },
                {
                    xtype: 'tbfill'
                },
                {
                    xtype: 'button',
                    localiserId: 'logoutBtn',
                    itemId: 'deconnexionMenuPrincipal',
                    iconCls: 'deconecter',
                    text: 'Déconnexion'
                }
            ]
        });

        me.callParent(arguments);
    },

    processSpecialStudioMenu11: function(config) {
        config.items=[
        {
            xtype: 'menuitem',
            ACL: 'read.ui.sites',
            favoriteIcon: 'globe_computer.png',
            itemId: 'sitesInterface',
            iconCls: 'referencement_icon',
            localiserId:'sitesLaunchBtn',
            text: 'Sites'
        },
        {
            xtype: 'menuitem',
            ACL: 'read.ui.masks',
            favoriteIcon: 'application.png',
            itemId: 'adminFMDP',
            iconCls: 'masque-icon',
            localiserId:'masksLaunchBtn',
            text: 'Masques de page'
        },
        {
            xtype: 'menuitem',
            ACL: 'read.ui.contentTypes',
            favoriteIcon: 'page_full.png',
            itemId: 'adminFTDC',
            iconCls: 'content-icon',
            localiserId:'contentTypesLaunchBtn',
            text: 'Types de contenus'
        },
        {
            xtype: 'menuitem',
            ACL: 'read.ui.damTypes',
            favoriteIcon: 'images.png',
            itemId: 'mediaTypesInterface',
            iconCls: 'mediaTypes',
            localiserId:'damTypesLaunchBtn',
            text: 'Types de médias'
        },
        {
            xtype: 'menuitem',
            ACL: 'read.ui.forms',
            favoriteIcon: 'note.edit.png',
            itemId: 'FormsInterface',
            iconCls: 'form_small',
            localiserId:'formsLaunchBtn',
            text: 'Questionnaires'
        },
        {
            xtype: 'menuitem',
            ACL: 'read.ui.customThemes',
            favoriteIcon: 'palette.png',
            itemId: 'CustomThemesInterface',
            iconCls: 'palette',
            localiserId:'customThemesLaunchBtn',
            text: 'Custom Themes'
        }
        ];
        return config;
    },

    processSpecialAdminMenu22: function(config) {
        config.items=[
        {
            xtype: 'menuitem',
            ACL: 'read.ui.queries',
            favoriteIcon: 'database_search.png',
            itemId: 'queryManagerInterface',
            iconCls: 'database_search',
            localiserId:'queriesLaunchBtn',
            text: 'Requêtes'
        },
        {
            xtype: 'menuitem',
            ACL: 'read.ui.taxonomy',
            favoriteIcon: 'tag.png',
            itemId: 'adminFTaxonomie',
            iconCls: 'page_taxonomy',
            localiserId:'taxonomyLaunchBtn',
            text: 'Taxonomie'
        },
        {
            xtype: 'menuitem',
            ACL: 'read.ui.groups',
            favoriteIcon: 'users.png',
            itemId: 'adminFUtilisateurs',
            localiserId:'groupsLaunchBtn',
            iconCls: 'user',
            text: 'Groupes'
        },
        {
            xtype: 'menuitem',
            ACL: 'read.ui.workspaces',
            favoriteIcon: 'users.png',
            itemId: 'WorkspacesInterface',
            localiserId:'workspacesLaunchBtn',
            iconCls: 'user',
            text: 'Espaces de travail'
        },
        {
            xtype: 'menuitem',
            ACL: 'read.ui.users',
            favoriteIcon: 'user_edit.png',
            floating: false,
            itemId: 'UserAdminWindow',
            localiserId:'usersLaunchBtn',
            iconCls: 'user_edit',
            text: 'Utilisateurs'
        },
        {
            xtype: 'menuitem',
            ACL: 'read.ui.technicalDashboard',
            favoriteIcon: 'chart.png',
            itemId: 'monitoringTools',
            localiserId:'monitoringLaunchBtn',
            iconCls: 'monitoring',
            text: 'Supervision'
        },
        {
            xtype: 'menuitem',
            ACL: 'read.ui.workflows',
            favoriteIcon: 'processes.png',
            itemId: 'menuWorkflows',
            iconCls: 'process-icon',
            localiserId:'workflowsLaunchBtn',
            text: 'Workflows'
        },{
            xtype: 'menuitem',
            ACL: 'exe.ui.import',
            favoriteIcon: 'database_up.png',
            itemId: 'InportInterface',
            iconCls: 'database_up_small',
            localiserId:'importLaunchBtn',
            text: 'Import'
        },{
            xtype: 'menuitem',
            ACL: 'read.ui.mailingLists',
            favoriteIcon: 'mail.png',
            itemId: 'MailingListsInterface',
            iconCls: 'mail_small',
            localiserId:'mailingListsLaunchBtn',
            text: 'Listes de diffusion'
        },{
            xtype: 'menuitem',
            ACL: 'read.ui.languages',
            favoriteIcon: 'world.png',
            itemId: 'languagesInterface',
            iconCls: 'world_small',
            localiserId:'languagesLaunchBtn',
            text: 'Languages'
        }
        ];
        return config;
    },

    onButtonRender2: function(component, eOpts) {
        if ((!ACL.interfaceRights["read.ui.sites"])&&(!ACL.interfaceRights["read.ui.masks"])&&(!ACL.interfaceRights["read.ui.contentTypes"])&&(!ACL.interfaceRights["read.ui.damTypes"])){
            component.hide();
        }
    },

    onButtonRender11: function(component, eOpts) {
        if ((!ACL.interfaceRights["read.ui.queries"])&&(!ACL.interfaceRights["read.ui.taxonomy"])&&(!ACL.interfaceRights["read.ui.groups"])&&(!ACL.interfaceRights["read.ui.workspaces"])&&(!ACL.interfaceRights["read.ui.users"])&&(!ACL.interfaceRights["read.ui.technicalDashboard"])&&(!ACL.interfaceRights["read.ui.workflows"])){
            component.hide();
        }
    }

});