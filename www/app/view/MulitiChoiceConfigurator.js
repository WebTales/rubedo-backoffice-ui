/*
 * File: app/view/MulitiChoiceConfigurator.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Rubedo.view.MulitiChoiceConfigurator', {
    extend: 'Ext.window.Window',
    alias: 'widget.MulitiChoiceConfigurator',

    height: 360,
    width: 632,
    resizable: false,
    layout: {
        type: 'fit'
    },
    title: 'Editeur de question choix multiple',
    constrain: true,
    modal: true,

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'bottom',
                    items: [
                        {
                            xtype: 'tbfill'
                        },
                        {
                            xtype: 'button',
                            id: 'MultiChoiceConfiguratorSubmit',
                            iconCls: 'ouiSpetit',
                            text: 'Valider'
                        }
                    ]
                }
            ],
            items: [
                {
                    xtype: 'form',
                    bodyPadding: 10,
                    title: '',
                    items: [
                        {
                            xtype: 'textfield',
                            anchor: '100%',
                            fieldLabel: 'Label de la question',
                            labelWidth: 140
                        },
                        {
                            xtype: 'textfield',
                            anchor: '100%',
                            fieldLabel: 'Bulle d\'aide',
                            labelWidth: 140
                        },
                        {
                            xtype: 'checkboxfield',
                            anchor: '100%',
                            fieldLabel: 'Facultatif',
                            labelWidth: 140,
                            boxLabel: ''
                        },
                        {
                            xtype: 'radiogroup',
                            fieldLabel: 'Mode',
                            labelWidth: 140,
                            items: [
                                {
                                    xtype: 'radiofield',
                                    boxLabel: 'Une seule réponse'
                                },
                                {
                                    xtype: 'radiofield',
                                    boxLabel: 'Plusieurs réponses'
                                }
                            ]
                        },
                        {
                            xtype: 'numberfield',
                            anchor: '100%',
                            fieldLabel: 'Nombre de colonnes',
                            labelWidth: 140
                        }
                    ]
                }
            ],
            listeners: {
                render: {
                    fn: me.onWindowRender,
                    scope: me
                }
            }
        });

        me.callParent(arguments);
    },

    onWindowRender: function(abstractcomponent, options) {
        var optionPicker = Ext.create("Ext.ux.form.field.BoxSelect", {
            store:[],
            anchor:"100%",
            name:"answers",
            fieldLabel:"Réponses possibles",
            labelWidth:140,
            queryMode:"local",
            submitValue:false,
            multiSelect:true,
            forceSelection:false,
            createNewOnEnter:true,
            hideTrigger:true,
            triggerOnClick:false,
            createNewOnBlur:true,
            stacked:true,
            allowBlank:true
        });
        abstractcomponent.getComponent(0).add(optionPicker);
    }

});