/*
 * File: app/view/GFSFileField.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Rubedo.view.GFSFileField', {
    extend: 'Ext.form.field.Hidden',
    alias: 'widget.GFSFileField',

    height: 0,
    fieldLabel: 'Label',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            listeners: {
                render: {
                    fn: me.onHiddenfieldRender,
                    scope: me
                }
            }
        });

        me.callParent(arguments);
    },

    onHiddenfieldRender: function(abstractcomponent, options) {
        var sizer="";
        if (abstractcomponent.bigMode) {
            var myComponent = Ext.widget("GFSFileFieldComponentBig");
        } else {
            var myComponent = Ext.widget("GFSFileFieldComponent");
            sizer="&size=thumbnail";
        }
        myComponent.getComponent(0).setText(abstractcomponent.fieldLabel+" ");
        myComponent.getComponent("buttonHolder").getComponent("fieldDownloadFile").on("click", function(){
            window.location.href="file/get?file-id="+abstractcomponent.getValue()+"&attachment=download";
        });
        myComponent.getComponent("buttonHolder").getComponent("fieldPreviewFile").on("click", function(){
            if (abstractcomponent.fileType=="Image"){
                var showBox = Ext.widget("ImagePreviewWindow", {maxWidth:window.innerWidth, maxHeight:window.innerHeight});
                showBox.getComponent(0).setSrc("image/get?file-id="+abstractcomponent.getValue());
                showBox.show();
            }
            //handle cases one by one
        });
        myComponent.on("afterrender",function(){
            if (Ext.isEmpty(abstractcomponent.getValue())){
                myComponent.getComponent("fieldImagePreview").setSrc("resources/icones/"+MyPrefData.iconsDir+"/128x128/image_remove.png");
                myComponent.getComponent("buttonHolder").getComponent("fieldDownloadFile").disable();
                myComponent.getComponent("buttonHolder").getComponent("fieldClearFile").disable();
                //myComponent.getComponent("buttonHolder").getComponent("fieldEditFile").disable();
                myComponent.getComponent("buttonHolder").getComponent("fieldPreviewFile").disable();
            } else {
                myComponent.getComponent("fieldImagePreview").setSrc("image/get?file-id="+abstractcomponent.getValue()+sizer);
                myComponent.getComponent("buttonHolder").getComponent("fieldDownloadFile").enable();
                myComponent.getComponent("buttonHolder").getComponent("fieldClearFile").enable();
                //myComponent.getComponent("buttonHolder").getComponent("fieldEditFile").enable();
                myComponent.getComponent("buttonHolder").getComponent("fieldPreviewFile").enable();
            }

            myComponent.getEl().on("click",function(){

                abstractcomponent.getEl().dom.click();
            });
        });
        abstractcomponent.up().add(myComponent);
        myComponent.getComponent("buttonHolder").getComponent("fieldChangeFile").on("click",function(){
            Ext.widget("GFSFieldUploadWindow",{targetField:abstractcomponent.id}).show();
        });
        myComponent.getComponent("buttonHolder").getComponent("fieldClearFile").on("click",function(){
            var delCon = Ext.widget('delConfirmZ');
            delCon.show();
            Ext.getCmp('delConfirmZOui').on('click', function() { 
                abstractcomponent.setValue(null);
                delCon.close();
            }); 
        });
        abstractcomponent.on("change",function(theField,newValue){
            if ((newValue==="")||(Ext.isEmpty(newValue))){
                myComponent.getComponent("fieldImagePreview").setSrc("resources/icones/"+MyPrefData.iconsDir+"/128x128/image_remove.png");
                myComponent.getComponent("buttonHolder").getComponent("fieldDownloadFile").disable();
                myComponent.getComponent("buttonHolder").getComponent("fieldClearFile").disable();
                //myComponent.getComponent("buttonHolder").getComponent("fieldEditFile").disable();
                myComponent.getComponent("buttonHolder").getComponent("fieldPreviewFile").disable();

            } else {
                myComponent.getComponent("fieldImagePreview").setSrc("image/get?file-id="+abstractcomponent.getValue()+sizer);
                myComponent.getComponent("buttonHolder").getComponent("fieldDownloadFile").enable();
                myComponent.getComponent("buttonHolder").getComponent("fieldClearFile").enable();
                //myComponent.getComponent("buttonHolder").getComponent("fieldEditFile").enable();
                myComponent.getComponent("buttonHolder").getComponent("fieldPreviewFile").enable();
            }

        });
        if (abstractcomponent.readOnly){
            myComponent.getComponent("buttonHolder").getComponent("fieldClearFile").hide();
            //myComponent.getComponent("buttonHolder").getComponent("fieldEditFile").hide();
            myComponent.getComponent("buttonHolder").getComponent("fieldChangeFile").hide();
        } else {
            myComponent.getComponent("buttonHolder").getComponent("fieldClearFile").show();
            //myComponent.getComponent("buttonHolder").getComponent("fieldEditFile").show();
            myComponent.getComponent("buttonHolder").getComponent("fieldChangeFile").show();
        }
        if (abstractcomponent.fileType!="Image"){
            //myComponent.getComponent("buttonHolder").getComponent("fieldEditFile").hide();
        } else {
            //handle image online editing
        }
        if (abstractcomponent.fileType=="Office"){
            myComponent.getComponent("buttonHolder").getComponent("fieldPreviewFile").hide();
        }

        abstractcomponent.on("writeablechange", function(){
            if (abstractcomponent.readOnly){
                myComponent.getComponent("buttonHolder").getComponent("fieldClearFile").hide();
                //myComponent.getComponent("buttonHolder").getComponent("fieldEditFile").hide();
                myComponent.getComponent("buttonHolder").getComponent("fieldChangeFile").hide();
            } else {
                myComponent.getComponent("buttonHolder").getComponent("fieldClearFile").show();
                //myComponent.getComponent("buttonHolder").getComponent("fieldEditFile").show();
                myComponent.getComponent("buttonHolder").getComponent("fieldChangeFile").show();
            }
            if (abstractcomponent.fileType!="Image"){
                //myComponent.getComponent("buttonHolder").getComponent("fieldEditFile").hide();
            } else {
                //handle image online editing
            }
            if (abstractcomponent.fileType=="Office"){
                myComponent.getComponent("buttonHolder").getComponent("fieldPreviewFile").hide();
            }
        });
    }

});