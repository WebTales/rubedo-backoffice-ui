/*
 * File: app/view/shippersInterface.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Rubedo.view.shippersInterface', {
    extend: 'Ext.window.Window',
    alias: 'widget.shippersInterface',

    requires: [
        'Rubedo.view.MyTool16',
        'Rubedo.view.MyTool17'
    ],

    height: 456,
    id: 'shippersInterface',
    width: 723,
    layout: {
        align: 'stretch',
        type: 'hbox'
    },
    constrainHeader: true,
    iconCls: 'truck',
    title: 'Shippers',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'top',
                    items: [
                        {
                            xtype: 'button',
                            ACL: 'write.ui.shippers',
                            localiserId: 'addBtn',
                            id: 'shippersAddBtn',
                            iconAlign: 'top',
                            iconCls: 'add_big',
                            scale: 'large',
                            text: 'Ajouter'
                        },
                        {
                            xtype: 'button',
                            ACL: 'write.ui.shippers',
                            localiserId: 'removeBtn',
                            disabled: true,
                            id: 'shippersRemoveBtn',
                            iconAlign: 'top',
                            iconCls: 'remove_big',
                            scale: 'large',
                            text: 'Supprimer'
                        },
                        {
                            xtype: 'button',
                            ACL: 'write.ui.shippers',
                            localiserId: 'saveBtn',
                            disabled: true,
                            id: 'shippersSaveBtn',
                            iconAlign: 'top',
                            iconCls: 'floppy_disc_big',
                            scale: 'large',
                            text: 'Enregistrer',
                            listeners: {
                                afterrender: {
                                    fn: me.onWorkspaceSaveAfterRender,
                                    scope: me
                                },
                                click: {
                                    fn: me.onShippersSaveBtnClick,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'tbfill'
                        }
                    ]
                }
            ],
            items: [
                {
                    xtype: 'gridpanel',
                    id: 'shippersGrid',
                    width: 200,
                    title: '',
                    forceFit: true,
                    store: 'Shippers',
                    columns: [
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                if (record.get("readOnly")) {
                                    return("<i style=\"color:#777;\">"+value+"</i>");
                                } else {
                                    return(value);
                                }
                            },
                            localiserId: 'nameColumn',
                            dataIndex: 'name',
                            text: 'Nom'
                        }
                    ]
                },
                {
                    xtype: 'panel',
                    localiserId: 'propsPanel',
                    flex: 1,
                    disabled: true,
                    layout: {
                        type: 'card'
                    },
                    title: 'Propriétés',
                    items: [
                        {
                            xtype: 'form',
                            id: 'shippersMainForm',
                            itemId: 'mainLocItem',
                            bodyPadding: 10,
                            title: '',
                            items: [
                                {
                                    xtype: 'textfield',
                                    localiserId: 'nameField',
                                    anchor: '100%',
                                    fieldLabel: 'Nom',
                                    name: 'name',
                                    allowBlank: false,
                                    allowOnlyWhitespace: false
                                },
                                {
                                    xtype: 'checkboxfield',
                                    anchor: '100%',
                                    fieldLabel: 'Active',
                                    name: 'active',
                                    inputValue: 'true',
                                    uncheckedValue: 'false'
                                }
                            ]
                        }
                    ]
                }
            ],
            listeners: {
                render: {
                    fn: me.onWorkspacesInterfaceRender,
                    scope: me
                },
                beforeclose: {
                    fn: me.onWorkspacesInterfaceBeforeClose,
                    scope: me
                }
            },
            tools: [
                {
                    xtype: 'mytool16'
                },
                {
                    xtype: 'mytool17'
                }
            ]
        });

        me.callParent(arguments);
    },

    onWorkspaceSaveAfterRender: function(component, eOpts) {
        component.findParentByType("window").getEl().addKeyListener({key:"s", ctrl:true}, function(e,t){
        if (!component.disabled){
            component.fireEvent("click", component);
            t.stopEvent();
        }
    });
    },

    onShippersSaveBtnClick: function(button, e, eOpts) {
        var form=Ext.getCmp("shippersMainForm").getForm();
        if (form.isValid()){
            var record=Ext.getCmp("shippersGrid").getSelectionModel().getLastSelected();  
            record.beginEdit();
            record.set(form.getValues());
            record.endEdit();
        }
    },

    onWorkspacesInterfaceRender: function(component, eOpts) {
        Ext.getStore("Shippers").load();
    },

    onWorkspacesInterfaceBeforeClose: function(panel, eOpts) {
        Ext.getStore("Shippers").removeAll();
    }

});