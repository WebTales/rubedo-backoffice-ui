/*
 * File: app/controller/MediathequeController.js
 *
 * This file was generated by Sencha Architect version 2.0.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('KECMdesktop.controller.MediathequeController', {
    extend: 'Ext.app.Controller',
    alias: 'controller.MediathequeController',

    onGridpanelItemClick: function(tablepanel, record, item, index, e, options) {
        var filArianne = tablepanel.findParentByType('window').getDockedComponent('filArianne');
        var typeFil = filArianne.getComponent('type');
        if (Ext.isDefined(typeFil)) {typeFil.setText(record.data.titre+'<b> > </b>');}
        else { typeFil= Ext.widget('button',{iconCls: "folder", text:record.data.titre+'<b> > </b>', itemId:'type'});
        filArianne.add(typeFil);
    }
    var boiteMeta = tablepanel.findParentByType('window').getDockedComponent('barreMeta').getComponent('boiteBarreMeta');
    var imageMeta = tablepanel.findParentByType('window').getDockedComponent('barreMeta').getComponent('imageBarreMeta');
    var customMeta = record.data.titre;
    boiteMeta.update(customMeta);
    imageMeta.setSrc('resources/icones/48x48/folder.png');
    Ext.getStore('MediaViewStore').loadData(record.data.medias);

    },

    init: function() {
        this.control({
            "#contributionMediasGrid": {
                itemclick: this.onGridpanelItemClick
            }
        });

    }

});
