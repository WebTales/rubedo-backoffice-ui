/*
 * File: app/controller/ShippersController.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Rubedo.controller.ShippersController', {
    extend: 'Ext.app.Controller',
    alias: 'controller.ShippersController',

    onNewShipperSubmitBtnClick: function(button, e, eOpts) {
        var form=button.up().getForm();
        if (form.isValid()){
            Ext.getStore("Shippers").add(form.getValues());
            button.up().up().close();
        }
    },

    onShippersAddBtnClick: function(button, e, eOpts) {
        Ext.widget("newShipperWindow").show();
    },

    onShippersGridSelectionChange: function(model, selected, eOpts) {
        var me=this;
        if (Ext.isEmpty(selected)){
            me.resetInterfaceNoelect();
        } else {
            me.resetInterfaceSelect(selected[0]);
        }
    },

    onShippersRemoveBtnClick: function(button, e, eOpts) {
        var fenetre = Ext.widget('delConfirmZ');
        fenetre.show();
        Ext.getCmp('delConfirmZOui').on('click', function() { 
            Ext.getStore("Shippers").remove(Ext.getCmp("shippersGrid").getSelectionModel().getLastSelected());
            Ext.getCmp('delConfirmZ').close();
        }); 
    },

    onShippersSaveBtnClick: function(button, e, eOpts) {
        var form=Ext.getCmp("shippersMainForm").getForm();
        if (form.isValid()){
            var record=Ext.getCmp("shippersGrid").getSelectionModel().getLastSelected();  
            record.beginEdit();
            record.set(form.getValues());
            record.set("rates",Ext.Array.pluck(Ext.getStore("ShippersRatesStore").getRange(),"data"));
            record.endEdit();
        }
    },

    resetInterfaceNoelect: function() {
        Ext.getCmp("shippersRemoveBtn").disable();
        Ext.getCmp("shippersSaveBtn").disable();
        Ext.getCmp("shippersMainForm").up().disable();
        Ext.getCmp("shippersMainForm").getForm().reset();
        Ext.getStore("ShippersRatesStore").removeAll();
    },

    resetInterfaceSelect: function(record) {
        Ext.getCmp("shippersRemoveBtn").enable();
        Ext.getCmp("shippersSaveBtn").enable();
        Ext.getCmp("shippersMainForm").up().enable();
        Ext.getCmp("shippersMainForm").getForm().setValues(record.getData());
        Ext.getStore("ShippersRatesStore").loadData(Ext.clone(record.get("rates")));
    },

    init: function(application) {
        this.control({
            "#newShipperSubmitBtn": {
                click: this.onNewShipperSubmitBtnClick
            },
            "#shippersAddBtn": {
                click: this.onShippersAddBtnClick
            },
            "#shippersGrid": {
                selectionchange: this.onShippersGridSelectionChange
            },
            "#shippersRemoveBtn": {
                click: this.onShippersRemoveBtnClick
            },
            "#shippersSaveBtn": {
                click: this.onShippersSaveBtnClick
            }
        });
    }

});
