/*
 * File: app/controller/ContributionSitesController.js
 *
 * This file was generated by Sencha Architect version 2.0.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('KECMdesktop.controller.ContributionSitesController', {
    extend: 'Ext.app.Controller',

    stores: [
        'VersionsDataJson'
    ],
    views: [
        'ContributionSitesV'
    ],

    refs: [
        {
            ref: 'NomPageSites',
            selector: '#nomPageSites'
        }
    ],

    onTreepanelSelectionChange: function(tablepanel, selections, options) {
        var cible = Ext.getCmp('arborescenceSites').getSelectionModel().getSelection()[0];
        if (Ext.isDefined(cible)) {
            this.getNomPageSites().update(cible.raw); 
            this.getVersionsDataJsonStore().loadData(cible.raw.versions);

            var ouvertRec = new Ext.menu.Item(cible.raw.id);
            ouvertRec.setIconCls('document');
            ouvertRec.setText(cible.raw.text);
            Ext.getCmp('menuSitesRecents').remove(ouvertRec);
            Ext.getCmp('menuSitesRecents').insert(1 ,ouvertRec);
        }
    },

    onPanelAfterRender: function(abstractcomponent, options) {
        abstractcomponent.resizable = false;
        abstractcomponent.getDockedComponent(0).getComponent('supprimerZone').destroy();
        abstractcomponent.getDockedComponent(0).getComponent('ajouterColonne').destroy();
        abstractcomponent.getDockedComponent(0).getComponent('enleverColonne').destroy();
    },

    init: function() {
        this.control({
            "#arborescenceSites": {
                selectionchange: this.onTreepanelSelectionChange
            },
            "#editionSites zone": {
                afterrender: this.onPanelAfterRender
            }
        });

    }

});
