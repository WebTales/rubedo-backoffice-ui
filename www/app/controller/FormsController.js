/*
 * File: app/controller/FormsController.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Rubedo.controller.FormsController', {
    extend: 'Ext.app.Controller',
    alias: 'controller.FormsController',

    onAddFormBtnClick: function(button, e, options) {
        Ext.widget("newFormWindow").show();
    },

    onSubmitNewFormBtnClick: function(button, e, options) {
        var me=this;
        var form=button.up().getForm();
        if (form.isValid()){
            var newOne=Ext.create("Rubedo.model.formModel",form.getValues());
            Ext.getStore("FormsStore").add(newOne);
            Ext.getStore("FormsStore").addListener("datachanged", function(){
                me.resetInterfaceSelect(newOne);
            },this,{single:true});
                button.up().up().close();
            }
    },

    onRemoveFormBtnClick: function(button, e, options) {
        var target = Ext.getCmp('mainFormsGrid').getSelectionModel().getLastSelected();
        var me=this;
        if (!Ext.isEmpty(target)) {
            var window = Ext.widget('delConfirmZ');
            Ext.getCmp('ViewportPrimaire').add(window);
            window.show();
            Ext.getCmp('delConfirmZOui').on('click', function() { 
                Ext.getStore("FormsStore").remove(target);            
                Ext.getCmp('delConfirmZ').close();  
                me.resetInterfaceNoSelect();
            });  

        }
    },

    resetInterfaceSelect: function(record) {

    },

    resetInterfaceNoSelect: function() {

    },

    init: function(application) {
        this.control({
            "#addFormBtn": {
                click: this.onAddFormBtnClick
            },
            "#submitNewFormBtn": {
                click: this.onSubmitNewFormBtnClick
            },
            "#removeFormBtn": {
                click: this.onRemoveFormBtnClick
            }
        });
    }

});
