/*
 * File: app/store/NestedContentsStore.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Rubedo.store.NestedContentsStore', {
    extend: 'Ext.data.Store',
    alias: 'store.NestedContentsStore',

    requires: [
        'Rubedo.model.nestedContentModel'
    ],

    constructor: function(cfg) {
        var me = this;
        cfg = cfg || {};
        me.callParent([Ext.apply({
            storeId: 'NestedContentsStore',
            model: 'Rubedo.model.nestedContentModel',
            listeners: {
                update: {
                    fn: me.onStoreUpdate,
                    scope: me
                }
            },
            groupers: {
                property: 'typeId'
            }
        }, cfg)]);
    },

    onStoreUpdate: function(abstractstore, record, operation, options) {
        Rubedo.controller.ContributionContenusController.prototype.nestedContentsSelect(Ext.getCmp("NestedContentsGrid"), Ext.getCmp("NestedContentsGrid").getSelectionModel().getSelection());

    }

});