{
    "type": "window",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "DAMPickerWindow",
        "designer|userAlias": "ImagePickerWindow",
        "height": 406,
        "id": "ImagePickerWindow",
        "width": 600,
        "layout": "fit",
        "title": "Choix DAM",
        "constrainHeader": true,
        "maximizable": null,
        "modal": true
    },
    "id": "ExtBox1-ext-gen4816",
    "designerId": "a3e62dcc-3e49-4f7f-ad6a-d64dae3b2f21",
    "cn": [
        {
            "type": "basiceventbinding",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onImagePickerWindowRender",
                "fn": "onImagePickerWindowRender",
                "implHandler": [
                    "Ext.getStore(\"DAMPickerStore\").clearFilter(true);",
                    "var allowedTypes=Ext.getCmp(abstractcomponent.targetField).allowedDAMTypes;",
                    "var allowedFileType=Ext.getCmp(abstractcomponent.targetField).allowedFileType;",
                    "var columnsOver= [",
                    "{",
                    "    xtype: 'gridcolumn',",
                    "    filter: true,",
                    "    dataIndex: 'title',",
                    "    text: 'Titre'",
                    "},",
                    "{",
                    "    xtype: 'gridcolumn',",
                    "    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {",
                    "        return(value.fullName);",
                    "    },",
                    "    dataIndex: 'createUser',",
                    "    text: 'Auteur'",
                    "},",
                    "{",
                    "    xtype: 'datecolumn',",
                    "    dataIndex: 'createTime',",
                    "    text: 'Date de cr√©ation',",
                    "    format: 'd-m-Y'",
                    "}",
                    "];",
                    "if (Ext.isEmpty(allowedTypes)){",
                    "    if (Ext.isEmpty(allowedFileType)){            ",
                    "        delete Ext.getStore(\"DAMPickerStore\").getProxy().extraParams.tFilter;",
                    "        Ext.getStore(\"DAMPickerStore\").load();   ",
                    "    } else {",
                    "        Ext.getStore(\"MediaTypesFORDAMPicker\").getProxy().extraParams.filter=\"[{\\\"property\\\":\\\"mainFileType\\\",\\\"value\\\":\\\"\"+allowedFileType+\"\\\"}]\";",
                    "        Ext.getStore(\"MediaTypesFORDAMPicker\").load();",
                    "        columnsOver.push({",
                    "            xtype:'gridcolumn',",
                    "            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {",
                    "                if (Ext.isEmpty(Ext.getStore(\"MediaTypesFORDAMPicker\").findRecord(\"id\",value))) {",
                    "                    return(value);",
                    "                } else {",
                    "                    return(Ext.getStore(\"MediaTypesFORDAMPicker\").findRecord(\"id\",value).get(\"type\"));",
                    "                }",
                    "            },",
                    "            filter: {",
                    "                type: 'combo',",
                    "                valueField: 'id',",
                    "                displayField: 'type',",
                    "                store: 'MediaTypesFORDAMPicker'",
                    "            },",
                    "            dataIndex: 'typeId',",
                    "",
                    "            text: 'Type'",
                    "        });",
                    "        Ext.getStore(\"DAMPickerStore\").getProxy().extraParams.tFilter=\"[{\\\"property\\\":\\\"mainFileType\\\",\\\"value\\\":\\\"\"+allowedFileType+\"\\\"}]\";",
                    "        Ext.getStore(\"DAMPickerStore\").load();",
                    "    }",
                    "}else if (allowedTypes.length==1){",
                    "    Ext.getStore(\"DAMPickerStore\").getProxy().extraParams.tFilter=\"[{\\\"property\\\":\\\"typeId\\\",\\\"value\\\":\\\"\"+allowedTypes[0]+\"\\\"}]\";",
                    "    Ext.getStore(\"DAMPickerStore\").load();",
                    "} else {",
                    "    Ext.getStore(\"MediaTypesFORDAMPicker\").getProxy().extraParams.filter=\"[{\\\"property\\\":\\\"id\\\",\\\"operator\\\":\\\"$in\\\",\\\"value\\\":\"+Ext.JSON.encode(allowedTypes)+\"}]\";",
                    "    Ext.getStore(\"MediaTypesFORDAMPicker\").load();",
                    "    columnsOver.push({",
                    "        xtype:'gridcolumn',",
                    "        renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {",
                    "            if (Ext.isEmpty(Ext.getStore(\"MediaTypesFORDAMPicker\").findRecord(\"id\",value))) {",
                    "                return(value);",
                    "            } else {",
                    "                return(Ext.getStore(\"MediaTypesFORDAMPicker\").findRecord(\"id\",value).get(\"type\"));",
                    "            }",
                    "        },",
                    "        filter: {",
                    "            type: 'combo',",
                    "            valueField: 'id',",
                    "            displayField: 'type',",
                    "            store: 'MediaTypesFORDAMPicker'",
                    "        },",
                    "        dataIndex: 'typeId',",
                    "",
                    "        text: 'Type'",
                    "    });",
                    "",
                    "    Ext.getStore(\"DAMPickerStore\").getProxy().extraParams.tFilter=\"[{\\\"property\\\":\\\"typeId\\\",\\\"operator\\\":\\\"$in\\\",\\\"value\\\":\"+Ext.JSON.encode(allowedTypes)+\"}]\";",
                    "    Ext.getStore(\"DAMPickerStore\").load();",
                    "}",
                    "var DAMPicker = Ext.widget(\"DAMMainView\", {id:\"DAMPickerView\", store:Ext.getStore(\"DAMPickerStore\"),columns:columnsOver, multiSelect:false, plugins:[",
                    "    Ext.create('Ext.ux.grid.FilterBar', {renderHidden: false, showShowHideButton: true,showClearAllButton: true})",
                    "",
                    "    ], features: [Ext.create('Ext.ux.grid.feature.Tileview', {",
                    "        viewMode: 'tileIcons',",
                    "        getAdditionalData: function(data, index, record, orig)",
                    "        {",
                    "",
                    "",
                    "",
                    "            generateThumbnail = function()",
                    "            {",
                    "                return \"../../dam/get-thumbnail?id=\"+record.get(\"id\");",
                    "            };",
                    "",
                    "            if(this.viewMode)",
                    "            {",
                    "                return {",
                    "                    thumbnails: generateThumbnail(),",
                    "                    author:record.get(\"createUser\").fullName,",
                    "                    date: Ext.Date.format(record.get(\"createTime\"), 'd-m-Y'),",
                    "                    filename:record.get(\"title\"),",
                    "                    fileSize:Ext.util.Format.fileSize(record.get(\"fileSize\"))",
                    "                };",
                    "            }",
                    "            return {};",
                    "        },",
                    "        viewTpls:",
                    "        {",
                    "            mediumIcons: [",
                    "            '<td class=\"{cls} ux-explorerview-medium-icon-row\">',",
                    "            '<table class=\"x-grid-row-table\">',",
                    "            '<tbody>',",
                    "            '<tr>',",
                    "            '<td class=\"x-grid-col x-grid-cell ux-explorerview-icon\" style=\"background: transparent;\">',",
                    "            '<img src=\\\"{thumbnails}\\\" height=\\\"100\\\" width=\\\"100\\\">',\t\t\t",
                    "            '</td>',",
                    "            '</tr>',",
                    "            '<tr>',",
                    "            '<td class=\"x-grid-col x-grid-cell\">',",
                    "            '<div class=\"x-grid-cell-inner\" unselectable=\"on\">{filename}</div>',",
                    "            '</td>',",
                    "            '</tr>',",
                    "            '</tbody>',",
                    "            '</table>',",
                    "            '</td>'].join(''),",
                    "",
                    "            tileIcons: [",
                    "            '<td class=\"{cls} ux-explorerview-detailed-icon-row\">',",
                    "            '<table class=\"x-grid-row-table\">',",
                    "            '<tbody>',",
                    "            '<tr>',",
                    "            '<td class=\"x-grid-col x-grid-cell ux-explorerview-icon\" style=\"background: transparent;\">',",
                    "            '<img src=\\\"{thumbnails}\\\" height=\\\"50\\\" width=\\\"50\\\">',\t\t\t",
                    "            '</td>',",
                    "",
                    "            '<td class=\"x-grid-col x-grid-cell\">',",
                    "            '<div class=\"x-grid-cell-inner\" unselectable=\"on\">{filename}<br><span>{fileSize}<br>{author}<br>{date}</span></div>',",
                    "            '</td>',",
                    "            '</tr>',",
                    "            '</tbody>',",
                    "            '</table>',",
                    "            '</td>'].join('')",
                    "",
                    "        }",
                    "    }),",
                    "    {",
                    "        ftype: 'grouping',",
                    "        groupHeaderTpl: 'Cuisine: {name} ({rows.length} Item{[values.rows.length > 1 ? \"s\" : \"\"]})',",
                    "        disabled: false",
                    "    }],",
                    "    tbar: [{},'->', {",
                    "    xtype: 'switchbuttonsegment',",
                    "    activeItem: 1,",
                    "    scope: this,",
                    "    items: [{",
                    "        tooltip: 'Details',",
                    "        viewMode: 'default',",
                    "        iconCls: 'icon-default'",
                    "    }, {",
                    "        tooltip: 'Tiles',",
                    "        viewMode: 'tileIcons',",
                    "        iconCls: 'icon-tile'",
                    "    }, {",
                    "        tooltip: 'Icons',",
                    "        viewMode: 'mediumIcons',",
                    "        iconCls: 'icon-medium'",
                    "    }],",
                    "    listeners: {",
                    "        change: function(btn, item)",
                    "        {",
                    "            btn.up().up().up().features[0].setView(btn.viewMode);\t\t",
                    "        },",
                    "        scope: this",
                    "    }",
                    "}",
                    "]});",
                    "DAMPicker.on(\"selectionchange\", function(g, s){",
                    "if (Ext.isEmpty(s)){",
                    "    Ext.getCmp(\"imagePickerAcceptBtn\").disable();",
                    "} else {",
                    "    Ext.getCmp(\"imagePickerAcceptBtn\").enable();",
                    "}",
                    "});",
                    "DAMPicker.on(\"itemdblclick\", function(){",
                    "Ext.getCmp(\"imagePickerAcceptBtn\").fireEvent(\"click\",Ext.getCmp(\"imagePickerAcceptBtn\"));",
                    "});",
                    "",
                    "",
                    "abstractcomponent.add(DAMPicker);"
                ],
                "name": "render",
                "scope": "me"
            },
            "designerId": "86c9c193-9c8b-439d-b7bc-ba9dc351ac5e"
        },
        {
            "type": "basiceventbinding",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onImagePickerWindowBeforeClose",
                "fn": "onImagePickerWindowBeforeClose",
                "implHandler": [
                    "Ext.getStore(\"DAMPickerStore\").removeAll();",
                    "Ext.getStore(\"DAMPickerStore\").clearFilter(true);",
                    "Ext.getStore(\"MediaTypesFORDAMPicker\").removeAll();"
                ],
                "name": "beforeclose",
                "scope": "me"
            },
            "designerId": "9cf2b5a7-e2b0-49fa-a243-4ffa1718d356"
        },
        {
            "type": "pagingtoolbar",
            "reference": {
                "name": "dockedItems",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "dock": "bottom",
                "designer|userClassName": "MyPagingToolbar3",
                "width": 360,
                "displayInfo": true,
                "store": "DAMPickerStore"
            },
            "designerId": "14dc071a-7204-444b-8b7d-441b8ecf4963",
            "cn": [
                {
                    "type": "button",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "layout|flex": null,
                        "designer|userClassName": "MyButton206",
                        "disabled": true,
                        "id": "imagePickerAcceptBtn",
                        "iconCls": "ouiSpetit",
                        "text": "Choisir"
                    },
                    "designerId": "afbe2747-2167-4926-abe2-c981462eaf25",
                    "cn": [
                        {
                            "type": "basiceventbinding",
                            "reference": {
                                "name": "listeners",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "designer|userClassName": "onImagePickerAcceptBtnClick",
                                "fn": "onImagePickerAcceptBtnClick",
                                "implHandler": [
                                    "var target = button.up().up().getComponent(0).getSelectionModel().getLastSelected();\r",
                                    "Ext.getCmp(button.up().up().targetField).setValue(target.get(\"id\"));\r",
                                    "button.up().up().close();"
                                ],
                                "name": "click",
                                "scope": "me"
                            },
                            "designerId": "200029d6-fab7-4525-bedc-56cf15f9e3d8"
                        }
                    ]
                },
                {
                    "type": "button",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "layout|flex": null,
                        "designer|userClassName": "MyButton207",
                        "iconCls": "close",
                        "text": "Annuler"
                    },
                    "designerId": "90d7e59f-707e-4609-9fbc-6cf706850795",
                    "cn": [
                        {
                            "type": "fixedfunction",
                            "reference": {
                                "name": "items",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "designer|userClassName": "handler",
                                "fn": "handler",
                                "designer|params": [
                                    "button",
                                    "event"
                                ],
                                "implHandler": [
                                    "this.up().up().close();"
                                ]
                            },
                            "designerId": "07e341ef-6e63-41e4-9c73-208f8fea8427"
                        }
                    ]
                }
            ]
        },
        {
            "type": "linkedinstance",
            "reference": {
                "name": "tools",
                "type": "array"
            },
            "codeClass": null,
            "designerId": "b137b18c-1118-4c79-8565-61eca87af6f6",
            "masterInstanceId": "ExtBox1-ext-gen2736"
        }
    ]
}