{
    "type": "controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "MainController",
        "designer|userAlias": "MainController"
    },
    "id": "ExtBox1-ext-gen7085",
    "designerId": "7b179740-bc32-424a-9f22-d87b248d4bef",
    "cn": [
        {
            "type": "fixedfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onLaunch",
                "fn": "onLaunch",
                "implHandler": [
                    "var me=this;",
                    "var options = decodeURIComponent(window.location.search.slice(1))",
                    ".split('&')",
                    ".reduce(function _reduce (a, b) {",
                    "    b = b.split('=');",
                    "    a[b[0]] = b[1];",
                    "    return a;",
                    "}, {});",
                    "    if (!Ext.isEmpty(options.typeId)){",
                    "        Ext.Ajax.request({",
                    "            url: '../../content-types/find-one',",
                    "            params: {",
                    "                id: options.typeId",
                    "            },",
                    "            success: function(response){",
                    "                var result = Ext.JSON.decode(response.responseText).data;",
                    "                me.initializeContentForm(result);",
                    "            }",
                    "        });",
                    "    }",
                    ""
                ]
            },
            "designerId": "af8bf859-2a5d-4f78-9e25-a11f1551da5c"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "initializeContentForm",
                "fn": "initializeContentForm",
                "designer|params": [
                    "contentType"
                ],
                "implHandler": [
                    "this.renderMainFields(contentType.fields);"
                ]
            },
            "designerId": "d6f02e2a-9d7e-4173-8881-f0abc95df10f"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "renderMainFields",
                "fn": "renderMainFields",
                "designer|params": [
                    "fields"
                ],
                "implHandler": [
                    "var target = Ext.getCmp(\"MainForm\");",
                    "target.removeAll();",
                    "Ext.Array.forEach(fields, function(field,index){",
                    "    var configurator=Ext.clone(field.config);",
                    "    configurator.labelSeparator=\" \";",
                    "    //console.log(field);",
                    "    var newField= Ext.widget(field.cType, configurator);",
                    "    var wrapping= Ext.widget(\"fieldWrapper\");",
                    "    newField.anchor = '90%';",
                    "    newField.style = '{float:left;}';",
                    "    wrapping.add(newField);",
                    "    wrapping.getComponent('helpBouton').setTooltip(configurator.tooltip);",
                    "    if (Ext.isEmpty(configurator.tooltip)){",
                    "        wrapping.getComponent('helpBouton').hidden=true;",
                    "    } ",
                    "    /*if (nouvChamp.multivalued) {",
                    "        enrobage.add(Ext.widget('button', {iconCls: 'add',valeursM: 1, margin: '0 0 0 5', tooltip: 'Valeurs multiples', itemId: 'fieldReplicatorBtn'}));",
                    "",
                    "    }*/",
                    "    target.add(wrapping);",
                    "    ",
                    "",
                    "});",
                    "",
                    "",
                    "/*",
                    "var formulaireTC = Ext.getCmp('boiteAChampsContenus');",
                    "var champsD =contentType.get(\"champs\");",
                    "for (g=0; g<champsD.length; g++) {",
                    "    var donnees=champsD[g];",
                    "    var configurateur = Ext.clone(donnees.config);",
                    "    if (donnees.cType =='treepicker'){ ",
                    "        var monStore= Ext.getStore(donnees.store);",
                    "        configurateur.store = monStore;",
                    "        monStore.load();",
                    "    }",
                    "    else if (donnees.cType == 'combobox') {",
                    "        var monStore=  Ext.create('Ext.data.Store', Ext.clone(donnees.store));",
                    "        configurateur.store = monStore;",
                    "    }",
                    "    //begin temporary fix",
                    "    configurateur.labelSeparator=\" \";",
                    "    //end temporary fix",
                    "    var nouvChamp = Ext.widget(donnees.cType, configurateur);",
                    "    nouvChamp.config=Ext.clone(donnees.config);",
                    "    //begin temporary fix",
                    "    if(nouvChamp.config.tooltip==\"help text\"){nouvChamp.config.tooltip=\"\";}",
                    "    //end temporary fix",
                    "    if (donnees.cType =='triggerfield'){ ",
                    "        var Ouvrir = Ext.clone(donnees.ouvrir);",
                    "        nouvChamp.onTriggerClick= function() {",
                    "            var fenetre = Ext.widget(Ouvrir);",
                    "            fenetre.showAt(screen.width/2-200, 100);",
                    "        } ; ",
                    "        nouvChamp.ouvrir =Ext.clone(donnees.ouvrir);",
                    "    }  ",
                    "    nouvChamp.anchor = '90%';",
                    "    nouvChamp.style = '{float:left;}';",
                    "    var enrobage =Ext.widget('ChampTC');",
                    "    enrobage.add(nouvChamp);",
                    "    enrobage.getComponent('helpBouton').setTooltip(nouvChamp.config.tooltip);",
                    "    if (Ext.isEmpty(nouvChamp.config.tooltip)){",
                    "        enrobage.getComponent('helpBouton').hidden=true;",
                    "    } ",
                    "    if (nouvChamp.multivalued) {",
                    "        enrobage.add(Ext.widget('button', {iconCls: 'add',valeursM: 1, margin: '0 0 0 5', tooltip: 'Valeurs multiples', itemId: 'fieldReplicatorBtn'}));",
                    "",
                    "    };",
                    "    formulaireTC.add(enrobage);",
                    "",
                    "}",
                    "",
                    "*/"
                ]
            },
            "designerId": "0276fe50-3119-4f29-9312-5e685ef0ce25"
        },
        {
            "type": "fixedfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "init",
                "fn": "init",
                "designer|params": [
                    "application"
                ],
                "implHandler": [
                    "Ext.require(\"Rubedo.view.CKEField\");"
                ]
            },
            "designerId": "c843c4bc-1c2b-4f28-be4e-8a92031da0a1"
        }
    ]
}