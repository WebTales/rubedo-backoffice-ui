{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "ACLController",
        "designer|userAlias": "ACLController"
    },
    "designerId": "6cfeb0f4-f1fe-474f-bb55-fa4d1dd695ac",
    "cn": [
        {
            "type": "fixedfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "init",
                "designer|params": [
                    "application"
                ],
                "implHandler": [
                    "Ext.define('ACL', {",
                    "    singleton:true,",
                    "    CSRFToken:\"notYetSet\",",
                    "    interfaceRights:{",
                    "        \"read.ui.taxonomy\":false,",
                    "        \"write.ui.taxonomy\":false,",
                    "        \"read.ui.contentTypes\":false,",
                    "        \"write.ui.contentTypes\":false,",
                    "        \"read.ui.contents\":false,",
                    "        \"write.ui.contents\":false,",
                    "        \"read.ui.contents.draft\":false,",
                    "        \"read.ui.contents.pending\":false,",
                    "        \"read.ui.contents.published\":false,",
                    "        \"write.ui.contents.draft\":false,",
                    "        \"write.ui.contents.pending\":false,",
                    "        \"write.ui.contents.published\":false,",
                    "        \"write.ui.contents.draftToPending\":false,",
                    "        \"write.ui.contents.pendingToDraft\":false,",
                    "        \"write.ui.contents.pendingToPublished\":false,",
                    "        \"write.ui.contents.putOnline\":false,",
                    "        \"write.ui.contents.putOffline\":false,",
                    "        \"read.ui.masks\":false,",
                    "        \"write.ui.masks\":false,",
                    "        \"read.ui.users\":false,",
                    "        \"write.ui.users\":false,",
                    "        \"read.ui.sites\":false,",
                    "        \"write.ui.sites\":false,",
                    "        \"read.ui.pages\":false,",
                    "        \"write.ui.pages\":false,",
                    "        \"read.ui.medias\":false,",
                    "        \"write.ui.medias\":false,",
                    "        \"read.ui.groups\":false,",
                    "        \"write.ui.groups\":false,",
                    "        \"read.ui.workflows\":false,",
                    "        \"write.ui.workflows\":false,",
                    "        \"exe.ui.elasticSearch\":false",
                    "    }",
                    "});",
                    "Ext.Ajax.on(\"beforerequest\", function(conn, options){",
                    "    if (Ext.isEmpty(options.params)){",
                    "        options.params={};",
                    "    }",
                    "    if(!Ext.isEmpty(ACL.workingLanguage)){",
                    "        options.params.workingLanguage=ACL.workingLanguage;",
                    "    }",
                    "    options.params.token=ACL.CSRFToken;",
                    "});"
                ]
            },
            "designerId": "0bcdb55a-cd0a-4802-9748-74c0b61df777"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onComponentRender",
                "implHandler": [
                    "if (!Ext.isEmpty(component.ACL)) {   ",
                    "    if (ACL.interfaceRights[component.ACL]===false){",
                    "        component.hide();",
                    "        component.clearListeners();",
                    "        component.fireEvent=Ext.emptyFn;",
                    "    }",
                    "}"
                ],
                "name": "render",
                "scope": "me",
                "designer|targetType": "Ext.Component",
                "designer|controlQuery": "component"
            },
            "designerId": "9b8caff8-edc3-4a6f-bfeb-c17c418e09ed"
        },
        {
            "type": "fixedfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onLaunch",
                "implHandler": [
                    "Ext.Ajax.request({",
                    "    url:'current-user/get-token',",
                    "    params:{",
                    "    },",
                    "    success:function(response){",
                    "        ACL.CSRFToken=Ext.JSON.decode(response.responseText).token;",
                    "    },",
                    "    failure:function(){",
                    "        Ext.Msg.alert('Erreur', 'Erreur dans la récupération du jeton de sécurité');",
                    "    }",
                    "});",
                    "Ext.Ajax.request({",
                    "    url:'acl',",
                    "    params:{",
                    "        data: Ext.JSON.encode(ACL.interfaceRights)",
                    "    },",
                    "    success:function(response){",
                    "        ACL.interfaceRights=Ext.JSON.decode(response.responseText);        ",
                    "        ContentContributor.controller.MainController.prototype.mainAction();",
                    "    },",
                    "    failure:function(){",
                    "        Ext.Msg.alert('Erreur', 'Erreur dans la récupération des droits');",
                    "    }",
                    "});",
                    "try {",
                    "    Ext.util.CSS.removeStyleSheet(\"loading-bar-style\");",
                    "    Ext.getElementById(\"loading-bar\").parentNode.removeChild(Ext.getElementById(\"loading-bar\"));",
                    "} catch (err) {",
                    "    console.log(\"dom element removal anomaly\");",
                    "}"
                ]
            },
            "designerId": "a9a49da3-d51c-4fde-9f61-0fec697e82b2"
        }
    ]
}