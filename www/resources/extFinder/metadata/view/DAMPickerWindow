{
    "type": "Ext.panel.Panel",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "height": null,
        "id": "ImagePickerWindow",
        "width": null,
        "designer|userClassName": "DAMPickerWindow",
        "designer|userAlias": "DAMPickerWindow",
        "layout": "fit",
        "title": ""
    },
    "designerId": "a4680f21-f444-4aa5-9954-5523f4e23fd1",
    "cn": [
        {
            "type": "basiceventbinding",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onImagePickerWindowRender",
                "implHandler": [
                    "Ext.getStore(\"DAMPickerStore\").clearFilter(true);",
                    "var allowedTypes=[];",
                    "var allowedFileType=CKEOptions.type;",
                    "var columnsOver= [",
                    "{",
                    "    xtype: 'gridcolumn',",
                    "    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {",
                    "        var link=\"dam/get-thumbnail?id=\"+record.get(\"id\")+\"&version=\"+record.get(\"version\");",
                    "        return ('<img src=\\\"'+link+'\\\" height=\\\"100\\\" width=\\\"100\\\">');",
                    "    },",
                    "    dataIndex: 'originalFileId',",
                    "    width:130,",
                    "    text: 'Main file'",
                    "},",
                    "{",
                    "    xtype: 'gridcolumn',",
                    "    filter: true,",
                    "    dataIndex: 'title',",
                    "    text: 'Title'",
                    "},",
                    "{",
                    "    xtype: 'gridcolumn',",
                    "    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {",
                    "        return(Ext.util.Format.fileSize(record.get(\"fileSize\")));",
                    "    },",
                    "    dataIndex: 'fileSize',",
                    "    text: 'Size'",
                    "},",
                    "{",
                    "    xtype: 'gridcolumn',",
                    "    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {",
                    "        return(value.fullName);",
                    "    },",
                    "    dataIndex: 'createUser',",
                    "    text: 'Author'",
                    "},",
                    "{",
                    "    xtype: 'datecolumn',",
                    "    dataIndex: 'createTime',",
                    "    text: 'Creation date',",
                    "    format: 'd-m-Y'",
                    "}",
                    "];",
                    "if (Ext.isEmpty(allowedTypes)){",
                    "    if (Ext.isEmpty(allowedFileType)){",
                    "        delete Ext.getStore(\"MediaTypesFORDAMPicker\").getProxy().extraParams.filter;",
                    "        Ext.getStore(\"MediaTypesFORDAMPicker\").load();",
                    "        columnsOver.push({",
                    "            xtype:'gridcolumn',",
                    "            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {",
                    "                if (Ext.isEmpty(Ext.getStore(\"MediaTypesFORDAMPicker\").findRecord(\"id\",value))) {",
                    "                    return(value);",
                    "                } else {",
                    "                    return(Ext.getStore(\"MediaTypesFORDAMPicker\").findRecord(\"id\",value).get(\"type\"));",
                    "                }",
                    "            },",
                    "            filter: {",
                    "                type: 'list',",
                    "                labelField: 'type',",
                    "                store: Ext.getStore('MediaTypesFORDAMPicker')",
                    "            },",
                    "            dataIndex: 'typeId',",
                    "",
                    "            text: 'Type'",
                    "        });",
                    "        delete Ext.getStore(\"DAMPickerStore\").getProxy().extraParams.tFilter;",
                    "        var task = new Ext.util.DelayedTask(function(){",
                    "            Ext.getStore(\"DAMPickerStore\").load();   ",
                    "        });",
                    "        task.delay(300);",
                    "    } else {",
                    "        Ext.getStore(\"MediaTypesFORDAMPicker\").getProxy().extraParams.filter=\"[{\\\"property\\\":\\\"mainFileType\\\",\\\"value\\\":\\\"\"+allowedFileType+\"\\\"}]\";",
                    "        Ext.getStore(\"MediaTypesFORDAMPicker\").load();",
                    "        columnsOver.push({",
                    "            xtype:'gridcolumn',",
                    "            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {",
                    "                if (Ext.isEmpty(Ext.getStore(\"MediaTypesFORDAMPicker\").findRecord(\"id\",value))) {",
                    "                    return(value);",
                    "                } else {",
                    "                    return(Ext.getStore(\"MediaTypesFORDAMPicker\").findRecord(\"id\",value).get(\"type\"));",
                    "                }",
                    "            },",
                    "            filter: {",
                    "                type: 'list',",
                    "                labelField: 'type',",
                    "                store: Ext.getStore('MediaTypesFORDAMPicker')",
                    "            },",
                    "            dataIndex: 'typeId',",
                    "",
                    "            text: 'Type'",
                    "        });",
                    "        var task = new Ext.util.DelayedTask(function(){",
                    "            Ext.getStore(\"DAMPickerStore\").getProxy().extraParams.tFilter=\"[{\\\"property\\\":\\\"mainFileType\\\",\\\"value\\\":\\\"\"+allowedFileType+\"\\\"}]\";",
                    "            Ext.getStore(\"DAMPickerStore\").load();",
                    "        });",
                    "        task.delay(300);",
                    "    }",
                    "}else if (allowedTypes.length==1){",
                    "    Ext.getStore(\"DAMPickerStore\").getProxy().extraParams.tFilter=\"[{\\\"property\\\":\\\"typeId\\\",\\\"value\\\":\\\"\"+allowedTypes[0]+\"\\\"}]\";",
                    "    Ext.getStore(\"DAMPickerStore\").load();",
                    "    Ext.getStore(\"MediaTypesFORDAMPicker\").getProxy().extraParams.filter=\"[{\\\"property\\\":\\\"id\\\",\\\"operator\\\":\\\"$in\\\",\\\"value\\\":\"+Ext.JSON.encode(allowedTypes)+\"}]\";",
                    "    Ext.getStore(\"MediaTypesFORDAMPicker\").load();",
                    "} else {",
                    "    Ext.getStore(\"MediaTypesFORDAMPicker\").getProxy().extraParams.filter=\"[{\\\"property\\\":\\\"id\\\",\\\"operator\\\":\\\"$in\\\",\\\"value\\\":\"+Ext.JSON.encode(allowedTypes)+\"}]\";",
                    "    Ext.getStore(\"MediaTypesFORDAMPicker\").load();",
                    "    columnsOver.push({",
                    "        xtype:'gridcolumn',",
                    "        renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {",
                    "            if (Ext.isEmpty(Ext.getStore(\"MediaTypesFORDAMPicker\").findRecord(\"id\",value))) {",
                    "                return(value);",
                    "            } else {",
                    "                return(Ext.getStore(\"MediaTypesFORDAMPicker\").findRecord(\"id\",value).get(\"type\"));",
                    "            }",
                    "        },",
                    "        filter: {",
                    "            type: 'list',",
                    "            labelField: 'type',",
                    "            store: Ext.getStore('MediaTypesFORDAMPicker')",
                    "        },",
                    "        dataIndex: 'typeId',",
                    "",
                    "        text: 'Type'",
                    "    });",
                    "    var task = new Ext.util.DelayedTask(function(){",
                    "        Ext.getStore(\"DAMPickerStore\").getProxy().extraParams.tFilter=\"[{\\\"property\\\":\\\"typeId\\\",\\\"operator\\\":\\\"$in\\\",\\\"value\\\":\"+Ext.JSON.encode(allowedTypes)+\"}]\";",
                    "        Ext.getStore(\"DAMPickerStore\").load();",
                    "    });",
                    "    task.delay(300);",
                    "}",
                    "var DAMPicker = Ext.widget(\"DAMMainView\", {features:[Ext.create(\"Ext.ux.grid.FiltersFeature\",{encode:true,local:false})],id:\"DAMPickerView\", store:Ext.getStore(\"DAMPickerStore\"),columns:columnsOver, multiSelect:false",
                    "});",
                    "DAMPicker.on(\"selectionchange\", function(g, s){",
                    "if (Ext.isEmpty(s)){",
                    "    Ext.getCmp(\"imagePickerAcceptBtn\").disable();",
                    "} else {",
                    "    Ext.getCmp(\"imagePickerAcceptBtn\").enable();",
                    "}",
                    "});",
                    "DAMPicker.on(\"itemdblclick\", function(){",
                    "try{",
                    "    Ext.getCmp(\"imagePickerAcceptBtn\").fireEvent(\"click\",Ext.getCmp(\"imagePickerAcceptBtn\"));",
                    "} catch(err){}",
                    "});",
                    "",
                    "",
                    "component.add(DAMPicker);"
                ],
                "name": "render",
                "scope": "me"
            },
            "designerId": "2481433b-4821-44f0-8394-71f09305712a"
        },
        {
            "type": "Ext.toolbar.Paging",
            "reference": {
                "name": "dockedItems",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "dock": "bottom",
                "width": 360,
                "displayInfo": true,
                "store": "DAMPickerStore"
            },
            "designerId": "46d953ae-5bab-4b2a-b48d-cf32eade9995",
            "cn": [
                {
                    "type": "Ext.toolbar.Spacer",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "layout|flex": 3
                    },
                    "designerId": "ee279ada-825b-4e03-858b-6d47d1367800"
                },
                {
                    "type": "Ext.button.Button",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "localiserId": "chooseBtn",
                        "layout|flex": null,
                        "disabled": true,
                        "id": "imagePickerAcceptBtn",
                        "icon": "resources/icones/blue/16x16/accept.png",
                        "iconCls": null,
                        "scale": null,
                        "text": "Choisir"
                    },
                    "designerId": "19f54c9c-32e6-4fea-991e-f738764690ad",
                    "customConfigs": [
                        {
                            "group": "(Custom Properties)",
                            "name": "localiserId",
                            "type": "string"
                        }
                    ],
                    "cn": [
                        {
                            "type": "basiceventbinding",
                            "reference": {
                                "name": "listeners",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "fn": "onImagePickerAcceptBtnClick",
                                "implHandler": [
                                    "if (CKEOptions.type==\"Image\"){",
                                    "",
                                    "    if (CKEOptions.soloMode){",
                                    "        window.opener.saveImage(CKEOptions.contentId,button.up().up().getComponent(0).getSelectionModel().getLastSelected().get(\"id\"));",
                                    "    } else {",
                                    "        var fileURL=\"/image?file-id=\"+button.up().up().getComponent(0).getSelectionModel().getLastSelected().get(\"originalFileId\");",
                                    "        window.opener.CKEDITOR.tools.callFunction( CKEOptions.CKEditorFuncNum, fileURL );",
                                    "    }",
                                    "}",
                                    "window.close();"
                                ],
                                "name": "click",
                                "scope": "me"
                            },
                            "designerId": "2bf0e321-5fd0-4ffa-ace1-257c3d93a720"
                        }
                    ]
                },
                {
                    "type": "Ext.button.Button",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "localiserId": "cancelBtn",
                        "layout|flex": null,
                        "icon": "resources/icones/blue/16x16/remove.png",
                        "iconCls": null,
                        "text": "Annuler"
                    },
                    "designerId": "fffedb6c-4ac3-4630-94b6-cb647ca8fd3d",
                    "customConfigs": [
                        {
                            "group": "(Custom Properties)",
                            "name": "localiserId",
                            "type": "string"
                        }
                    ],
                    "cn": [
                        {
                            "type": "fixedfunction",
                            "reference": {
                                "name": "items",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "fn": "handler",
                                "designer|params": [
                                    "button",
                                    "event"
                                ],
                                "implHandler": [
                                    "this.up().up().close();"
                                ]
                            },
                            "designerId": "3abb7e7f-3d41-429f-8214-69948b53f559"
                        }
                    ]
                },
                {
                    "type": "Ext.toolbar.Spacer",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "layout|flex": 1
                    },
                    "designerId": "581ecd27-95c8-4720-a902-7ddf20777705"
                }
            ]
        }
    ]
}