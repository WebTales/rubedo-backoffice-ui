{
    "type": "jsonstore",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "facettes": [
            "[ ]"
        ],
        "activeFacettes": [
            "{ }"
        ],
        "autoLoad": false,
        "autoSync": true,
        "model": "DAMSearchModel",
        "remoteSort": true,
        "storeId": "DAMFacetteStore",
        "designer|userClassName": "DAMFacetteStore",
        "designer|userAlias": "DAMFacetteStore",
        "pageSize": 50
    },
    "configAlternates": {
        "facettes": "array",
        "activeFacettes": "object"
    },
    "designerId": "0cb74fd7-8088-4c85-a691-7bc264873bce",
    "customConfigs": [
        {
            "group": "(Custom Properties)",
            "name": "facettes",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "activeFacettes",
            "type": "string"
        }
    ],
    "cn": [
        {
            "type": "customevent",
            "reference": {
                "name": "customEvents",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "CustomEvent",
                "name": "facettesChanged",
                "params": [
                    "facettes",
                    "activeFacettes"
                ]
            },
            "designerId": "105ea355-af9a-48cc-8cb2-6ab5445382d1"
        },
        {
            "type": "Ext.data.proxy.Ajax",
            "reference": {
                "name": "proxy",
                "type": "object"
            },
            "codeClass": null,
            "userConfig": {
                "batchActions": false,
                "designer|userClassName": "MyAjaxProxy57",
                "api": [
                    "{\r",
                    "         create: 'dam/create',\r",
                    "         read: 'elastic-search-dam',\r",
                    "         update: 'dam/update',\r",
                    "         destroy: 'dam/delete'\r",
                    "}"
                ]
            },
            "designerId": "5e785b38-6664-49fc-854b-e31abe5bbfc7",
            "cn": [
                {
                    "type": "Ext.data.reader.Json",
                    "reference": {
                        "name": "reader",
                        "type": "object"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "messageProperty": "message",
                        "root": "data",
                        "designer|userClassName": "MyJsonReader56"
                    },
                    "designerId": "19df1797-687f-4d0f-a9d3-6f0860e5ff48",
                    "cn": [
                        {
                            "type": "basicfunction",
                            "reference": {
                                "name": "items",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "designer|userClassName": "getResponseData",
                                "fn": "getResponseData",
                                "designer|params": [
                                    "response"
                                ],
                                "implHandler": [
                                    "var data, error;\r",
                                    "\r",
                                    "try {\r",
                                    "    data = Ext.decode(response.responseText);\r",
                                    "    this.proxy.facettes=data.facets;\r",
                                    "    if (Ext.isEmpty(data.activeFacets)){\r",
                                    "        data.activeFacets=[ ];\r",
                                    "    }\r",
                                    "    this.proxy.activeFacettes=data.activeFacets;\r",
                                    "    return this.readRecords(data);\r",
                                    "} catch (ex) {\r",
                                    "    error = new Ext.data.ResultSet({\r",
                                    "        total  : 0,\r",
                                    "        count  : 0,\r",
                                    "        records: [],\r",
                                    "        success: false,\r",
                                    "        message: ex.message\r",
                                    "    });\r",
                                    "\r",
                                    "    this.fireEvent('exception', this, response, error);\r",
                                    "    console.log(ex);\r",
                                    "\r",
                                    "    Ext.Logger.warn('Unable to parse the JSON returned by the server');\r",
                                    "\r",
                                    "    return error;\r",
                                    "}"
                                ]
                            },
                            "designerId": "1ba38c95-a0f0-4be7-a02c-33b901c76a26"
                        }
                    ]
                },
                {
                    "type": "Ext.data.writer.Json",
                    "reference": {
                        "name": "writer",
                        "type": "object"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "nameProperty": null,
                        "designer|userClassName": "MyJsonWriter13",
                        "encode": true,
                        "root": "data"
                    },
                    "designerId": "da436253-e7d7-471d-b979-7c065c7592a5"
                }
            ]
        },
        {
            "type": "basiceventbinding",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onJsonstoreFacettesChanged",
                "fn": "onJsonstoreFacettesChanged",
                "implHandler": [
                    "Rubedo.controller.DAMController.prototype.renderFacets(facettes);\r",
                    "Rubedo.controller.DAMController.prototype.renderActiveFacets(activeFacettes);\r",
                    ""
                ],
                "name": "facettesChanged",
                "scope": "me"
            },
            "designerId": "4f30b3fd-cd4d-4a4d-b52a-306a74ce42a8"
        },
        {
            "type": "basiceventbinding",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onJsonstoreLoad",
                "fn": "onJsonstoreLoad",
                "implHandler": [
                    "var rawActiveFacettes = store.getProxy().activeFacettes;\r",
                    "var refinedActiveFacettes={};\r",
                    "Ext.Array.forEach(rawActiveFacettes, function(thing){\r",
                    "    if (thing.terms.length==1){\r",
                    "        refinedActiveFacettes[thing.id]=thing.terms[0].term;\r",
                    "    } else {\r",
                    "        refinedActiveFacettes[thing.id]=Ext.Array.pluck(thing.terms, \"term\");\r",
                    "    }\r",
                    "});\r",
                    "store.facettes=store.getProxy().facettes;\r",
                    "store.activeFacettes=refinedActiveFacettes;\r",
                    "store.fireEvent(\"facettesChanged\",store.facettes,rawActiveFacettes);"
                ],
                "name": "load",
                "scope": "me"
            },
            "designerId": "2c3c1217-78bc-4668-bdd8-dda03698d012"
        },
        {
            "type": "basiceventbinding",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onJsonstoreBeforeLoad",
                "fn": "onJsonstoreBeforeLoad",
                "implHandler": [
                    "var source=Ext.clone(store.activeFacettes);\r",
                    "var adaptedParams= { };\r",
                    "Ext.Object.each(source, function(key, value, object){\r",
                    "    if (Ext.isArray(value)) {\r",
                    "        adaptedParams[key+\"[]\"]=value;\r",
                    "\r",
                    "    } else {\r",
                    "        adaptedParams[key]=value;\r",
                    "    }\r",
                    "});\r",
                    "store.getProxy().extraParams=adaptedParams;"
                ],
                "name": "beforeload",
                "scope": "me"
            },
            "designerId": "0a5516d7-99a0-4842-9dd2-3bc9dd725c43"
        },
        {
            "type": "Ext.util.Sorter",
            "reference": {
                "name": "sorters",
                "type": "object"
            },
            "codeClass": null,
            "userConfig": {
                "direction": "DESC",
                "property": "score",
                "designer|userClassName": "MySorter6"
            },
            "designerId": "ca4a4559-facf-42c7-9914-0c926c14a775"
        }
    ]
}