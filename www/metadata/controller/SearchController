{
    "type": "controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "SearchController",
        "designer|userAlias": "SearchController"
    },
    "id": "ExtBox1-ext-gen15520",
    "designerId": "606ff5d4-d66c-4e04-81ba-5331a2b062fc",
    "cn": [
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "mainSearchLaunch",
                "fn": "mainSearchLaunch",
                "implHandler": [
                    "var me=this;\r",
                    "if (Ext.getCmp('ESSearchField').isValid()){\r",
                    "    var DisplayResults=Ext.getCmp('searchResultsWindow');\r",
                    "    if (Ext.isEmpty(DisplayResults)){\r",
                    "        DisplayResults=Ext.widget('searchResultsWindow');\r",
                    "        Ext.getCmp(\"ViewportPrimaire\").add(DisplayResults);\r",
                    "        DisplayResults.show();\r",
                    "    } else {\r",
                    "        DisplayResults.show();\r",
                    "        DisplayResults.toFront();\r",
                    "    }\r",
                    "    DisplayResults.getComponent(1).getStore().removeAll();\r",
                    "    DisplayResults.queryContext={ };\r",
                    "    DisplayResults.setLoading(true);\r",
                    "    Ext.Ajax.request({\r",
                    "        url: 'elastic-search',\r",
                    "        params: {\r",
                    "            query: Ext.getCmp('ESSearchField').getValue()\r",
                    "        },\r",
                    "        success: function(response){\r",
                    "            var data=[];\r",
                    "            var bigRez=Ext.JSON.decode(response.responseText);\r",
                    "            Ext.Array.forEach(bigRez.results, function(rez){\r",
                    "                var thing=rez[Ext.Object.getKeys(rez)[0]]._source;\r",
                    "                data.push({\r",
                    "                    text:thing.text,\r",
                    "                    type:thing.contentType,\r",
                    "                    author:thing.author,\r",
                    "                    lastUpdateTime:thing.lastUpdateTime,\r",
                    "                    id:rez[Ext.Object.getKeys(rez)[0]]._id\r",
                    "                });\r",
                    "            });\r",
                    "            DisplayResults.getComponent(1).getStore().loadData(data);\r",
                    "            DisplayResults.setLoading(false);            \r",
                    "            Ext.getCmp(\"ESFacetQueryField\").setValue(Ext.getCmp('ESSearchField').getValue());\r",
                    "            me.renderFacets(bigRez.facets);\r",
                    "        }\r",
                    "    });\r",
                    "}"
                ],
                "name": "click",
                "scope": "me",
                "designer|targetType": "Ext.button.Button",
                "designer|controlQuery": "#ESSearchButton"
            },
            "designerId": "73056bf5-5078-4dd5-bd60-eb6b0e8f8262"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "mainResultWindowGetContext",
                "fn": "mainResultWindowGetContext",
                "implHandler": [
                    "if (ACL.interfaceRights['read.ui.contents']){\r",
                    "    Rubedo.controller.ContributionContenusController.prototype.unitaryContentEdit(record.get(\"id\"));\r",
                    "}"
                ],
                "name": "itemdblclick",
                "scope": "me",
                "designer|targetType": "Ext.grid.Panel",
                "designer|controlQuery": "#ResultContentsGrid"
            },
            "designerId": "fea6c637-212a-4372-a699-1d94b9313c48"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "renderFacets",
                "fn": "renderFacets",
                "designer|params": [
                    "facets"
                ],
                "implHandler": [
                    "var context=Ext.getCmp('searchResultsWindow').queryContext;\r",
                    "var me=this;\r",
                    "var target=Ext.getCmp(\"searchFacetBox\");\r",
                    "target.removeAll();\r",
                    "Ext.suspendLayouts();\r",
                    "Ext.Array.forEach(facets, function(facet){\r",
                    "    if (!Ext.isEmpty(facet.terms)){\r",
                    "    var newFacet = Ext.widget(\"fieldset\", {title:facet.name, collapsible:true});\r",
                    "    newFacet.usedProperty=facet.name;\r",
                    "    \r",
                    "        Ext.Array.forEach(facet.terms, function(term){\r",
                    "            var newTerm=Ext.widget(\"checkbox\", {fieldLabel:term.term+\" (\"+term.count+\")\", name:term.term, checked:context[term.term]||false});\r",
                    "            newTerm.on(\"change\",function(){me.readAndSearch();});\r",
                    "            newFacet.add(newTerm);\r",
                    "        });\r",
                    "    \r",
                    "    target.add(newFacet);\r",
                    "}\r",
                    "});\r",
                    "Ext.resumeLayouts(true);"
                ]
            },
            "designerId": "0bf37f2e-bd96-4dc3-b672-d37d65fbc7e7"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "readAndSearch",
                "fn": "readAndSearch",
                "implHandler": [
                    "var target=Ext.getCmp(\"searchFacetBox\");\r",
                    "var me=this;\r",
                    "var paramObject={ };\r",
                    "var context={ };\r",
                    "Ext.Array.forEach(target.query(\"field\"),function(field){\r",
                    "    if ((field.isXType(\"checkboxfield\"))&&(field.getValue())){\r",
                    "        paramObject[field.up().usedProperty]=field.name;\r",
                    "        context[field.name]=true;\r",
                    "    }\r",
                    "});\r",
                    "paramObject.query=Ext.getCmp(\"ESFacetQueryField\").getValue();\r",
                    "me.launchQuery(paramObject);\r",
                    "Ext.getCmp('searchResultsWindow').queryContext=context;"
                ]
            },
            "designerId": "491bda99-fa1f-45ee-93c1-b2f35de9467c"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "launchQuery",
                "fn": "launchQuery",
                "designer|params": [
                    "paramObject"
                ],
                "implHandler": [
                    "var DisplayResults=Ext.getCmp('searchResultsWindow');\r",
                    "var me=this;\r",
                    "DisplayResults.setLoading(true);\r",
                    "Ext.Ajax.request({\r",
                    "    url: 'elastic-search',\r",
                    "    params: paramObject,\r",
                    "    success: function(response){\r",
                    "        var data=[];\r",
                    "        var bigRez=Ext.JSON.decode(response.responseText);\r",
                    "        Ext.Array.forEach(bigRez.results, function(rez){\r",
                    "            var thing=rez[Ext.Object.getKeys(rez)[0]]._source;\r",
                    "            data.push({\r",
                    "                text:thing.text,\r",
                    "                type:thing.contentType,\r",
                    "                author:thing.author,\r",
                    "                lastUpdateTime:thing.lastUpdateTime,\r",
                    "                id:rez[Ext.Object.getKeys(rez)[0]]._id\r",
                    "            });\r",
                    "        });\r",
                    "        DisplayResults.getComponent(1).getStore().loadData(data);\r",
                    "        DisplayResults.setLoading(false);\r",
                    "        me.renderFacets(bigRez.facets);\r",
                    "    }\r",
                    "});\r",
                    ""
                ]
            },
            "designerId": "3ccda6b2-2528-431c-919a-d388e299184f"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onESFacetQueryBtnClick",
                "fn": "onESFacetQueryBtnClick",
                "implHandler": [
                    "this.readAndSearch();"
                ],
                "name": "click",
                "scope": "me",
                "designer|targetType": "Ext.button.Button",
                "designer|controlQuery": "#ESFacetQueryBtn"
            },
            "designerId": "73bc0a8e-d559-4934-9ab9-dcf87216a470"
        }
    ]
}