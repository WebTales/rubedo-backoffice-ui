{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "models": [
            "taxonomyTermModel",
            "taxonomieDataModel"
        ],
        "views": [
            "TermesTaxonomieTree",
            "nouveauTaxoFenetre"
        ],
        "designer|userClassName": "TaxonomieController"
    },
    "designerId": "694f297c-7498-4216-9113-e00663d5f6c4",
    "cn": [
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "selectVocabulary",
                "implHandler": [
                    "var tablepanel=Ext.getCmp(\"AdminfTaxonomieGrid\");\r",
                    "Ext.getCmp(\"taxonomyCenterBox\").enable();\r",
                    "if (record.get(\"id\")!=\"navigation\"){\r",
                    "    Ext.getCmp(\"boutonEnregistrerTaxo\").enable();\r",
                    "    Ext.getCmp(\"boutonSupprimerTaxo\").enable();\r",
                    "} else {\r",
                    "    Ext.getCmp(\"boutonEnregistrerTaxo\").disable();\r",
                    "    Ext.getCmp(\"boutonSupprimerTaxo\").disable();\r",
                    "} \r",
                    "Ext.getCmp(\"taxoTermEditBrnGroup\").disable();\r",
                    "var filArianne = tablepanel.findParentByType('window').getDockedComponent('filArianne');\r",
                    "var typeFil = filArianne.getComponent('type');\r",
                    "if (Ext.isDefined(typeFil)) {typeFil.setText(record.get(\"name\"));}\r",
                    "else { typeFil= Ext.widget('button',{iconCls: \"page_taxonomy\", text:record.get(\"name\"), itemId:'type'});\r",
                    "filArianne.add(typeFil);\r",
                    "}\r",
                    "Ext.getCmp(\"ProprietesTaxonomie\").getForm().setValues(record.getData());\r",
                    "Ext.getCmp(\"taxoRightsBox\").getForm().setValues(record.getData());\r",
                    "Ext.Array.forEach(Ext.getCmp(\"ProprietesTaxonomie\").items.items, function(thingy){\r",
                    "thingy.setReadOnly((!ACL.interfaceRights[\"write.ui.taxonomy\"])||(record.get(\"readOnly\")));\r",
                    "});\r",
                    "Ext.Array.forEach(Ext.getCmp(\"taxoRightsBox\").items.items, function(thingy){\r",
                    "thingy.setReadOnly((!ACL.interfaceRights[\"write.ui.taxonomy\"])||(record.get(\"readOnly\")));\r",
                    "});\r",
                    "if (Ext.isDefined(Ext.getCmp('TermesTaxonomieTree'))){\r",
                    "Ext.getCmp('TermesTaxonomieTree').destroy();}\r",
                    "var store = Ext.create('Ext.data.TreeStore', {\r",
                    "model: 'Rubedo.model.taxonomyTermModel',\r",
                    "autoSync:true,\r",
                    "proxy: {\r",
                    "    batchActions:false,\r",
                    "    type: 'ajax',\r",
                    "    api: {\r",
                    "        create: 'taxonomy-terms/create',\r",
                    "        read: 'taxonomy-terms/read-child',\r",
                    "        update: 'taxonomy-terms/update',\r",
                    "        destroy: 'taxonomy-terms/delete'\r",
                    "    },\r",
                    "    reader: {\r",
                    "        getResponseData: function(response) {\r",
                    "            var data, error;\r",
                    "\r",
                    "            try {\r",
                    "                data = Ext.decode(response.responseText);\r",
                    "                if (Ext.isDefined(data.data)){data.children=data.data;}// error fix\r",
                    "                return this.readRecords(data);\r",
                    "            } catch (ex) {\r",
                    "                error = new Ext.data.ResultSet({\r",
                    "                    total  : 0,\r",
                    "                    count  : 0,\r",
                    "                    records: [],\r",
                    "                    success: false,\r",
                    "                    message: ex.message\r",
                    "                });\r",
                    "\r",
                    "                this.fireEvent('exception', this, response, error);\r",
                    "\r",
                    "                Ext.Logger.warn('Unable to parse the JSON returned by the server');\r",
                    "\r",
                    "                return error;\r",
                    "            }\r",
                    "        },\r",
                    "        type: 'json',\r",
                    "        messageProperty: 'message'\r",
                    "\r",
                    "    },\r",
                    "    writer: {\r",
                    "        type: 'json',\r",
                    "        encode: true,\r",
                    "        root: 'data'\r",
                    "    }\r",
                    "},\r",
                    "filters: {\r",
                    "    property: 'vocabularyId',\r",
                    "    value: record.get(\"id\")\r",
                    "},\r",
                    "sorters: {\r",
                    "    property: 'orderValue'\r",
                    "}\r",
                    "});\r",
                    "var plugins=[\r",
                    "Ext.create('Ext.grid.plugin.CellEditing', {\r",
                    "clicksToEdit:2\r",
                    "})\r",
                    "];\r",
                    "plugins[0].on(\"beforeedit\", function(a,b){if ((b.record.get(\"readOnly\"))||(b.record.isRoot())){return(false);}});\r",
                    "if ((!ACL.interfaceRights[\"write.ui.taxonomy\"])||(record.get(\"readOnly\"))||(record.get(\"id\")==\"navigation\")){\r",
                    "plugins = [];\r",
                    "}\r",
                    "var arbre = Ext.widget('TermesTaxonomieTree', {store: store, flex:1, plugins:plugins});\r",
                    "\r",
                    "Ext.getCmp('conteneurAdminfTaxo').add(arbre);\r",
                    "store.load();\r",
                    "\r",
                    "var boiteMeta = Ext.getCmp(\"adminFTaxonomie\").getDockedComponent('barreMeta').getComponent('boiteBarreMeta');\r",
                    "customMeta=record.get(\"name\")+\"</br> \"+Rubedo.RubedoAutomatedElementsLoc.creationText+\" : \"+Ext.Date.format(record.get(\"createTime\"), Ext.Date.defaultFormat)+\r",
                    "\" \"+Rubedo.RubedoAutomatedElementsLoc.lastUpdateText+\" : \"+Ext.Date.format(record.get(\"lastUpdateTime\"), Ext.Date.defaultFormat)+\" \"+Rubedo.RubedoAutomatedElementsLoc.authorText+\" : \"+record.get(\"createUser\").fullName;\r",
                    "boiteMeta.update(customMeta);"
                ],
                "name": "select",
                "scope": "me",
                "designer|targetType": "Ext.grid.Panel",
                "designer|controlQuery": "#AdminfTaxonomieGrid"
            },
            "designerId": "01427099-ea52-45c1-a5ad-233d5b442eec"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "removeTerm",
                "implHandler": [
                    "var cible = Ext.getCmp('TermesTaxonomieTree').getSelectionModel().getLastSelected();\r",
                    "if (Ext.isDefined(cible)) {\r",
                    "    Ext.getCmp('TermesTaxonomieTree').getStore().suspendAutoSync();\r",
                    "    var myParent=cible.parentNode;\r",
                    "    if ((myParent.childNodes.length==1)&&(!myParent.isRoot())){\r",
                    "        myParent.set(\"expandable\",false);\r",
                    "    }\r",
                    "    cible.remove();\r",
                    "    Ext.getCmp('TermesTaxonomieTree').getStore().resumeAutoSync();\r",
                    "    Ext.getCmp('TermesTaxonomieTree').getStore().sync();\r",
                    "    Ext.getCmp(\"taxoTermEditBrnGroup\").disable();\r",
                    "}\r",
                    "if (button.id!=\"taxoTermKiller\") {\r",
                    "    button.up().destroy();\r",
                    "}"
                ],
                "name": "click",
                "scope": "me",
                "designer|targetType": "Ext.button.Button",
                "designer|controlQuery": "#boutonSupprimerTermesTaxo, #taxoTermKiller"
            },
            "designerId": "ce78b2cf-cde8-4749-acbf-369ba7160598"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "addTerm",
                "implHandler": [
                    "var mainTaxo=Ext.getCmp('AdminfTaxonomieGrid').getSelectionModel().getLastSelected();\r",
                    "if (mainTaxo !== null) {\r",
                    "\r",
                    "    var champT = Ext.getCmp('nouveauTermeTaxoField');\r",
                    "    if (champT.isValid()) {\r",
                    "        var cibleI = Ext.getCmp('TermesTaxonomieTree').getSelectionModel().getLastSelected();\r",
                    "        if (cibleI !== null) {\r",
                    "            Ext.getCmp('TermesTaxonomieTree').getStore().suspendAutoSync();\r",
                    "            cibleI.set(\"expandable\",true);\r",
                    "            cibleI.expand(false, function(){\r",
                    "                var orderValue = 100;\r",
                    "                if (cibleI.hasChildNodes()){              \r",
                    "                    orderValue=cibleI.lastChild.get(\"orderValue\")+100;\r",
                    "                }\r",
                    "                cibleI.appendChild({text: champT.getValue(), vocabularyId:mainTaxo.get(\"id\"),expandable:false, orderValue: orderValue});\r",
                    "\r",
                    "                Ext.getCmp('nouveauTermeTaxoField').setValue();\r",
                    "                Ext.getCmp('TermesTaxonomieTree').getStore().resumeAutoSync();\r",
                    "                Ext.getCmp('TermesTaxonomieTree').getStore().sync();\r",
                    "                button.up().destroy();\r",
                    "            });\r",
                    "\r",
                    "        } \r",
                    "\r",
                    "\r",
                    "\r",
                    "    }\r",
                    "}\r",
                    ""
                ],
                "name": "click",
                "scope": "me",
                "designer|targetType": "Ext.button.Button",
                "designer|controlQuery": "#boutonAjouterTermesTaxo"
            },
            "designerId": "b8758b15-4913-4a79-9539-ed729c7526d2"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "saveVocabulary",
                "implHandler": [
                    "if (Ext.getCmp('AdminfTaxonomieGrid').getSelectionModel().getLastSelected() !== null) {\r",
                    "    var cibleR=Ext.getCmp('AdminfTaxonomieGrid').getSelectionModel().getLastSelected();\r",
                    "    cibleR.beginEdit();\r",
                    "    if (Ext.getCmp(\"ProprietesTaxonomie\").getForm().isValid()){\r",
                    "        cibleR.set(Ext.getCmp(\"ProprietesTaxonomie\").getForm().getValues());\r",
                    "        cibleR.set(Ext.getCmp(\"taxoRightsBox\").getForm().getValues());\r",
                    "    }\r",
                    "    cibleR.endEdit();\r",
                    "}"
                ],
                "name": "click",
                "scope": "me",
                "designer|targetType": "Ext.button.Button",
                "designer|controlQuery": "#boutonEnregistrerTaxo"
            },
            "designerId": "87a4f3d1-7180-4c29-b9e6-24d7dc604e24"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "recupereFils",
                "designer|params": [
                    "cible"
                ],
                "implHandler": [
                    "var fils = [ ];\r",
                    "if (cible.length>0) {\r",
                    "    var f=0;\r",
                    "    for (f=0; f<cible.length; f++) {\r",
                    "        fils.push({text: cible[f].data.text, children: this.recupereFils(cible[f].childNodes)});\r",
                    "    }    \r",
                    "}\r",
                    "return fils;"
                ]
            },
            "designerId": "f4c567ad-de1e-4696-8221-38581beaa8e4"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "deleteVocabulary",
                "implHandler": [
                    "var cible = Ext.getCmp('AdminfTaxonomieGrid').getSelectionModel().getSelection()[0];\r",
                    "if (Ext.isDefined(cible)) {\r",
                    "    var window = Ext.widget('delConfirmZ');\r",
                    "    window.specificMessage=Rubedo.RubedoAutomatedElementsLoc.thisVocabularyText;\r",
                    "    Ext.getCmp('ViewportPrimaire').add(window);\r",
                    "    window.show();\r",
                    "    Ext.getCmp('delConfirmZOui').on('click', function() { \r",
                    "        Ext.getCmp('AdminfTaxonomieGrid').getStore().remove(cible);\r",
                    "        Ext.getCmp(\"ProprietesTaxonomie\").getForm().reset(true);\r",
                    "        Ext.getCmp(\"TermesTaxonomieTree\").hide();\r",
                    "        Ext.getCmp(\"taxonomyCenterBox\").disable();\r",
                    "        Ext.getCmp(\"boutonEnregistrerTaxo\").disable();\r",
                    "        Ext.getCmp(\"boutonSupprimerTaxo\").disable();        \r",
                    "        Ext.getCmp('delConfirmZ').close();\r",
                    "        Ext.getCmp(\"ProprietesTaxonomie\").getForm().reset();\r",
                    "        Ext.getCmp(\"taxoRightsBox\").getForm().reset();\r",
                    "        Ext.getCmp(\"taxoTermEditBrnGroup\").disable();\r",
                    "    });  \r",
                    "\r",
                    "}"
                ],
                "name": "click",
                "scope": "me",
                "designer|targetType": "Ext.button.Button",
                "designer|controlQuery": "#boutonSupprimerTaxo"
            },
            "designerId": "257c542b-3d3b-4c6f-b2e9-1e0db2c01e04"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "newVocabulary",
                "implHandler": [
                    "if (Ext.getCmp('champCreerTaxo').isValid()) {\r",
                    "    var nouveauVocab = Ext.create('model.taxonomieDataModel', {\r",
                    "        name: Ext.getCmp('champCreerTaxo').getValue(),\r",
                    "        extendable: false,\r",
                    "        multiSelect: true,\r",
                    "        mandatory: false\r",
                    "    });\r",
                    "    Ext.getCmp('AdminfTaxonomieGrid').getStore().add(nouveauVocab);\r",
                    "    Ext.getCmp('AdminfTaxonomieGrid').getStore().addListener(\"datachanged\",function(){Ext.getCmp('AdminfTaxonomieGrid').getSelectionModel().select(nouveauVocab);},this,{single:true});\r",
                    "    Ext.getCmp('nouveauTaxoFenetre').close();\r",
                    "}    "
                ],
                "name": "click",
                "scope": "me",
                "designer|targetType": "Ext.button.Button",
                "designer|controlQuery": "#boutonCreerTaxo"
            },
            "designerId": "30f84c36-ac93-43a3-aeed-8a4c8ffb8f0e"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "openVocabWindow",
                "implHandler": [
                    "var window = Ext.widget('nouveauTaxoFenetre');\r",
                    "Ext.getCmp('ViewportPrimaire').add(window);\r",
                    "window.show();\r",
                    ""
                ],
                "name": "click",
                "scope": "me",
                "designer|targetType": "Ext.button.Button",
                "designer|controlQuery": "#boutonCreerTaxonomie"
            },
            "designerId": "dba76a0e-a6ed-496f-8e85-7a3475ac10e3"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "updateTerm",
                "implHandler": [
                    "if (Ext.getCmp('AdminfTaxonomieGrid').getSelectionModel().getLastSelected() !== null) {\r",
                    "\r",
                    "    var champT = Ext.getCmp('nouveauTermeTaxoField');\r",
                    "    if (champT.isValid()) {\r",
                    "        var cibleI = Ext.getCmp('TermesTaxonomieTree').getSelectionModel().getLastSelected();\r",
                    "        if (cibleI !== null) {\r",
                    "            cibleI.set(\"text\", champT.getValue());\r",
                    "            Ext.getCmp('nouveauTermeTaxoField').setValue();\r",
                    "        } \r",
                    "    }\r",
                    "}\r",
                    "button.up().destroy();"
                ],
                "name": "click",
                "scope": "me",
                "designer|targetType": "Ext.button.Button",
                "designer|controlQuery": "#boutonModifierTermesTaxo"
            },
            "designerId": "23c5b7f6-6ebc-46e8-83c6-371d7844c330"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "termsContextMenuDisplay",
                "implHandler": [
                    "if ((ACL.interfaceRights[\"write.ui.taxonomyTerms\"])&&(Ext.getCmp(\"AdminfTaxonomieGrid\").getSelectionModel().getLastSelected().get(\"id\")!=\"navigation\")){\r",
                    "    var menu= Ext.getCmp('termContextMenu');\r",
                    "    if (Ext.isEmpty(menu)){\r",
                    "        menu = Ext.widget('termContextMenu');\r",
                    "        menu.on('blur', function(){this.destroy();});}\r",
                    "        menu.showAt(Ext.EventObject.getXY());\r",
                    "        if (record.get(\"id\")==\"root\") {\r",
                    "            Ext.getCmp(\"boutonSupprimerTermesTaxo\").hide();\r",
                    "        } else {\r",
                    "            Ext.getCmp(\"boutonSupprimerTermesTaxo\").show();\r",
                    "        }\r",
                    "\r",
                    "    }\r",
                    "    e.stopEvent();"
                ],
                "name": "itemcontextmenu",
                "scope": "me",
                "designer|targetType": "Ext.tree.Panel",
                "designer|controlQuery": "#TermesTaxonomieTree"
            },
            "designerId": "309b5f2a-8c86-4dec-b9f7-db5e07610ac1"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onTermesTaxonomieTreeSelectionChange",
                "implHandler": [
                    "if (Ext.isEmpty(selected)){\r",
                    "    Ext.getCmp(\"taxoTermEditBrnGroup\").disable();\r",
                    "} else {\r",
                    "    var openVocab =Ext.getCmp(\"AdminfTaxonomieGrid\").getSelectionModel().getLastSelected();\r",
                    "    if ((!openVocab.get(\"readOnly\"))&&(openVocab.get(\"name\")!=\"navigation\")){\r",
                    "        Ext.getCmp(\"taxoTermEditBrnGroup\").enable();\r",
                    "        if (selected[0].isRoot()){\r",
                    "            Ext.getCmp(\"taxoTermKiller\").disable();\r",
                    "        } else {\r",
                    "            Ext.getCmp(\"taxoTermKiller\").enable();\r",
                    "        }\r",
                    "    } else {\r",
                    "        Ext.getCmp(\"taxoTermEditBrnGroup\").disable();\r",
                    "    }\r",
                    "}"
                ],
                "name": "selectionchange",
                "scope": "me",
                "designer|targetType": "Ext.tree.Panel",
                "designer|controlQuery": "#TermesTaxonomieTree"
            },
            "designerId": "91b19d2d-c3e5-42bc-a1d0-2e27d7b4aeed"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onTaxoTermInsertorBtnClick",
                "implHandler": [
                    "var mainTaxo=Ext.getCmp('AdminfTaxonomieGrid').getSelectionModel().getLastSelected();\r",
                    "if (mainTaxo !== null) {\r",
                    "\r",
                    "    var champT = button.previousSibling();\r",
                    "    if (champT.isValid()) {\r",
                    "        var cibleI = Ext.getCmp('TermesTaxonomieTree').getSelectionModel().getLastSelected();\r",
                    "        if (cibleI !== null) {\r",
                    "            Ext.getCmp('TermesTaxonomieTree').getStore().suspendAutoSync();\r",
                    "            cibleI.set(\"expandable\",true);\r",
                    "            cibleI.expand(false, function(){\r",
                    "                var orderValue = 100;\r",
                    "                if (cibleI.hasChildNodes()){              \r",
                    "                    orderValue=cibleI.lastChild.get(\"orderValue\")+100;\r",
                    "                }\r",
                    "                cibleI.appendChild({text: champT.getValue(), vocabularyId:mainTaxo.get(\"id\"),expandable:false, orderValue: orderValue});\r",
                    "                Ext.getCmp('TermesTaxonomieTree').getStore().resumeAutoSync();\r",
                    "                Ext.getCmp('TermesTaxonomieTree').getStore().sync();\r",
                    "                button.up().up().close();\r",
                    "            });\r",
                    "        } \r",
                    "\r",
                    "\r",
                    "\r",
                    "    }\r",
                    "}\r",
                    ""
                ],
                "name": "click",
                "scope": "me",
                "designer|targetType": "Ext.button.Button",
                "designer|controlQuery": "#taxoTermInsertorBtn"
            },
            "designerId": "192085e9-79c0-4ea9-a753-820eaf11f3df"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onTaxoOpenInsertBtnClick",
                "implHandler": [
                    "Ext.widget(\"taxoTermInsertWindow\").show();"
                ],
                "name": "click",
                "scope": "me",
                "designer|targetType": "Ext.button.Button",
                "designer|controlQuery": "#taxoOpenInsertBtn"
            },
            "designerId": "e41b00b7-8464-4ddc-b8d3-6c441a3ec826"
        }
    ]
}