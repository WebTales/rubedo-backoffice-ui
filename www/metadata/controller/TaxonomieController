{
    "type": "controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "TaxonomieController",
        "models": [
            "termeTaxonomieModel"
        ],
        "views": [
            "TermesTaxonomieTree",
            "nouveauTaxoFenetre"
        ]
    },
    "id": "ExtBox1-ext-gen63606",
    "designerId": "694f297c-7498-4216-9113-e00663d5f6c4",
    "cn": [
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onGridpanelSelect",
                "fn": "onGridpanelSelect",
                "implHandler": [
                    "var tablepanel=Ext.getCmp(\"AdminfTaxonomieGrid\");\r",
                    "var filArianne = tablepanel.findParentByType('window').getDockedComponent('filArianne');\r",
                    "var typeFil = filArianne.getComponent('type');\r",
                    "if (Ext.isDefined(typeFil)) {typeFil.setText(record.data.titre);}\r",
                    "else { typeFil= Ext.widget('button',{iconCls: \"folder\", text:record.data.titre, itemId:'type'});\r",
                    "filArianne.add(typeFil);\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "Ext.getCmp('champEditionTaxoTitre').setValue(record.data.titre);\r",
                    "Ext.getCmp('champEditionTaxoDescription').setValue(record.data.description);\r",
                    "Ext.getCmp('champEditionTaxoHelpText').setValue(record.data.helpText);\r",
                    "Ext.getCmp('champEditionTaxoEtiquettes').setValue(record.data.etiquettes);\r",
                    "Ext.getCmp('champEditionTaxoChoixMultiple').setValue(record.data.choixMultiple);\r",
                    "Ext.getCmp('champEditionTaxoObligatoire').setValue(record.data.obligatoire);\r",
                    "if (Ext.isDefined(Ext.getCmp('TermesTaxonomieTree'))){\r",
                    "Ext.getCmp('TermesTaxonomieTree').destroy();}\r",
                    "var data =  record.data.termes;\r",
                    "var store = Ext.create('Ext.data.TreeStore', {\r",
                    "model: 'KECMours.model.termeTaxonomieModel',\r",
                    "root: Ext.clone(data),\r",
                    "proxy: {\r",
                    "    type: 'memory'\r",
                    "}\r",
                    "});\r",
                    "var arbre = Ext.widget('TermesTaxonomieTree', {store: store, flex:1});\r",
                    "\r",
                    "Ext.getCmp('conteneurAdminfTaxo').add(arbre);\r",
                    "arbre.getStore().getRootNode().expand(true);"
                ],
                "name": "select",
                "scope": "me",
                "designer|targetType": "Ext.grid.Panel",
                "designer|controlQuery": "#AdminfTaxonomieGrid"
            },
            "designerId": "01427099-ea52-45c1-a5ad-233d5b442eec"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "supprimeTerme",
                "fn": "supprimeTerme",
                "implHandler": [
                    "var cible = Ext.getCmp('TermesTaxonomieTree').getSelectionModel().getLastSelected();\r",
                    "if (Ext.isDefined(cible)) {\r",
                    "    cible.remove();\r",
                    "}"
                ],
                "name": "click",
                "scope": "me",
                "designer|targetType": "Ext.button.Button",
                "designer|controlQuery": "#boutonSupprimerTermesTaxo"
            },
            "designerId": "ce78b2cf-cde8-4749-acbf-369ba7160598"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "ajouterTerme",
                "fn": "ajouterTerme",
                "implHandler": [
                    "if (Ext.getCmp('AdminfTaxonomieGrid').getSelectionModel().getLastSelected() !== null) {\r",
                    "\r",
                    "    var champT = Ext.getCmp('nouveauTermeTaxoField');\r",
                    "    if (champT.isValid()) {\r",
                    "        var cibleI = Ext.getCmp('TermesTaxonomieTree').getSelectionModel().getLastSelected();\r",
                    "        if (cibleI !== null) {\r",
                    "            cibleI.appendChild({text: champT.getValue()});\r",
                    "            cibleI.expand();\r",
                    "            Ext.getCmp('nouveauTermeTaxoField').setValue();\r",
                    "        } \r",
                    "\r",
                    "\r",
                    "\r",
                    "    }\r",
                    "}"
                ],
                "name": "click",
                "scope": "me",
                "designer|targetType": "Ext.button.Button",
                "designer|controlQuery": "#boutonAjouterTermesTaxo"
            },
            "designerId": "b8758b15-4913-4a79-9539-ed729c7526d2"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "enregistrerTaxo",
                "fn": "enregistrerTaxo",
                "implHandler": [
                    "if (Ext.getCmp('AdminfTaxonomieGrid').getSelectionModel().getLastSelected() !== null) {\r",
                    "    var cibleR=Ext.getCmp('AdminfTaxonomieGrid').getSelectionModel().getLastSelected();\r",
                    "     cibleR.beginEdit();\r",
                    "    if (Ext.getCmp('champEditionTaxoTitre').isValid()){cibleR.set(\"titre\",Ext.getCmp('champEditionTaxoTitre').getValue()); }\r",
                    "    if (Ext.getCmp('champEditionTaxoDescription').isValid()){cibleR.set(\"description\",Ext.getCmp('champEditionTaxoDescription').getValue()); }\r",
                    "    if (Ext.getCmp('champEditionTaxoHelpText').isValid()){cibleR.set(\"helpText\",Ext.getCmp('champEditionTaxoHelpText').getValue()); }\r",
                    "    if (Ext.getCmp('champEditionTaxoEtiquettes').isValid()){cibleR.set(\"etiquettes\",Ext.getCmp('champEditionTaxoEtiquettes').getValue()); }\r",
                    "    if (Ext.getCmp('champEditionTaxoChoixMultiple').isValid()){cibleR.set(\"choixMultiple\",Ext.getCmp('champEditionTaxoChoixMultiple').getValue()); }\r",
                    "    if (Ext.getCmp('champEditionTaxoObligatoire').isValid()){cibleR.set(\"obligatoire\",Ext.getCmp('champEditionTaxoObligatoire').getValue()); }\r",
                    "    var racineR = Ext.getCmp('TermesTaxonomieTree').getStore().getRootNode();\r",
                    "    var nouvRacine = {text: racineR.data.text, children: this.recupereFils(racineR.childNodes)};  \r",
                    "    cibleR.set(\"termes\",Ext.clone(nouvRacine));\r",
                    "    cibleR.endEdit();\r",
                    "}"
                ],
                "name": "click",
                "scope": "me",
                "designer|targetType": "Ext.button.Button",
                "designer|controlQuery": "#boutonEnregistrerTaxo"
            },
            "designerId": "87a4f3d1-7180-4c29-b9e6-24d7dc604e24"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "recupereFils",
                "fn": "recupereFils",
                "designer|params": [
                    "cible"
                ],
                "implHandler": [
                    "var fils = [ ];\r",
                    "if (cible.length>0) {\r",
                    "    var f=0;\r",
                    "    for (f=0; f<cible.length; f++) {\r",
                    "        fils.push({text: cible[f].data.text, children: this.recupereFils(cible[f].childNodes)});\r",
                    "    }    \r",
                    "}\r",
                    "return fils;"
                ]
            },
            "designerId": "f4c567ad-de1e-4696-8221-38581beaa8e4"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "supprimerVocabulaire",
                "fn": "supprimerVocabulaire",
                "implHandler": [
                    "var cible = Ext.getCmp('AdminfTaxonomieGrid').getSelectionModel().getSelection()[0];\r",
                    "if (Ext.isDefined(cible)) {\r",
                    "    var fenetre = Ext.widget('delConfirmZ');\r",
                    "    fenetre.showAt(screen.width/2-100, 100);\r",
                    "    Ext.getCmp('delConfirmZOui').on('click', function() { \r",
                    "        Ext.getCmp('AdminfTaxonomieGrid').getStore().remove(cible);\r",
                    "        Ext.getCmp('delConfirmZ').close();\r",
                    "    });  \r",
                    "\r",
                    "}"
                ],
                "name": "click",
                "scope": "me",
                "designer|targetType": "Ext.button.Button",
                "designer|controlQuery": "#boutonSupprimerTaxo"
            },
            "designerId": "257c542b-3d3b-4c6f-b2e9-1e0db2c01e04"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "creeVocabulaire",
                "fn": "creeVocabulaire",
                "implHandler": [
                    "if (Ext.getCmp('champCreerTaxo').isValid()) {\r",
                    "    var nouveauVocab = Ext.create('model.taxonomieDataModel', {\r",
                    "        titre: Ext.getCmp('champCreerTaxo').getValue(),\r",
                    "        etiquettes: false,\r",
                    "        choixMultiple: true,\r",
                    "        obligatoire: false,\r",
                    "        termes:\t{\r",
                    "            children:[\r",
                    "            ]\r",
                    "        }\r",
                    "\r",
                    "\r",
                    "    });\r",
                    "    Ext.getCmp('AdminfTaxonomieGrid').getStore().add(nouveauVocab);\r",
                    "    Ext.getCmp('AdminfTaxonomieGrid').getSelectionModel().select(nouveauVocab);\r",
                    "    this.majTaxo(Ext.getCmp('AdminfTaxonomieGrid'),nouveauVocab);\r",
                    "    Ext.getCmp('nouveauTaxoFenetre').close();\r",
                    "}    "
                ],
                "name": "click",
                "scope": "me",
                "designer|targetType": "Ext.button.Button",
                "designer|controlQuery": "#boutonCreerTaxo"
            },
            "designerId": "30f84c36-ac93-43a3-aeed-8a4c8ffb8f0e"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "creerFenetreVocabulaire",
                "fn": "creerFenetreVocabulaire",
                "implHandler": [
                    "var fenetre = Ext.widget('nouveauTaxoFenetre');\r",
                    "fenetre.showAt(screen.width/2-150, 100);\r",
                    ""
                ],
                "name": "click",
                "scope": "me",
                "designer|targetType": "Ext.button.Button",
                "designer|controlQuery": "#boutonCreerTaxonomie"
            },
            "designerId": "dba76a0e-a6ed-496f-8e85-7a3475ac10e3"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onButtonClick",
                "fn": "onButtonClick",
                "implHandler": [
                    "if (Ext.getCmp('AdminfTaxonomieGrid').getSelectionModel().getLastSelected() !== null) {\r",
                    "\r",
                    "    var champT = Ext.getCmp('nouveauTermeTaxoField');\r",
                    "    if (champT.isValid()) {\r",
                    "        var cibleI = Ext.getCmp('TermesTaxonomieTree').getSelectionModel().getLastSelected();\r",
                    "        if (cibleI !== null) {\r",
                    "            cibleI.data.text= champT.getValue();\r",
                    "            Ext.getCmp('nouveauTermeTaxoField').setValue();\r",
                    "            Ext.getCmp('TermesTaxonomieTree').getView().refresh();\r",
                    "        } \r",
                    "    }\r",
                    "}"
                ],
                "name": "click",
                "scope": "me",
                "designer|targetType": "Ext.button.Button",
                "designer|controlQuery": "#boutonModifierTermesTaxo"
            },
            "designerId": "23c5b7f6-6ebc-46e8-83c6-371d7844c330"
        }
    ]
}