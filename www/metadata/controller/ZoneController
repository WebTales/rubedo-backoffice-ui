{
    "type": "controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "ZoneController",
        "views": [
            "Zone",
            "Colonne",
            "UnBloc",
            "DelConfirmZ",
            "ajoutBlocFenetre",
            "ConfigSpecBloc",
            "assistantRequetage"
        ]
    },
    "id": "ExtBox1-ext-gen27758",
    "designerId": "5db9f65a-d334-4c2e-a3a0-a5fbfe30b3fb",
    "cn": [
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "ajouteColonne",
                "fn": "ajouteColonne",
                "implHandler": [
                    "var maZone = tool.findParentByType('zone');\r",
                    "var nouvColonne = Ext.widget('colonne', {flex : 1});\r",
                    "maZone.add(nouvColonne);\r",
                    "if ((Ext.isDefined(Ext.getCmp('zoneIdField')))&&(maZone.id==Ext.getCmp('zoneIdField').getValue())) {\r",
                    "    this.updPanProp(maZone);    \r",
                    "}"
                ],
                "name": "click",
                "scope": "me",
                "designer|targetType": "Ext.panel.Tool",
                "designer|controlQuery": "[itemId='ajouterColonne']"
            },
            "designerId": "4dfbb617-557b-4056-825c-0248d53b51fa"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "enleveColonne",
                "fn": "enleveColonne",
                "implHandler": [
                    "var maZone = tool.findParentByType('zone');\r",
                    "var enleverCol = maZone.query('colonne').pop();\r",
                    "if (enleverCol.previousSibling() !== null) {maZone.remove(enleverCol);}\r",
                    "if ((Ext.isDefined(Ext.getCmp('zoneIdField')))&&(maZone.id==Ext.getCmp('zoneIdField').getValue())) {\r",
                    "    this.updPanProp(maZone); \r",
                    "\r",
                    "}"
                ],
                "name": "click",
                "scope": "me",
                "designer|targetType": "Ext.panel.Tool",
                "designer|controlQuery": "[itemId='enleverColonne']"
            },
            "designerId": "03575760-2162-429e-b1e0-d9b6ffe06ce6"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "ajoutBlocZoneFenetre",
                "fn": "ajoutBlocZoneFenetre",
                "implHandler": [
                    "tool.up().fireEvent('click');\r",
                    "var delConfirm = Ext.widget('ajoutBlocFenetre');\r",
                    "delConfirm.showAt(screen.width/2-250, 100);"
                ],
                "name": "click",
                "scope": "me",
                "designer|targetType": "Ext.panel.Tool",
                "designer|controlQuery": "[itemId='ajouterBlocZone']"
            },
            "designerId": "a5aa9892-7bea-4fb7-844d-704e268a34b4"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "deplaceBas",
                "fn": "deplaceBas",
                "implHandler": [
                    "var pos = tool.up().up().up().items.indexOf(tool.up().up());\r",
                    "tool.up().up().up().move(pos,pos+1);"
                ],
                "name": "click",
                "scope": "me",
                "designer|targetType": "Ext.panel.Tool",
                "designer|controlQuery": "[itemId='zoneBas']"
            },
            "designerId": "96d5b6a3-f59a-4295-bab5-ec5c513b5cf6"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "deplaceHaut",
                "fn": "deplaceHaut",
                "implHandler": [
                    "var pos = tool.up().up().up().items.indexOf(tool.up().up());\r",
                    "if (pos > 0) {\r",
                    "    tool.up().up().up().move(pos,pos-1);\r",
                    "}"
                ],
                "name": "click",
                "scope": "me",
                "designer|targetType": "Ext.panel.Tool",
                "designer|controlQuery": "[itemId='zoneHaut']"
            },
            "designerId": "7b73835d-7ef1-41f6-abfc-7565e3a9d82b"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onGridpanelItemClick",
                "fn": "onGridpanelItemClick",
                "implHandler": [
                    "Ext.getCmp('PaneauBlocsDetail').update(record.data);"
                ],
                "name": "itemclick",
                "scope": "me",
                "designer|targetType": "Ext.grid.Panel",
                "designer|controlQuery": "#BlocsSelectGrid"
            },
            "designerId": "576318b5-444f-4cfc-8aac-972c7834dbe0"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onButtonClick",
                "fn": "onButtonClick",
                "implHandler": [
                    "var masque = this.getMasqueEdition();\r",
                    "var largeurMasque = masque.getWidth();\r",
                    "largeurMasque = largeurMasque - (largeurMasque % 10);\r",
                    "var largeur = largeurMasque; \r",
                    "var hauteur = 150 ;\r",
                    "var zonePrec = masque.query('zone').pop();\r",
                    "if (Ext.isDefined(zonePrec)) {\r",
                    "    var largeurPrec = zonePrec.getWidth();\r",
                    "    var hauteurPrec = zonePrec.getHeight();\r",
                    "    var xPrec = zonePrec.getPosition()[0]- masque.getPosition()[0];\r",
                    "    var nouvLargeur = largeurMasque-xPrec-largeurPrec;\r",
                    "    if (nouvLargeur > 19) {\r",
                    "        largeur = nouvLargeur;\r",
                    "        hauteur = hauteurPrec;\r",
                    "    }\r",
                    "}\r",
                    "var zone = Ext.widget('zone' , { width: largeur, height: hauteur, maxWidth : largeurMasque});\r",
                    "zone.title = zone.id;\r",
                    "masque.add(zone);\r",
                    "var zonesM =masque.items.items;\r",
                    "for (i=0; i<zonesM.length; i++) {\r",
                    "    zonesM[i].getEl().clearOpacity();\r",
                    "}"
                ],
                "name": "click",
                "scope": "me",
                "designer|targetType": "Ext.button.Button",
                "designer|controlQuery": "#nouvelleZone"
            },
            "designerId": "c0b1f264-899e-436a-af75-29b3a1a36a8b"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "blocDeplaceGauche",
                "fn": "blocDeplaceGauche",
                "implHandler": [
                    "var monBloc = tool.findParentByType('unBloc');\r",
                    "var nouvBloc = monBloc.valueOf();\r",
                    "var maColonne = monBloc.findParentByType('colonne');\r",
                    "var colonnePrecedente = maColonne.previousSibling();\r",
                    "if (colonnePrecedente !== null) {\r",
                    "\r",
                    "    colonnePrecedente.add(nouvBloc);\r",
                    "    maColonne.remove(monBloc);\r",
                    "\r",
                    "}"
                ],
                "name": "click",
                "scope": "me",
                "designer|targetType": "Ext.panel.Tool",
                "designer|controlQuery": "[itemId='deplaceGaucheBloc']"
            },
            "designerId": "6fc1979d-4fe0-4c0b-9ccc-6a949db66dff"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "MasqueEdition",
                "ref": "MasqueEdition",
                "selector": "#masqueEdition"
            },
            "designerId": "d227e367-3c0c-4894-9cfb-3babda2ac9da"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "blocDeplaceDroite",
                "fn": "blocDeplaceDroite",
                "implHandler": [
                    "var monBloc = tool.findParentByType('unBloc');\r",
                    "var nouvBloc = monBloc.valueOf();\r",
                    "var maColonne = monBloc.findParentByType('colonne');\r",
                    "var colonneSuivante = maColonne.nextSibling();\r",
                    "if (colonneSuivante !== null) {\r",
                    "\r",
                    "    colonneSuivante.add(nouvBloc);\r",
                    "    maColonne.remove(monBloc);\r",
                    "\r",
                    "}"
                ],
                "name": "click",
                "scope": "me",
                "designer|targetType": "Ext.panel.Tool",
                "designer|controlQuery": "[itemId='deplaceDroiteBloc']"
            },
            "designerId": "a8926aad-ba60-43a6-8be6-92e5ddff405c"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "majZone",
                "fn": "majZone",
                "implHandler": [
                    "var champTitre = Ext.getCmp('zoneTitleField');\r",
                    "var champLargeur = Ext.getCmp('zoneWidthField');\r",
                    "var champHauteur = Ext.getCmp('zoneHeightField');\r",
                    "var champId = Ext.getCmp('zoneIdField');\r",
                    "\r",
                    "zoneModif = Ext.getCmp(champId.getValue());\r",
                    "if (Ext.isDefined(zoneModif)) {\r",
                    "    zoneModif.setTitle(champTitre.getValue());    \r",
                    "    zoneModif.setHeight(champHauteur.getValue());\r",
                    "    zoneModif.setWidth(champLargeur.getValue());\r",
                    "    var colones = zoneModif.items.items;\r",
                    "    for (om=0; om<colones.length; om++) {\r",
                    "        if (Ext.isDefined(Ext.getCmp('colonnesEdit').items.items[om])) {\r",
                    "        colones[om].flex= Ext.getCmp('colonnesEdit').items.items[om].getValue(); }\r",
                    "\r",
                    "    }\r",
                    "    zoneModif.doLayout();\r",
                    "}\r",
                    ""
                ],
                "name": "click",
                "scope": "me",
                "designer|targetType": "Ext.button.Button",
                "designer|controlQuery": "#modifierPropZone"
            },
            "designerId": "3f184692-51b2-4966-9f4e-4e3548eb4ce5"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onPanelBeforeDestroy",
                "fn": "onPanelBeforeDestroy",
                "implHandler": [
                    "if ((Ext.isDefined(Ext.getCmp('blocIdField')))&&(abstractcomponent.id==Ext.getCmp('blocIdField').getValue())) { \r",
                    "    Ext.getCmp('blocHeightField').setValue();\r",
                    "    Ext.getCmp('blocTitleField').setValue();\r",
                    "    Ext.getCmp('blocIdField').setValue();\r",
                    "    if(Ext.isDefined(Ext.getCmp('paneauPropMasque').getComponent(3))) {\r",
                    "        Ext.getCmp('paneauPropMasque').getComponent(3).destroy();\r",
                    "    }\r",
                    "}"
                ],
                "name": "beforedestroy",
                "scope": "me",
                "designer|targetType": "Ext.panel.Panel",
                "designer|controlQuery": "unBloc"
            },
            "designerId": "66b209b4-d8bd-421e-a096-ca13fcc3dd69"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "majBloc",
                "fn": "majBloc",
                "implHandler": [
                    "var champTitre = Ext.getCmp('blocTitleField');\r",
                    "var champHauteur = Ext.getCmp('blocHeightField');\r",
                    "var champId = Ext.getCmp('blocIdField');\r",
                    "\r",
                    "blocModif = Ext.getCmp(champId.getValue());\r",
                    "if (Ext.isDefined(blocModif)) {\r",
                    "    blocModif.setTitle(champTitre.getValue());    \r",
                    "    blocModif.flex =champHauteur.getValue();\r",
                    "    blocModif.up().doLayout();\r",
                    "}\r",
                    ""
                ],
                "name": "click",
                "scope": "me",
                "designer|targetType": "Ext.button.Button",
                "designer|controlQuery": "#modifierPropBloc"
            },
            "designerId": "21150e1f-cd27-4986-adea-ab60fc9f8ffa"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "selectZone",
                "fn": "selectZone",
                "implHandler": [
                    "if (abstractcomponent.id !== 'outilsBureau') {\r",
                    "    var moi = this;\r",
                    "    abstractcomponent.header.on('click', function() { \r",
                    "        this.up().getEl().frame(MyPrefData.themeColor);\r",
                    "        this.up().setIconCls('editZone');\r",
                    "        var champBId = Ext.getCmp('zoneIdField');\r",
                    "        if (Ext.isDefined(champBId)) {    \r",
                    "            var zonePrec = Ext.getCmp( Ext.getCmp('zoneIdField').getValue());\r",
                    "            if ((Ext.isDefined(zonePrec))&&(zonePrec.id !== abstractcomponent.id )) { zonePrec.setIconCls(null);}   \r",
                    "            champBId.setValue(abstractcomponent.id);\r",
                    "        }\r",
                    "        moi.updPanProp(this.up());\r",
                    "\r",
                    "\r",
                    "\r",
                    "    });\r",
                    "}"
                ],
                "name": "render",
                "scope": "me",
                "designer|targetType": "Ext.panel.Panel",
                "designer|controlQuery": "zone"
            },
            "designerId": "6c5d3976-2056-4bf3-9848-6fe3b6f68631"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "selectBloc",
                "fn": "selectBloc",
                "implHandler": [
                    "/*abstractcomponent.getEl().on(\"click\", function(e){\r",
                    "    e.stopEvent();\r",
                    "});\r",
                    "abstractcomponent.header.on('click', function() { \r",
                    "\r",
                    "    this.up().getEl().frame(MyPrefData.themeColor);\r",
                    "    this.up().setIconCls('editBloc');\r",
                    "\r",
                    "    if(Ext.isDefined(Ext.getCmp('paneauPropMasque').getComponent(3))) {\r",
                    "        Ext.getCmp('paneauPropMasque').getComponent(3).destroy();\r",
                    "    }\r",
                    "\r",
                    "    var champBTitre = Ext.getCmp('blocTitleField');\r",
                    "    if (Ext.isDefined(champBTitre)) {\r",
                    "    champBTitre.setValue(abstractcomponent.title);}\r",
                    "\r",
                    "    var champBHauteur = Ext.getCmp('blocHeightField');\r",
                    "    if (Ext.isDefined(champBTitre)) {\r",
                    "    champBHauteur.setValue(abstractcomponent.flex);}\r",
                    "\r",
                    "    var champBId = Ext.getCmp('blocIdField');\r",
                    "    if (Ext.isDefined(champBId)) {    \r",
                    "        var blocPrec = Ext.getCmp( Ext.getCmp('blocIdField').getValue());\r",
                    "        if ((Ext.isDefined(blocPrec))&&(blocPrec.id !== abstractcomponent.id )) { blocPrec.setIconCls(null);}   \r",
                    "        champBId.setValue(abstractcomponent.id);\r",
                    "    }\r",
                    "    var configSpec = Ext.widget('ConfigSpecBloc');\r",
                    "    var categories = abstractcomponent.champsConfig.simple;\r",
                    "    for (j=0; j<categories.length; j++){\r",
                    "        var nCateg = Ext.create('Ext.form.FieldSet', {title: categories[j].categorie, collapsible:true, layout: 'anchor'});\r",
                    "\r",
                    "        var champsS = categories[j].champs;\r",
                    "        for (i=0; i<champsS.length; i++) {\r",
                    "            if (champsS[i].type =='Ext.form.field.ComboBox') {\r",
                    "                var monStore=  Ext.create('Ext.data.Store', champsS[i].store);\r",
                    "                champsS[i].config.store= monStore;\r",
                    "            }\r",
                    "            var nChampS = Ext.create(champsS[i].type, champsS[i].config);\r",
                    "            if (champsS[i].type =='Ext.form.field.Trigger'){\r",
                    "                var Ouvrir = Ext.clone(champsS[i].ouvrir);\r",
                    "                nChampS.onTriggerClick= function() {\r",
                    "                    var fenetre = Ext.widget(Ouvrir);\r",
                    "                    fenetre.showAt(screen.width/2-200, 100);\r",
                    "                } ;  \r",
                    "            }\r",
                    "            nChampS.labelSeparator= ' ';\r",
                    "            nChampS.anchor= '100%';\r",
                    "            nChampS.setValue(abstractcomponent.configBloc[nChampS.name]);\r",
                    "            nChampS.on('change', function(){abstractcomponent.configBloc[this.name]=this.getValue(); });\r",
                    "            nCateg.add(nChampS);\r",
                    "        }\r",
                    "        configSpec.items.items[0].add(nCateg);\r",
                    "\r",
                    "    }\r",
                    "    Ext.getCmp('paneauPropMasque').add(configSpec);\r",
                    "\r",
                    "});*/"
                ],
                "name": "render",
                "scope": "me",
                "designer|targetType": "Ext.panel.Panel",
                "designer|controlQuery": "unBloc"
            },
            "designerId": "89c808fa-b88a-4a47-b9f2-d6edaad0cf89"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "supprimerZone",
                "fn": "supprimerZone",
                "implHandler": [
                    "var delConfirm = Ext.widget('delConfirmZ');\r",
                    "delConfirm.showAt(screen.width/2-100, 100);\r",
                    "var cible = tool.findParentByType('zone');\r",
                    "Ext.getCmp('delConfirmZOui').on('click', function() { \r",
                    "    cible.close();\r",
                    "    Ext.getCmp('delConfirmZ').close();\r",
                    "});  "
                ],
                "name": "click",
                "scope": "me",
                "designer|targetType": "Ext.panel.Tool",
                "designer|controlQuery": "[itemId='supprimerZone']"
            },
            "designerId": "865b89cf-ebfe-4054-8920-7f980352168f"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onButtonClick2",
                "fn": "onButtonClick2",
                "implHandler": [
                    "Ext.getCmp('delConfirmZ').close();"
                ],
                "name": "click",
                "scope": "me",
                "designer|targetType": "Ext.button.Button",
                "designer|controlQuery": "#delConfirmZNon"
            },
            "designerId": "7445658b-040f-46bc-8aee-da04bb228068"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "updPanProp",
                "fn": "updPanProp",
                "designer|params": [
                    "abstractcomponent"
                ],
                "implHandler": [
                    "var champTitre = Ext.getCmp('zoneTitleField');\r",
                    "if (Ext.isDefined(champTitre)) {\r",
                    "    champTitre.setValue(abstractcomponent.title);\r",
                    "}\r",
                    "var champLargeur = Ext.getCmp('zoneWidthField');\r",
                    "if (Ext.isDefined(champLargeur)) {\r",
                    "    champLargeur.setValue(abstractcomponent.width);\r",
                    "}\r",
                    "var champHauteur = Ext.getCmp('zoneHeightField');\r",
                    "if (Ext.isDefined(champHauteur)) {\r",
                    "    champHauteur.setValue(abstractcomponent.height);\r",
                    "}\r",
                    "var champId = Ext.getCmp('zoneIdField');\r",
                    "if (Ext.isDefined(champId)) {\r",
                    "    champId.setValue(abstractcomponent.id);\r",
                    "}\r",
                    "\r",
                    "var colonEd = Ext.getCmp('colonnesEdit');\r",
                    "if (Ext.isDefined(colonEd)) {\r",
                    "    colonEd.removeAll();\r",
                    "}\r",
                    "\r",
                    "var colonEd = Ext.getCmp('colonnesEdit');\r",
                    "if (Ext.isDefined(colonEd)) {\r",
                    "    colonEd.removeAll();\r",
                    "    var colonnes = abstractcomponent.items.items;\r",
                    "    for (pm=0; pm<colonnes.length; pm++) {\r",
                    "        var champ = Ext.create('Ext.form.field.Number', {fieldLabel: 'col '+pm, labelWidth: 40, anchor:'100%' , value: colonnes[pm].flex});\r",
                    "        colonEd.add(champ);\r",
                    "\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "}"
                ]
            },
            "designerId": "d3ac8b37-6818-425e-9fde-f46b1b5d0a3a"
        }
    ]
}