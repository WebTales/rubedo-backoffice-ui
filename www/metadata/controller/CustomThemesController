{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "CustomThemesController",
        "designer|userAlias": "CustomThemesController"
    },
    "designerId": "b3b24ed4-5a5b-41d6-8150-b2a668f6491b",
    "cn": [
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onCustomThemesAddBtnClick",
                "implHandler": [
                    "Ext.widget(\"NewCustomThemeWindow\").show();"
                ],
                "name": "click",
                "scope": "me",
                "designer|targetType": "Ext.button.Button",
                "designer|controlQuery": "#customThemesAddBtn"
            },
            "designerId": "71c9784a-4bac-4530-a9e2-39e56c621f42"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onNewCustomThemeSublitBtnClick",
                "implHandler": [
                    "var form=button.up().getForm();\r",
                    "if (form.isValid()){\r",
                    "    var newRec=Ext.create(\"Rubedo.model.customTheme\",form.getValues());\r",
                    "    var defaultLessVars={\r",
                    "        \"black\":\"#000000\",\r",
                    "        \"grayDarker\":\"#222222\",\r",
                    "        \"grayDark\":\"#333333\",\r",
                    "        \"gray\":\"#555555\",\r",
                    "        \"grayLight\":\"#999999\",\r",
                    "        \"grayLighter\":\"#eeeeee\",\r",
                    "        \"white\":\"#ffffff\",\r",
                    "        \"blue\":\"#049cdb\",\r",
                    "        \"blueDark\":\"#0064cd\",\r",
                    "        \"green\":\"#46a546\",\r",
                    "        \"red\":\"#9d261d\",\r",
                    "        \"yellow\":\"#ffc40d\",\r",
                    "        \"orange\":\"#f89406\",\r",
                    "        \"pink\":\"#c3325f\",\r",
                    "        \"purple\":\"#7a43b6\",\r",
                    "        \"linkColor\":\"#0088cc\",\r",
                    "        \"tableBackgroundAccent\":\"#f9f9f9\",\r",
                    "        \"tableBackgroundHover\":\"#f5f5f5\",\r",
                    "        \"tableBorder\":\"#dddddd\",\r",
                    "        \"btnBorder\":\"#cccccc\",\r",
                    "        \"btnInfoBackground\":\"#5bc0de\",\r",
                    "        \"btnInfoBackgroundHighlight\":\"#2f96b4\",\r",
                    "        \"btnSuccessBackground\":\"#62c462\",\r",
                    "        \"btnSuccessBackgroundHighlight\":\"#51a351\",\r",
                    "        \"btnDangerBackground\":\"#ee5f5b\",\r",
                    "        \"btnDangerBackgroundHighlight\":\"#bd362f\",\r",
                    "        \"btnInverseBackground\":\"#444444\",\r",
                    "        \"inputBorder\":\"#cccccc\",\r",
                    "        \"formActionsBackground\":\"#f5f5f5\",\r",
                    "        \"dropdownDividerTop\":\"#e5e5e5\",\r",
                    "        \"wellBackground\":\"#f5f5f5\",\r",
                    "        \"navbarBackgroundHighlight\": \"#ffffff\",\r",
                    "        \"navbarText\": \"#777777\",\r",
                    "        \"navbarLinkColor\": \"#777777\",\r",
                    "        \"navbarInverseBackground\": \"#111111\",\r",
                    "        \"navbarInverseBackgroundHighlight\": \"#222222\",\r",
                    "        \"navbarInverseBorder\": \"#252525\",\r",
                    "        \"navbarInverseSearchPlaceholderColor\": \"#cccccc\",\r",
                    "        \"paginationBackground\": \"#ffffff\",\r",
                    "        \"paginationBorder\": \"#dddddd\",\r",
                    "        \"paginationActiveBackground\": \"#f5f5f5\",\r",
                    "        \"warningText\": \"#c09853\",\r",
                    "        \"warningBackground\": \"#fcf8e3\",\r",
                    "        \"errorText\": \"#b94a48\",\r",
                    "        \"errorBackground\": \"#f2dede\",\r",
                    "        \"successText\": \"#468847\",\r",
                    "        \"successBackground\": \"#dff0d8\",\r",
                    "        \"infoText\": \"#3a87ad\",\r",
                    "        \"infoBackground\": \"#d9edf7\",\r",
                    "        \"tooltipColor\": \"#ffffff\",\r",
                    "        \"tooltipBackground\": \"#000000\",\r",
                    "        \"popoverBackground\": \"#ffffff\",\r",
                    "        \"popoverArrowColor\": \"#ffffff\",\r",
                    "        \"sansFontFamily\": '\"Helvetica Neue\", Helvetica, Arial, sans-serif',\r",
                    "        \"serifFontFamily\": 'Georgia, \"Times New Roman\", Times, serif',\r",
                    "        \"monoFontFamily\": 'Monaco, Menlo, Consolas, \"Courier New\", monospace',\r",
                    "        \"baseFontSize\": \"14px\",\r",
                    "        \"baseLineHeight\": \"20px\",\r",
                    "        \"headingsFontFamily\": \"inherit\",\r",
                    "        \"headingsFontWeight\": \"bold\"\r",
                    "    };\r",
                    "    newRec.set(\"lessVarsJson\",Ext.JSON.encode(defaultLessVars));\r",
                    "    Ext.getStore(\"CustomThemes\").add(newRec);\r",
                    "    button.up().up().close();\r",
                    "}"
                ],
                "name": "click",
                "scope": "me",
                "designer|targetType": "Ext.button.Button",
                "designer|controlQuery": "#newCustomThemeSublitBtn"
            },
            "designerId": "0f48f144-64c9-4c54-9bbb-e2f3155f0cc8"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "resetInterfaceSelect",
                "designer|params": [
                    "record"
                ],
                "implHandler": [
                    "Ext.getCmp(\"customThemesRemoveBtn\").enable();\r",
                    "Ext.getCmp(\"customThemesSaveBtn\").enable();\r",
                    "Ext.getCmp(\"simulateCustomThemeBtn\").enable();\r",
                    "Ext.getCmp(\"mainLessVarsForm\").getForm().setValues(Ext.JSON.decode(record.get(\"lessVarsJson\")));\r",
                    "this.pushLessToSimulator(Ext.JSON.decode(record.get(\"lessVarsJson\")));"
                ]
            },
            "designerId": "f87dc705-a863-4f0b-8e3e-d4185ab7a51d"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "resetInterfaceNoSelect",
                "implHandler": [
                    "Ext.getCmp(\"customThemesRemoveBtn\").disable();\r",
                    "Ext.getCmp(\"customThemesSaveBtn\").disable();\r",
                    "Ext.getCmp(\"simulateCustomThemeBtn\").disable();\r",
                    "Ext.getCmp(\"mainLessVarsForm\").getForm().reset();"
                ]
            },
            "designerId": "a1369d62-5810-4b65-b875-02fe6511c8c0"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onCustomThemesGridSelectionChange",
                "implHandler": [
                    "if (Ext.isEmpty(selected)){\r",
                    "    this.resetInterfaceNoSelect();\r",
                    "} else {\r",
                    "    this.resetInterfaceSelect(selected[0]);\r",
                    "}"
                ],
                "name": "selectionchange",
                "scope": "me",
                "designer|targetType": "Ext.grid.Panel",
                "designer|controlQuery": "#customThemesGrid"
            },
            "designerId": "9e835ee2-b0b8-4e25-ae95-9ccc7042e1ce"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onCustomThemesRemoveBtnClick",
                "implHandler": [
                    "var delCon = Ext.widget('delConfirmZ');\r",
                    "delCon.show();\r",
                    "Ext.getCmp('delConfirmZOui').on('click', function() { \r",
                    "    Ext.getStore(\"CustomThemes\").remove(Ext.getCmp(\"customThemesGrid\").getSelectionModel().getLastSelected());\r",
                    "    Ext.getCmp('delConfirmZ').close();\r",
                    "}); "
                ],
                "name": "click",
                "scope": "me",
                "designer|targetType": "Ext.button.Button",
                "designer|controlQuery": "#customThemesRemoveBtn"
            },
            "designerId": "7e72e958-9879-4e1a-b14a-5c7c8ed6b7ce"
        },
        {
            "type": "fixedfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "init",
                "designer|params": [
                    "application"
                ],
                "implHandler": [
                    "Ext.define('ColorPickerControlSingleton', {\r",
                    "    singleton:true,\r",
                    "    currentTarget:null\r",
                    "});"
                ]
            },
            "designerId": "0cd60d99-4eb8-4f64-9b0c-169a99719688"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onCustomThemesSaveBtnClick",
                "implHandler": [
                    "var form=Ext.getCmp(\"mainLessVarsForm\").getForm();\r",
                    "if (form.isValid()){\r",
                    "    var record=Ext.getCmp(\"customThemesGrid\").getSelectionModel().getLastSelected();\r",
                    "    record.set(\"lessVarsJson\",Ext.JSON.encode(form.getValues()));\r",
                    "} else {\r",
                    "    Ext.Msg.alert(Rubedo.RubedoAutomatedElementsLoc.errorTitle, Rubedo.RubedoAutomatedElementsLoc.invalidFieldsError);\r",
                    "}"
                ],
                "name": "click",
                "scope": "me",
                "designer|targetType": "Ext.button.Button",
                "designer|controlQuery": "#customThemesSaveBtn"
            },
            "designerId": "ddfd980d-a5dc-4e86-bd37-8379e36a46a6"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "pushLessToSimulator",
                "designer|params": [
                    "vars"
                ],
                "implHandler": [
                    "var refinedVars={ };\r",
                    "Ext.Object.each(vars, function(key, value, myself) {\r",
                    "    refinedVars['@'+key]=value;\r",
                    "});\r",
                    "themeSimulatorFrame.less.modifyVars(refinedVars);"
                ]
            },
            "designerId": "9feebaf3-be11-4e03-ab04-6fd563da8728"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onSimulateCustomThemeBtnClick",
                "implHandler": [
                    "var me=this;\r",
                    "var form=Ext.getCmp(\"mainLessVarsForm\").getForm();\r",
                    "if (form.isValid()){\r",
                    "    me.pushLessToSimulator(form.getValues());\r",
                    "} else {\r",
                    "    Ext.Msg.alert(Rubedo.RubedoAutomatedElementsLoc.errorTitle, Rubedo.RubedoAutomatedElementsLoc.invalidFieldsError);\r",
                    "}"
                ],
                "name": "click",
                "scope": "me",
                "designer|targetType": "Ext.button.Button",
                "designer|controlQuery": "#simulateCustomThemeBtn"
            },
            "designerId": "0fbf1831-7f7d-41ed-b746-3cd2870cf57a"
        }
    ]
}