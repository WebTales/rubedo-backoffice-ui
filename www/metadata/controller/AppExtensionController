{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "AppExtensionController",
        "designer|userAlias": "AppExtensionController"
    },
    "designerId": "94fb422b-80b5-40d7-8b25-2a16cc8be41a",
    "cn": [
        {
            "type": "fixedfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onLaunch",
                "implHandler": [
                    "var me=this;\r",
                    "Ext.Ajax.request({\r",
                    "    url: 'app-extension',\r",
                    "    method:'GET',\r",
                    "    params: {\r",
                    "    },\r",
                    "    success: function(response){\r",
                    "        var extensionConfigs = Ext.JSON.decode(response.responseText).data;\r",
                    "        Ext.Array.forEach(extensionConfigs,function(extension){\r",
                    "\t\t\tme.processAppExtensions(extension);\r",
                    "        });\r",
                    "        \r",
                    "    },\r",
                    "    failure:function(response){\r",
                    "        Ext.Msg.alert(Rubedo.RubedoAutomatedElementsLoc.errorTitle, \"Failed to retrieve extensions\");\r",
                    "    }\r",
                    "});"
                ]
            },
            "designerId": "8fa96181-ab9e-490d-b1d5-f90e89b92950"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "processAppExtensions",
                "designer|params": [
                    "extensionConfigs"
                ],
                "implHandler": [
                    "var me=this;\r",
                    "if (!Ext.isEmpty(extensionConfigs)){\r",
                    "    //get extension name\r",
                    "    var myName=extensionConfigs.extensionName;\r",
                    "    //get models\r",
                    "    if(!Ext.isEmpty(extensionConfigs.models)){\r",
                    "        Ext.Array.forEach(extensionConfigs.models, function(model){\r",
                    "            Ext.syncRequire(\"app.appextensions.\"+myName+\".\"+model);\r",
                    "        });\r",
                    "    }\r",
                    "    //get stores\r",
                    "    if(!Ext.isEmpty(extensionConfigs.stores)){\r",
                    "        Ext.Array.forEach(extensionConfigs.stores, function(store){\r",
                    "            Ext.syncRequire(\"app.appextensions.\"+myName+\".\"+store);\r",
                    "            Ext.create(\"Rubedo.store.\"+store);\r",
                    "        });\r",
                    "    }\r",
                    "    //get views\r",
                    "    if(!Ext.isEmpty(extensionConfigs.views)){\r",
                    "        Ext.Array.forEach(extensionConfigs.views, function(view){\r",
                    "            Ext.syncRequire(\"app.appextensions.\"+myName+\".\"+view);\r",
                    "        });\r",
                    "    }\r",
                    "    \r",
                    "    //get controllers\r",
                    "    if(!Ext.isEmpty(extensionConfigs.controllers)){\r",
                    "        Ext.Array.forEach(extensionConfigs.controllers, function(controller){\r",
                    "            Ext.syncRequire(\"app.appextensions.\"+myName+\".\"+controller);\r",
                    "            me.getController(controller).init();\r",
                    "            me.getController(controller).onLaunch();\r",
                    "        });\r",
                    "\t}\r",
                    "}"
                ]
            },
            "designerId": "4fc9d1dd-f071-444c-a871-f43285cf39ec"
        }
    ]
}