{
    "type": "controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "FormsController",
        "designer|userAlias": "FormsController"
    },
    "id": "ExtBox1-ext-gen6522",
    "designerId": "82778ea5-36d1-422d-993a-6b91ab641629",
    "cn": [
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onAddFormBtnClick",
                "fn": "onAddFormBtnClick",
                "implHandler": [
                    "Ext.widget(\"newFormWindow\").show();"
                ],
                "name": "click",
                "scope": "me",
                "designer|targetType": "Ext.button.Button",
                "designer|controlQuery": "#addFormBtn"
            },
            "designerId": "f52e88d9-2add-4a07-acc1-929ddb435d17"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onSubmitNewFormBtnClick",
                "fn": "onSubmitNewFormBtnClick",
                "implHandler": [
                    "var me=this;\r",
                    "var form=button.up().getForm();\r",
                    "if (form.isValid()){\r",
                    "    var newOne=Ext.create(\"Rubedo.model.formModel\",form.getValues());\r",
                    "    newOne.set(\"workspaces\",[ACL.defaultWorkspace]);\r",
                    "    Ext.Ajax.request({\r",
                    "    url: 'xhr-get-mongo-id',\r",
                    "    params: { },\r",
                    "    success: function(response){\r",
                    "        var servedId = Ext.JSON.decode(response.responseText).mongoID;\r",
                    "        newOne.set(\"formPages\",[{\r",
                    "            elements: [ ],\r",
                    "            id:servedId,\r",
                    "            itemConfig: {label:\"Page 1\"}\r",
                    "        }]);\r",
                    "        Ext.getStore(\"FormsStore\").add(newOne);\r",
                    "        Ext.getStore(\"FormsStore\").addListener(\"datachanged\", function(){\r",
                    "            Ext.getCmp(\"mainFormsGrid\").getSelectionModel().select([newOne]);\r",
                    "        },this,{single:true});\r",
                    "            button.up().up().close();\r",
                    "        },\r",
                    "    failure: function(){\r",
                    "        Ext.Msg.alert('Erreur', 'Erreur dans la récupération d\\'un identifiant.');\r",
                    "\r",
                    "    }\r",
                    "});\r",
                    "    \r",
                    "    \r",
                    "   \r",
                    "    }\r",
                    "\r",
                    ""
                ],
                "name": "click",
                "scope": "me",
                "designer|targetType": "Ext.button.Button",
                "designer|controlQuery": "#submitNewFormBtn"
            },
            "designerId": "ad68df93-1a56-466f-a58b-b0ec27d774a3"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "resetInterfaceSelect",
                "fn": "resetInterfaceSelect",
                "designer|params": [
                    "record",
                    "pageRefresh"
                ],
                "implHandler": [
                    "Ext.getCmp(\"formPropsForm\").getForm().setValues(record.getData());\r",
                    "Ext.getCmp(\"formRightsForm\").getForm().setValues(record.getData());\r",
                    "if ((!ACL.interfaceRights[\"write.ui.forms\"])||(record.get(\"readOnly\"))){\r",
                    "    Ext.Array.forEach(Ext.getCmp(\"formPropsForm\").up().query(\"field\"),function(field){field.setReadOnly(true);});\r",
                    "    Ext.getCmp(\"FormsEditContainer\").disable();\r",
                    "} else {\r",
                    "    Ext.Array.forEach(Ext.getCmp(\"formPropsForm\").up().query(\"field\"),function(field){field.setReadOnly(false);});\r",
                    "    Ext.getCmp(\"FormsEditContainer\").enable();\r",
                    "}\r",
                    "Ext.getCmp(\"FormsCenterZone\").enable();\r",
                    "Ext.Array.forEach(Ext.getCmp(\"FormsInterface\").getDockedComponent(\"contextBar\").query(\"buttongroup\"), function(thing){thing.enable();});\r",
                    "Ext.getCmp(\"removeFormBtn\").enable();\r",
                    "Ext.getCmp(\"FormsInterface\").getComponent(\"breadcrumb\").removeAll();\r",
                    "Ext.getCmp(\"FormsInterface\").getComponent(\"breadcrumb\").add(Ext.widget(\"button\", {text: \"Questionnaires <b> > </b>\", iconCls:\"form_small\"}));\r",
                    "Ext.getCmp(\"FormsInterface\").getComponent(\"breadcrumb\").add(Ext.widget(\"button\", {text: record.get(\"title\"), iconCls:\"form_small\"}));\r",
                    "var metaBox = Ext.getCmp(\"FormsInterface\").getDockedComponent('barreMeta').getComponent('boiteBarreMeta');\r",
                    "var values= record.getData();\r",
                    "values.creation= Ext.Date.format(values.createTime, 'd-m-Y');\r",
                    "values.derniereModification= Ext.Date.format(values.lastUpdateTime, 'd-m-Y');\r",
                    "metaBox.update(values);\r",
                    "metaBox.show();\r",
                    "if (pageRefresh){\r",
                    "    Ext.getCmp(\"FormsCenterZone\").getLayout().setActiveItem(0);\r",
                    "    Ext.getCmp(\"formSelectedElementField\").setValue(null);\r",
                    "    Ext.getCmp(\"FormsEditContainer\").removeAll();\r",
                    "    this.readFormPages(record.get(\"formPages\"));\r",
                    "}"
                ]
            },
            "designerId": "b24e3b9b-de2d-416d-b923-d047ea4b8202"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "resetInterfaceNoSelect",
                "fn": "resetInterfaceNoSelect",
                "implHandler": [
                    "Ext.getCmp(\"formPropsForm\").getForm().reset();\r",
                    "Ext.getCmp(\"formRightsForm\").getForm().reset();\r",
                    "Ext.getCmp(\"FormsCenterZone\").getLayout().setActiveItem(0);\r",
                    "Ext.getCmp(\"FormsCenterZone\").disable();\r",
                    "Ext.Array.forEach(Ext.getCmp(\"FormsInterface\").getDockedComponent(\"contextBar\").query(\"buttongroup\"), function(thing){thing.disable();});\r",
                    "Ext.getCmp(\"removeFormBtn\").disable();\r",
                    "Ext.getCmp(\"FormsInterface\").getDockedComponent(\"barreMeta\").getComponent(\"boiteBarreMeta\").hide();\r",
                    "Ext.getCmp(\"FormsInterface\").getComponent(\"breadcrumb\").removeAll();\r",
                    "Ext.getCmp(\"FormsInterface\").getComponent(\"breadcrumb\").add(Ext.widget(\"button\", {text: \"Questionnaires\", iconCls:\"form_small\"}));\r",
                    "Ext.getCmp(\"formSelectedElementField\").setValue(null);\r",
                    "Ext.getCmp(\"FormsEditContainer\").removeAll();"
                ]
            },
            "designerId": "67493c81-5c85-4775-a117-e1caf6222371"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onRemoveFormBtnClick",
                "fn": "onRemoveFormBtnClick",
                "implHandler": [
                    "var target = Ext.getCmp('mainFormsGrid').getSelectionModel().getLastSelected();\r",
                    "var me=this;\r",
                    "if (!Ext.isEmpty(target)) {\r",
                    "    var window = Ext.widget('delConfirmZ');\r",
                    "    Ext.getCmp('ViewportPrimaire').add(window);\r",
                    "    window.show();\r",
                    "    Ext.getCmp('delConfirmZOui').on('click', function() { \r",
                    "        Ext.getStore(\"FormsStore\").remove(target);            \r",
                    "        Ext.getCmp('delConfirmZ').close();  \r",
                    "        me.resetInterfaceNoSelect();\r",
                    "    });  \r",
                    "\r",
                    "}"
                ],
                "name": "click",
                "scope": "me",
                "designer|targetType": "Ext.button.Button",
                "designer|controlQuery": "#removeFormBtn"
            },
            "designerId": "cc253274-c5e7-43ef-b47a-b6a7d04ea6f4"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onMainFormsGridSelectionChange",
                "fn": "onMainFormsGridSelectionChange",
                "implHandler": [
                    "var me=this;\r",
                    "if (Ext.isEmpty(selections)){\r",
                    "    me.resetInterfaceNoSelect();\r",
                    "} else {\r",
                    "    me.resetInterfaceSelect(selections[0], true);\r",
                    "}"
                ],
                "name": "selectionchange",
                "scope": "me",
                "designer|targetType": "Ext.grid.Panel",
                "designer|controlQuery": "#mainFormsGrid"
            },
            "designerId": "7cb522f6-be96-4f4f-8a67-cd5d5f9a4c94"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onFormSaveBtnClick",
                "fn": "onFormSaveBtnClick",
                "implHandler": [
                    "var me=this;\r",
                    "if (Ext.getCmp(\"formRightsForm\").getForm().isValid()){\r",
                    "    if (Ext.getCmp(\"formPropsForm\").getForm().isValid()){\r",
                    "        var target = Ext.getCmp('mainFormsGrid').getSelectionModel().getLastSelected();\r",
                    "        target.beginEdit();\r",
                    "        target.set(Ext.getCmp(\"formRightsForm\").getForm().getValues());\r",
                    "        target.set(Ext.getCmp(\"formPropsForm\").getForm().getValues());\r",
                    "        target.set(\"formPages\",me.saveFormPages());\r",
                    "        target.endEdit();\r",
                    "        Ext.getStore(\"FormsStore\").addListener(\"datachanged\", function(){\r",
                    "            me.resetInterfaceSelect(target);\r",
                    "        },this,{single:true});\r",
                    "        } else {\r",
                    "            Ext.Msg.alert(\"Erreur\", \"Propriétés du formulaire invalides\");\r",
                    "            Ext.getCmp(\"FormsCenterZone\").getLayout().setActiveItem(0);\r",
                    "        }\r",
                    "    } else {\r",
                    "        Ext.Msg.alert(\"Erreur\", \"Paramétrage des droits invalide\");\r",
                    "        Ext.getCmp(\"FormsCenterZone\").getLayout().setActiveItem(2);\r",
                    "    }"
                ],
                "name": "click",
                "scope": "me",
                "designer|targetType": "Ext.button.Button",
                "designer|controlQuery": "#formSaveBtn"
            },
            "designerId": "d793d0db-2a9d-4691-814f-39f86b9c5bbc"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "selectionEvents",
                "fn": "selectionEvents",
                "implHandler": [
                    "if (!abstractcomponent.isXType(\"RFormPage\")){\r",
                    "    abstractcomponent.getEl().on(\"mouseover\", function(e){\r",
                    "        abstractcomponent.addBodyCls(\"contrastFBorder\");\r",
                    "        e.stopEvent();\r",
                    "    });\r",
                    "    abstractcomponent.getEl().on(\"mouseout\", function(e){\r",
                    "        abstractcomponent.removeBodyCls(\"contrastFBorder\");\r",
                    "        e.stopEvent();\r",
                    "    });\r",
                    "} else {\r",
                    "    abstractcomponent.getEl().on(\"mouseover\", function(e){\r",
                    "        var prevSelected = Ext.getCmp(Ext.getCmp('formSelectedElementField').getValue());\r",
                    "        if ((Ext.isEmpty(prevSelected))||(prevSelected.id!==abstractcomponent.id)) {\r",
                    "            abstractcomponent.setIconCls('selectBloc');\r",
                    "        }\r",
                    "        e.stopEvent();\r",
                    "    });\r",
                    "    abstractcomponent.getEl().on(\"mouseout\", function(e){\r",
                    "        var prevSelected = Ext.getCmp(Ext.getCmp('formSelectedElementField').getValue());\r",
                    "        if ((Ext.isEmpty(prevSelected))||(prevSelected.id!==abstractcomponent.id)) {\r",
                    "        abstractcomponent.setIconCls();}\r",
                    "        e.stopEvent();\r",
                    "    });\r",
                    "\r",
                    "}\r",
                    "\r",
                    "abstractcomponent.getEl().on(\"click\", function(e){\r",
                    "    Ext.getCmp(\"formSelectedElementField\").setValue(abstractcomponent.getId());\r",
                    "    e.stopEvent();\r",
                    "});\r",
                    "\r",
                    ""
                ],
                "name": "render",
                "scope": "me",
                "designer|targetType": "Ext.panel.Panel",
                "designer|controlQuery": "#FormsEditor panel"
            },
            "designerId": "b1146b2c-be11-4d06-90e4-1ac36ff789d2"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onFormSelectedElementFieldChange",
                "fn": "onFormSelectedElementFieldChange",
                "implHandler": [
                    "var previousOne = Ext.getCmp(oldValue);\r",
                    "if (!Ext.isEmpty(previousOne)){\r",
                    "    if (!previousOne.isXType(\"RFormPage\")){\r",
                    "        if (previousOne.isXType(\"RFormField\")){previousOne.getDockedComponent(\"editBar\").hide();}\r",
                    "        previousOne.removeBodyCls(\"selectedFElement\");\r",
                    "    } else {\r",
                    "        previousOne.setIconCls();\r",
                    "        previousOne.getDockedComponent(\"editBar\").hide();\r",
                    "    }\r",
                    "}\r",
                    "Ext.Array.forEach(Ext.getCmp(\"formElementsEditBtnGroup\").query(\"button\"),function(thing){thing.disable();});\r",
                    "var newOne=Ext.getCmp(newValue);\r",
                    "if (!Ext.isEmpty(newOne)){\r",
                    "    newOne.getEl().frame(MyPrefData.themeColor);\r",
                    "    if (newValue==\"FormsEditContainer\"){\r",
                    "        newOne.addBodyCls(\"selectedFElement\");\r",
                    "        Ext.getCmp(\"formAddPageBtn\").enable();\r",
                    "    } else {\r",
                    "\r",
                    "        if (newOne.isXType(\"RFormPage\")){\r",
                    "            Ext.getCmp(\"formElementAddBtn\").enable();\r",
                    "            Ext.getCmp(\"formElementMoveUpBtn\").enable();\r",
                    "            Ext.getCmp(\"formElementMoveDownBtn\").enable();\r",
                    "            Ext.getCmp(\"formElementRemoveBtn\").enable();\r",
                    "            newOne.getDockedComponent(\"editBar\").show();\r",
                    "            newOne.setIconCls('editBloc');\r",
                    "        } else if (newOne.isXType(\"RFormField\")){\r",
                    "            Ext.getCmp(\"formElementMoveUpBtn\").enable();\r",
                    "            Ext.getCmp(\"formElementMoveDownBtn\").enable();\r",
                    "            Ext.getCmp(\"formElementRemoveBtn\").enable();\r",
                    "            newOne.getDockedComponent(\"editBar\").show();\r",
                    "            newOne.addBodyCls(\"selectedFElement\");\r",
                    "\r",
                    "        }\r",
                    "    }\r",
                    "}"
                ],
                "name": "change",
                "scope": "me",
                "designer|targetType": "Ext.form.field.Hidden",
                "designer|controlQuery": "#formSelectedElementField"
            },
            "designerId": "42029d5f-bf11-4f67-b9e4-30a48e0a4127"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onFormElementAddBtnClick",
                "fn": "onFormElementAddBtnClick",
                "implHandler": [
                    "Ext.widget(\"addFormFieldWindow\").show();"
                ],
                "name": "click",
                "scope": "me",
                "designer|targetType": "Ext.button.Button",
                "designer|controlQuery": "#formElementAddBtn"
            },
            "designerId": "4e0344d3-01b9-4147-abf4-3ce2af7ef113"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onFormAddPageBtnClick",
                "fn": "onFormAddPageBtnClick",
                "implHandler": [
                    "Ext.Ajax.request({\r",
                    "    url: 'xhr-get-mongo-id',\r",
                    "    params: { },\r",
                    "    success: function(response){\r",
                    "        var servedId = Ext.JSON.decode(response.responseText).mongoID;\r",
                    "        var target=Ext.getCmp(Ext.getCmp('formSelectedElementField').getValue());\r",
                    "        var newPage = Ext.widget(\"RFormPage\", {id:servedId});\r",
                    "        newPage.itemConfig={\r",
                    "            label:\"Page \"+(target.items.items.length+1),\r",
                    "            conditionals:[ ]\r",
                    "        };\r",
                    "        target.add(newPage); \r",
                    "        Ext.getCmp(\"FormsEditor\").doLayout();\r",
                    "        newPage.getEl().dom.click();\r",
                    "    },\r",
                    "    failure: function(){\r",
                    "        Ext.Msg.alert('Erreur', 'Erreur dans la récupération d\\'un identifiant.');\r",
                    "\r",
                    "    }\r",
                    "});"
                ],
                "name": "click",
                "scope": "me",
                "designer|targetType": "Ext.button.Button",
                "designer|controlQuery": "#formAddPageBtn"
            },
            "designerId": "b38b8241-db47-4795-af43-54cdd78dbdfd"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onFormElementMoveUpBtnClick",
                "fn": "onFormElementMoveUpBtnClick",
                "implHandler": [
                    "var field = Ext.getCmp(Ext.getCmp('formSelectedElementField').getValue());\r",
                    "if (!Ext.isEmpty(field)) {\r",
                    "    var pos = field.up().items.indexOf(field);\r",
                    "    if (pos > 0) {\r",
                    "        field.up().move(pos,pos-1);\r",
                    "    }\r",
                    "}"
                ],
                "name": "click",
                "scope": "me",
                "designer|targetType": "Ext.button.Button",
                "designer|controlQuery": "#formElementMoveUpBtn"
            },
            "designerId": "a711c0b6-31ba-44f7-bd8e-6a306c262c0f"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onFormElementMoveDownBtnClick",
                "fn": "onFormElementMoveDownBtnClick",
                "implHandler": [
                    "var field = Ext.getCmp(Ext.getCmp('formSelectedElementField').getValue());\r",
                    "if (!Ext.isEmpty(field)) {\r",
                    "    var pos = field.up().items.indexOf(field);\r",
                    "    field.up().move(pos,pos+1);\r",
                    "}"
                ],
                "name": "click",
                "scope": "me",
                "designer|targetType": "Ext.button.Button",
                "designer|controlQuery": "#formElementMoveDownBtn"
            },
            "designerId": "9a0427de-570f-4f71-a8a4-f55c6d07b164"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onFormElementRemoveBtnClick",
                "fn": "onFormElementRemoveBtnClick",
                "implHandler": [
                    "var field = Ext.getCmp(Ext.getCmp('formSelectedElementField').getValue());\r",
                    "field.up().remove(field);\r",
                    "Ext.getCmp('formSelectedElementField').setValue(null);"
                ],
                "name": "click",
                "scope": "me",
                "designer|targetType": "Ext.button.Button",
                "designer|controlQuery": "#formElementRemoveBtn"
            },
            "designerId": "5b7ca01c-87db-4d15-8c8e-7067107f8406"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onInsertFormElementBtnClick",
                "fn": "onInsertFormElementBtnClick",
                "implHandler": [
                    "var insertor=Ext.clone(Ext.getCmp(\"formFieldSelectGrid\").getSelectionModel().getLastSelected().getData());\r",
                    "Ext.Ajax.request({\r",
                    "    url: 'xhr-get-mongo-id',\r",
                    "    params: { },\r",
                    "    success: function(response){\r",
                    "        var servedId = Ext.JSON.decode(response.responseText).mongoID;\r",
                    "        var target=Ext.getCmp(Ext.getCmp('formSelectedElementField').getValue());\r",
                    "        var newElement= Ext.widget(\"RFormField\", {id:servedId});\r",
                    "        newElement.itemConfig=insertor.itemConfig;\r",
                    "        if (insertor.itemConfig.fType==\"richText\"){\r",
                    "            newElement.styleHtmlContent=true;\r",
                    "        } else {\r",
                    "            var incrementor=1;\r",
                    "            Ext.Array.forEach(Ext.getCmp(\"FormsEditContainer\").query(\"RFormField\"), function(other){\r",
                    "                if (other.itemConfig.fType!=\"richText\"){\r",
                    "                    incrementor=incrementor+1;\r",
                    "                }\r",
                    "\r",
                    "            });\r",
                    "            newElement.itemConfig.qNb=\"Q\"+incrementor;\r",
                    "\r",
                    "        }\r",
                    "        target.add(newElement); \r",
                    "        button.up().up().close();\r",
                    "        Ext.getCmp(\"FormsEditor\").doLayout();\r",
                    "        newElement.getEl().dom.click();\r",
                    "\r",
                    "    },\r",
                    "    failure: function(){\r",
                    "        Ext.Msg.alert('Erreur', 'Erreur dans la récupération d\\'un identifiant.');\r",
                    "\r",
                    "    }\r",
                    "});"
                ],
                "name": "click",
                "scope": "me",
                "designer|targetType": "Ext.button.Button",
                "designer|controlQuery": "#insertFormElementBtn"
            },
            "designerId": "be2354a6-8d7b-479e-8ed4-73cba074443c"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "saveFormPages",
                "fn": "saveFormPages",
                "implHandler": [
                    "var pages =[ ];\r",
                    "Ext.Array.forEach(Ext.getCmp(\"FormsEditContainer\").items.items, function(page){\r",
                    "    var newPage = {\r",
                    "        id:page.id,\r",
                    "        itemConfig:page.itemConfig,\r",
                    "        elements:[ ]\r",
                    "    };\r",
                    "    Ext.Array.forEach(page.items.items, function(element){\r",
                    "        var newElement = {\r",
                    "            id:element.id,\r",
                    "            itemConfig:element.itemConfig\r",
                    "        };\r",
                    "        newPage.elements.push(newElement);\r",
                    "    });\r",
                    "    pages.push(newPage);\r",
                    "});\r",
                    "return(pages);"
                ]
            },
            "designerId": "90ad054b-8b22-4027-ad85-4ec2bb0b33d2"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "readFormPages",
                "fn": "readFormPages",
                "designer|params": [
                    "pages"
                ],
                "implHandler": [
                    "var target=Ext.getCmp(\"FormsEditContainer\");\r",
                    "Ext.Array.forEach(pages, function(page){\r",
                    "    var newPage = Ext.widget(\"RFormPage\", {id:page.id});\r",
                    "    newPage.itemConfig=page.itemConfig;\r",
                    "    Ext.Array.forEach(page.elements, function(element){\r",
                    "        var newElement = Ext.widget(\"RFormField\", element);\r",
                    "        if (element.itemConfig.fType==\"richText\"){\r",
                    "            newElement.styleHtmlContent=true;\r",
                    "        }\r",
                    "        newPage.add(newElement);\r",
                    "    });\r",
                    "    target.add(newPage);\r",
                    "});"
                ]
            },
            "designerId": "8b84a42b-940a-4895-b2e2-d1842df498b7"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onFormFieldCofiguratorBtnClick",
                "fn": "onFormFieldCofiguratorBtnClick",
                "implHandler": [
                    "var myItemConfig = Ext.clone(button.up().up().itemConfig);\r",
                    "var myId=button.up().up().id;\r",
                    "this.fireElementConfigurator(myItemConfig,myId);"
                ],
                "name": "click",
                "scope": "me",
                "designer|targetType": "Ext.button.Button",
                "designer|controlQuery": "#formFieldCofiguratorBtn"
            },
            "designerId": "207b95a2-8933-460d-bac7-0ce93ff46c44"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "fireElementConfigurator",
                "fn": "fireElementConfigurator",
                "designer|params": [
                    "itemConfig",
                    "id"
                ],
                "implHandler": [
                    "if (itemConfig.fType==\"richText\") {\r",
                    "    var RTEditor = Ext.widget(\"RichTextConfigurator\").show();\r",
                    "    RTEditor.getComponent(0).setValue(itemConfig.html);\r",
                    "    Ext.getCmp(\"richTextConfiguratorSubmit\").targetedId=id;  \r",
                    "} else if (itemConfig.fType==\"multiChoiceQuestion\") {\r",
                    "    var MCQEditor = Ext.widget(\"MultiChoiceConfigurator\");\r",
                    "    MCQEditor.targetedId=id;\r",
                    "    MCQEditor.initialItemConfig=itemConfig;\r",
                    "    MCQEditor.show();\r",
                    "} else if (itemConfig.fType==\"openQuestion\") {\r",
                    "    var OQEditor = Ext.widget(\"OpenFieldConfigurator\");\r",
                    "    OQEditor.targetedId=id;\r",
                    "    OQEditor.initialItemConfig=itemConfig;\r",
                    "    OQEditor.show();\r",
                    "} else {\r",
                    "//definetly a page\r",
                    "    var PEditor = Ext.widget(\"FormsPageConfigurator\");\r",
                    "    PEditor.targetedId=id;\r",
                    "    PEditor.initialItemConfig=itemConfig;\r",
                    "    PEditor.show();\r",
                    "    \r",
                    "}\r",
                    ""
                ]
            },
            "designerId": "ffd48a6c-22e8-4523-9dfe-30b3ff0931a6"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "refreshFCEStore",
                "fn": "refreshFCEStore",
                "designer|params": [
                    "notThisOne"
                ],
                "implHandler": [
                    "Ext.getStore(\"FCEStore\").removeAll();\r",
                    "Ext.Array.forEach(Ext.getCmp(\"FormsEditContainer\").query(\"RFormField\"), function(other){\r",
                    "    if ((other.itemConfig.fType!=\"richText\")&&(other.id!=notThisOne)){\r",
                    "        Ext.getStore(\"FCEStore\").add({\r",
                    "            id:other.id,\r",
                    "            qNb:other.itemConfig.qNb,\r",
                    "            itemConfig:other.itemConfig\r",
                    "        });\r",
                    "    }\r",
                    "\r",
                    "});\r",
                    ""
                ]
            },
            "designerId": "d9929370-ed0e-4c00-9140-a05087a0c44d"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onFormFieldConditionsBtnClick",
                "fn": "onFormFieldConditionsBtnClick",
                "implHandler": [
                    "var myItemConfig = Ext.clone(button.up().up().itemConfig);\r",
                    "var myId=button.up().up().id;\r",
                    "this.refreshFCEStore(myId);\r",
                    "var FCEditor = Ext.widget(\"FCEditor\");\r",
                    "FCEditor.targetedId=myId;\r",
                    "FCEditor.initialItemConfig=myItemConfig;\r",
                    "FCEditor.show();"
                ],
                "name": "click",
                "scope": "me",
                "designer|targetType": "Ext.button.Button",
                "designer|controlQuery": "#formFieldConditionsBtn"
            },
            "designerId": "bc4ec84f-c3f6-42dc-978f-341e1bd18be8"
        }
    ]
}