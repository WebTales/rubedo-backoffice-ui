{
    "type": "controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "LocalisationController",
        "designer|userAlias": "LocalisationController"
    },
    "id": "ExtBox1-ext-gen10528",
    "designerId": "765f93a9-83e7-4405-aaaa-740265c87f51",
    "cn": [
        {
            "type": "fixedfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "init",
                "fn": "init",
                "designer|params": [
                    "application"
                ],
                "implHandler": [
                    "Ext.require(\"Ext.ux.callout.Callout\");\r",
                    "\r",
                    "//help definitions for application info buttons, temporary\r",
                    "try{\r",
                    "Ext.define(\"RubedoAppHelp\",{\r",
                    "    singleton:true,\r",
                    "    pages:\"<p>Les différentes pages d'un site peuvent aisément être enrichies de blocs fonctionnels.L'application \\\"Pages\\\" permet :</p><ul><li> d'accéder à la vue arborescente des sites gérés sur la plateforme,</li><li> d'ajouter des pages sur la base des masques de pages existants,</li><li> de modifier ou de supprimer des pages,</li><li> d'ajouter des fonctionnalités aux pages par le biais de la bibliothèque de blocs fonctionnels,</li><li> de prévisualiser l'affichage d'une page en front-office,</li><li> de gérer les paramètres de référencement naturel,</li><li> de gérer les droits en lecture et écriture au travers des espaces de travail.</li></ul>\",\r",
                    "    sites:\"<p>Rubedo offre nativement la fonctionnalité d'usine à sites.L'application \\\"Sites\\\" permet  :</p><ul><li> de créer de nouveaux sites au travers d'un assistant de création </li><li>  sur la base de modèles existants ou en partant d'un modèle vierge </li><li>  de modifier le paramétrage des sites existants</li></ul>\",\r",
                    "    masks:\"<p>Les masques de pages représentent les différents gabarits de rendu disponibles en front-office.L'application \\\"Masques de pages\\\" permet  :</p><ul><li> de créer de nouveaux gabarits de mise en page en lignes et colonnes</li> <li>  de dupliquer des masques existants, éventuellement d'un site vers un autre</li> <li>  de gérer les blocs fonctionnels persistants, tels que les menus</li> <li>  de constituer une bibliothèques d'éléments (lignes, colonnes ou blocs) réutilisables entre les masques</li> <li>  de gérer les paramètres de \\\"Responsive Design\\\" : visibilité des lignes, colonnes et blocs sur téléphone, tablette, ou ordinateur</li> </ul>\",\r",
                    "    contentTypes:\"<p>Les types de contenus correspondent aux données structurées gérées par Rubedo : articles, news, ...etc.L'application \\\"Types de contenus\\\" permet  :</p><ul><li> de créer de nouveaux types de contenus à l'aide d'un éditeur avancé</li><li>  de paramétrer champs par champs les contrôles de saisie, les valeurs par défaut, le caractère obligatoire</li><li>  de modifier des types de contenus existants</li><li>  de gérer le caractère localisable (plusieurs langue), et recherchable d'un champ</li><li>  de gérer les aides à la saisie</li><li>  de déclarer les vocabulaires applicables à la classification du contenu</li><li>  de déclarer le workflow applicable au contenu</li><li>  de déclarer le ou les espaces de travail autorisés pour la création et la diffusion des contenus</li></ul>\",\r",
                    "    damTypes:\"<p>Les types de média correspondent aux fichiers gérés par Rubedo : images, vidéo, audio, animation ou documents bureautiques.L'application \\\"Types de médias\\\" permet  :</p><ul><li> de créer de nouveaux types de médias (image, document, vidéo, audio, animation)</li><li> d'y ajouter des métadonnées (auteur, copyright, sous-titrage, ...etc.) à l'aide d'un éditeur avancé</li><li> de paramétrer champs par champs les contrôles de saisie, les valeurs par défaut, le caractère obligatoire</li><li> de modifier des types de médias existants</li><li> de gérer le caractère localisable (plusieurs langue), et recherchable d'une métadonnée</li><li> de gérer les aides à la saisie</li><li> de déclarer les vocabulaires applicables à la classification d'un média</li><li> de déclarer le ou les espaces de travail autorisés pour la création et la diffusion des médias</li></ul>\",\r",
                    "    queries:\"<p>Les requêtes permettent de créer des listes automatiques ou manuelles de contenus, documents et médias.L'application \\\"Requêtes\\\" permet  :</p><ul><li> de créer et sauvegarder des requêtes simples ou avancées, sur les contenus ou les médias</li><li> de modifier des requêtes existantes</li><ul>\",\r",
                    "    taxonomy:\"<p>La taxonomie permet de créer une classification multi-dimentionnelle de l'ensemble des contenus (textes, médias et documents).L'application \\\"Taxonomie\\\" permet  :</p><ul><li> de créer de nouveaux vocabulaires arcborescents et d'y ajouter des termes</li> <li> d'appliquer des droits pour les espaces de travail et une aide dédiée pour chaque taxonomie</li> <li> de définir ses caractéristiques : extensible, choix multiple, obligatoire</li></ul>\",\r",
                    "    groups:\"<p>Les groupes permettent de définir les utilisateurs, les espaces de travail et les rôles de gestion associés.L'application \\\"Groupes\\\" permet  :</p><ul><li> de créer des groupes d'utilisateurs</li><li>  d'ajouter des utilisateurs à ces groupes</li><li>  de paramétrer les droits associés à chaque groupe : Espaces de travail (en lecture, en contribution, par défaut) et rôles</li><li>  de gérer les groupes (suppression, modification, déplacement, hiérarchisation)</li></ul>\",\r",
                    "    workspaces:\"<p>Les espaces de travail permettent de réserver l'accès en lecture, écriture ou diffusion sur des types de contenus, de médias ou des rubriques de sites à des groupes d'utilisateurs spécifiques.L'application \\\"Espaces de travail\\\" permet  :</p><ul><li> de créer des espaces</li><li> de supprimer les espaces de travail</li></ul>\",\r",
                    "    users:\"<p>Les utilisateurs front-office et back-office sont regroupés au sein d'un annuaire interne. Les droits accordés à un utilisateur sont liés aux groupes auxquels il appartient.L'application \\\"Utilisateurs\\\" permet  :</p><ul><li> d'ajouter des utilisateurs</li> <li> de compléter les profils (email, service, fonction, photo, ...)</li> <li>  de gérer les accès et les droits (identifiant, mot de passe, groupes, validité du compte)</li> </ul> \",\r",
                    "    contents:\"<p>Rubedo gère un référentiel transverse de contenus qui peuvent être publiés sur différents sites et espaces de travail.L'application \\\"Contenus\\\" permet  :</p><ul><li> de créer un contenu à partir d'un type de contenu paramétré</li> <li>  de gérer son état dans le workflow de publication attribué au type de contenu</li> <li>  de gérer la publication différée</li> <li>  de classer le contenu à l'aide des vocabulaires autorisés pour ce type de contenu</li> <li>  d'associer le contenu à un espace de contribution et des espaces de diffusion</li> <li>  de modifier les contenus</li> <li>  de dupliquer les contenus</li> <li>  d'ajouter un contenu en favori</li> </ul> \",\r",
                    "    dam:\"<p>La médiathèque permet de gérer les médias ( images, vidéo, audio, animation ou documents) en fonction des types de médias paramétrés.L'application \\\"Médiathèque\\\" permet  :</p><ul><li> de créer un média à partir d'un type de média paramétré</li><li>  d'uploader un média et de renseigner les métadonnées associées</li><li>  de classer le média à l'aide des vocabulaires autorisés pour ce type de média</li><li>  d'associer le média à un espace de contribution et des espaces de diffusion</li><li>  de modifier les média</li><li>  d'ajouter un média en favori</li></ul>\"\r",
                    "});\r",
                    "} catch (err){console.log(\"failed to read application help resource\");}"
                ]
            },
            "designerId": "02134674-1f73-49b0-ab08-b1257bec9f4e"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onButtonAfterRender1",
                "fn": "onButtonAfterRender1",
                "implHandler": [
                    "try {\r",
                    "    abstractcomponent.on(\"click\", function(){\r",
                    "        Ext.widget('callout', {\r",
                    "            cls: 'gray',\r",
                    "            width: 400,\r",
                    "            html:RubedoAppHelp[abstractcomponent.RApplication],\r",
                    "            calloutArrowLocation: 'top-right',\r",
                    "            target: abstractcomponent,\r",
                    "            relativePosition: 't-b',\r",
                    "            relativeOffsets: [-184,0],\r",
                    "            fadeInDuration: 200,\r",
                    "            fadeOutDuration: 200,\r",
                    "            dismissDelay: 60000\r",
                    "        }).show();\r",
                    "\r",
                    "    });\r",
                    "} catch (err){\r",
                    "    console.log(\"failed to show application help\");\r",
                    "}"
                ],
                "name": "afterrender",
                "scope": "me",
                "designer|targetType": "Ext.button.Button",
                "designer|controlQuery": "#RHelpBtn"
            },
            "designerId": "c94d5e08-9c29-411e-ab6a-d4b0134271e9"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onComponentBeforeRender",
                "fn": "onComponentBeforeRender",
                "implHandler": [
                    "if ((abstractcomponent.isXType(\"field\"))||(abstractcomponent.isXType(\"checkboxgroup\"))){\r",
                    "    abstractcomponent.labelSeparator=\" \";\r",
                    "    if (abstractcomponent.isXType(\"datefield\")){\r",
                    "        abstractcomponent.submitFormat='U';\r",
                    "        abstractcomponent.altFormats='U|m/d/Y|n/j/Y|n/j/y|m/j/y|n/d/y|m/j/Y|n/d/Y|m-d-y|m-d-Y|m/d|m-d|md|mdy|mdY|d|Y-m-d|n-j|n/j';\r",
                    "    }\r",
                    "    if (abstractcomponent.fieldLabel==\"Localisable\"){\r",
                    "        //temporary localiser hide\r",
                    "        abstractcomponent.hide();\r",
                    "    }\r",
                    "}"
                ],
                "name": "beforerender",
                "scope": "me",
                "designer|targetType": "Ext.form.field.Base",
                "designer|controlQuery": "field"
            },
            "designerId": "20545d3d-55c2-4f5f-b471-7cfc1046dd2b"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onBasefieldAdded",
                "fn": "onBasefieldAdded",
                "implHandler": [
                    "if (abstractcomponent.RTip){\r",
                    "    abstractcomponent.anchor=\"90%\";\r",
                    "    container.insert(pos,Ext.widget(\"RHelpBtn\", {tooltip:abstractcomponent.RTip}));\r",
                    "}"
                ],
                "name": "added",
                "scope": "me",
                "designer|targetType": "Ext.form.field.Base",
                "designer|controlQuery": "field"
            },
            "designerId": "4989e511-4ecd-48f4-bcbb-2cfcdfbf915d"
        }
    ]
}