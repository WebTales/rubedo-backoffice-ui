{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "EmailController",
        "designer|userAlias": "EmailController"
    },
    "designerId": "0c137efa-3885-472d-a4d2-96e811f9f233",
    "cn": [
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onNewETRowBtnClick",
                "implHandler": [
                    "var newRow=Ext.widget(\"panel\",{\r",
                    "    eType:\"row\",\r",
                    "    plugins:[Ext.create(\"Ext.ux.BoxReorderer\")],\r",
                    "    layout: {\r",
                    "        type: 'hbox',\r",
                    "        align: 'stretch'\r",
                    "    },\r",
                    "    flex:1\r",
                    "});\r",
                    "Ext.getCmp(Ext.getCmp(\"elementETIdField\").getValue()).add(newRow);\r",
                    "newRow.getEl().dom.click();"
                ],
                "name": "click",
                "scope": "me",
                "designer|targetType": "Ext.button.Button",
                "designer|controlQuery": "#newETRowBtn"
            },
            "designerId": "126bde2e-5dcd-4121-8875-0958430edbb8"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onMainETContainerAfterRender",
                "implHandler": [
                    "component.getComponent(0).addBodyCls('contrastEMBorder');\r",
                    "component.getEl().on(\"click\", function(e){\r",
                    "    Ext.getCmp(\"elementETIdField\").setValue(component.getComponent(0).getId());\r",
                    "    e.stopEvent();\r",
                    "});"
                ],
                "name": "afterrender",
                "scope": "me",
                "designer|targetType": "Ext.container.Container",
                "designer|controlQuery": "#mainETContainer"
            },
            "designerId": "543a8a7b-83ee-40e9-b986-d0cd275af490"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onMainETHolderAfterRender",
                "implHandler": [
                    "component.addBodyCls('contrastEMBorder');\r",
                    "component.getEl().on(\"click\", function(e){\r",
                    "    Ext.getCmp(\"elementETIdField\").setValue(component.getId());\r",
                    "    e.stopEvent();\r",
                    "});"
                ],
                "name": "afterrender",
                "scope": "me",
                "designer|targetType": "Ext.panel.Panel",
                "designer|controlQuery": "#mainETHolder panel"
            },
            "designerId": "338ce064-8461-4840-a300-de1fce060133"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onElementETIdFieldChange",
                "implHandler": [
                    "var me=this;\r",
                    "if (!Ext.isEmpty(oldValue)){\r",
                    "    var oldOne=Ext.getCmp(oldValue);\r",
                    "    if (!Ext.isEmpty(oldOne)){\r",
                    "        oldOne.removeBodyCls('selectedEMElement');\r",
                    "        if (oldOne.eType==\"col\"){\r",
                    "            oldOne.up().removeBodyCls(\"contrastEMPadding\");\r",
                    "            oldOne.up().doLayout();\r",
                    "        }\r",
                    "    }\r",
                    "}\r",
                    "if (!Ext.isEmpty(newValue)){\r",
                    "    var newOne=Ext.getCmp(newValue);\r",
                    "    if (!Ext.isEmpty(newOne)){\r",
                    "        newOne.getEl().frame(MyPrefData.themeColor);\r",
                    "        newOne.addBodyCls('selectedEMElement');\r",
                    "        if (newOne.eType==\"col\"){\r",
                    "            newOne.up().addBodyCls(\"contrastEMPadding\");\r",
                    "            newOne.up().doLayout();\r",
                    "        }\r",
                    "    }\r",
                    "} else {\r",
                    "\r",
                    "}\r",
                    "me.adaptETEditButtons(newValue);"
                ],
                "name": "change",
                "scope": "me",
                "designer|targetType": "Ext.form.field.Hidden",
                "designer|controlQuery": "#elementETIdField"
            },
            "designerId": "2be8bd78-2484-48ee-9f43-8bda3166f1ca"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "adaptETEditButtons",
                "designer|params": [
                    "selectedElement"
                ],
                "implHandler": [
                    "var me=this;\r",
                    "Ext.Array.forEach(Ext.getCmp(\"eTTopBarBox\").query(\"button\"), function(button){button.disable();});\r",
                    "Ext.getCmp(\"ETAddComponentsBtnGr\").disable();\r",
                    "Ext.getCmp(\"eTEditControl\").removeAll();\r",
                    "Ext.getCmp(\"eTEditControl\").setTitle(\"Select an element\");\r",
                    "var thing=Ext.getCmp(selectedElement);\r",
                    "if (!Ext.isEmpty(thing)){\r",
                    "    if (selectedElement==\"mainETHolder\"){\r",
                    "        Ext.getCmp(\"newETRowBtn\").enable();\r",
                    "        Ext.getCmp(\"eTEditControl\").setTitle(\"Email body\");\r",
                    "    } else if (thing.eType==\"row\"){\r",
                    "        Ext.getCmp(\"eTEditControl\").setTitle(\"Row\");\r",
                    "        if(me.calculateRemainingRowWidth(thing)>=10){\r",
                    "        Ext.getCmp(\"newETColBtn\").enable();\r",
                    "        }\r",
                    "        Ext.getCmp(\"moveUPETBtn\").enable();\r",
                    "        Ext.getCmp(\"moveDownETBTn\").enable();\r",
                    "    } else if (thing.eType==\"col\"){\r",
                    "        Ext.getCmp(\"eTEditControl\").setTitle(\"Column\");\r",
                    "        Ext.getCmp(\"ETAddComponentsBtnGr\").enable();\r",
                    "        Ext.getCmp(\"moveUPETBtn\").enable();\r",
                    "        Ext.getCmp(\"moveDownETBTn\").enable();\r",
                    "        me.displayColControls(thing);\r",
                    "    }\r",
                    "}"
                ]
            },
            "designerId": "e85a4abe-ef9c-4045-98d5-207d7be889c2"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onNewETColBtnClick",
                "implHandler": [
                    "var me=this;\r",
                    "var newCol=Ext.widget(\"panel\",{\r",
                    "    eType:\"col\",\r",
                    "    width:Ext.Array.min([100,me.calculateRemainingRowWidth(Ext.getCmp(Ext.getCmp(\"elementETIdField\").getValue()))])\r",
                    "\r",
                    "});\r",
                    "Ext.getCmp(Ext.getCmp(\"elementETIdField\").getValue()).add(newCol);\r",
                    "newCol.getEl().dom.click();"
                ],
                "name": "click",
                "scope": "me",
                "designer|targetType": "Ext.button.Button",
                "designer|controlQuery": "#newETColBtn"
            },
            "designerId": "7fe60160-e4cc-45bb-a3f7-57806b157b37"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onMoveUPETBtnClick",
                "implHandler": [
                    "var field = Ext.getCmp(Ext.getCmp(\"elementETIdField\").getValue());\r",
                    "if (!Ext.isEmpty(field)) {\r",
                    "    var pos = field.up().items.indexOf(field);\r",
                    "    if (pos > 0) {\r",
                    "        field.up().move(pos,pos-1);\r",
                    "    }\r",
                    "}"
                ],
                "name": "click",
                "scope": "me",
                "designer|targetType": "Ext.button.Button",
                "designer|controlQuery": "#moveUPETBtn"
            },
            "designerId": "9ee2ab82-0ab1-4ecb-80d7-609f39ac95a0"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onMoveDownETBTnClick",
                "implHandler": [
                    "var field = Ext.getCmp(Ext.getCmp(\"elementETIdField\").getValue());\r",
                    "if (!Ext.isEmpty(field)) {\r",
                    "    var pos = field.up().items.indexOf(field);\r",
                    "    field.up().move(pos,pos+1);\r",
                    "}"
                ],
                "name": "click",
                "scope": "me",
                "designer|targetType": "Ext.button.Button",
                "designer|controlQuery": "#moveDownETBTn"
            },
            "designerId": "322c6208-21df-4887-955b-8239fbf64e67"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "displayColControls",
                "designer|params": [
                    "col"
                ],
                "implHandler": [
                    "var me=this;\r",
                    "var container=Ext.getCmp(\"eTEditControl\");\r",
                    "var spanEdit=Ext.widget('numberfield',{\r",
                    "    itemId:\"spanEditor\",\r",
                    "    fieldLabel:\"Width\",\r",
                    "    labelWidth:60,\r",
                    "    editable:true,\r",
                    "    allowDecimals:false,\r",
                    "    anchor:\"100%\",\r",
                    "    value:col.getWidth(),\r",
                    "    minValue:10\r",
                    "});\r",
                    "spanEdit.on(\"change\",function(){\r",
                    "    if (spanEdit.isValid()){\r",
                    "        col.setWidth(spanEdit.getValue());\r",
                    "        me.applyWidthConstraints(spanEdit,col);\r",
                    "    }\r",
                    "});\r",
                    "me.applyWidthConstraints(spanEdit,col);\r",
                    "container.add(spanEdit);"
                ]
            },
            "designerId": "22677d58-ca79-4fe3-a0e8-794df8348db5"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "applyWidthConstraints",
                "designer|params": [
                    "field",
                    "col"
                ],
                "implHandler": [
                    "var maxWidth=col.up().getWidth()-2;\r",
                    "Ext.Array.forEach(col.up().query(\"panel\"), function(otherCol){\r",
                    "    if (otherCol.getId()!=col.getId()){\r",
                    "        maxWidth=maxWidth-otherCol.getWidth();\r",
                    "    }\r",
                    "});\r",
                    "field.setMaxValue(maxWidth);"
                ]
            },
            "designerId": "b2497bd0-4478-452a-aec3-e61175c2db4e"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "calculateRemainingRowWidth",
                "designer|params": [
                    "row"
                ],
                "implHandler": [
                    "var maxWidth=row.getWidth()-2;\r",
                    "Ext.Array.forEach(row.query(\"panel\"), function(otherCol){\r",
                    "        maxWidth=maxWidth-otherCol.getWidth();\r",
                    "});\r",
                    "return(maxWidth);"
                ]
            },
            "designerId": "6f50f766-78ac-41bb-9b1c-f5e927435494"
        }
    ]
}