{
    "type": "controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "MediathequeController",
        "designer|userAlias": "MediathequeController"
    },
    "id": "ExtBox1-ext-gen22225",
    "designerId": "b2af3c2f-f75e-4841-ba23-2846d3c30f46",
    "cn": [
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "majMedias",
                "fn": "majMedias",
                "implHandler": [
                    "var filArianne = tablepanel.findParentByType('window').getDockedComponent('filArianne');\r",
                    "var typeFil = filArianne.getComponent('type');\r",
                    "if (Ext.isDefined(typeFil)) {typeFil.setText(record.data.titre+'<b> > </b>');}\r",
                    "else { typeFil= Ext.widget('button',{iconCls: \"folder\", text:record.data.titre+'<b> > </b>', itemId:'type'});\r",
                    "filArianne.add(typeFil);\r",
                    "}\r",
                    "var boiteMeta = tablepanel.findParentByType('window').getDockedComponent('barreMeta').getComponent('boiteBarreMeta');\r",
                    "var imageMeta = tablepanel.findParentByType('window').getDockedComponent('barreMeta').getComponent('imageBarreMeta');\r",
                    "var customMeta = record.data.titre;\r",
                    "boiteMeta.update(customMeta);\r",
                    "imageMeta.setSrc('resources/icones/'+MyPrefData.iconsDir+'/48x48/folder.png');\r",
                    "\r",
                    "Ext.getStore('MediaViewStore').loadData(record.data.medias);\r",
                    ""
                ],
                "name": "itemclick",
                "scope": "me",
                "designer|targetType": "Ext.grid.Panel",
                "designer|controlQuery": "#contributionMediasGrid"
            },
            "designerId": "29b51909-4a99-48d1-a1d7-5565eff81dfa"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "doubleClickPreview",
                "fn": "doubleClickPreview",
                "implHandler": [
                    "var monType =Ext.getCmp('contributionMediasGrid').getSelectionModel().getLastSelected().data.type;\r",
                    "if (monType==\"Image\"){\r",
                    "    var fenetre = Ext.getCmp(record.data.text+\"NadPreview\");\r",
                    "    if (Ext.isDefined(fenetre)){ fenetre.toFront(); }\r",
                    "    else {\r",
                    "        fenetre = Ext.widget('ImagePreviewWindow', {title:record.data.text, id:record.data.text+\"NadPreview\"});\r",
                    "        var maTaille=record.data.conf;\r",
                    "\r",
                    "\r",
                    "\r",
                    "        fenetre.getComponent(0).setSize(maTaille).setSrc(record.data.fichier);\r",
                    "        Ext.getCmp('desktopCont').add(fenetre);\r",
                    "        fenetre.show();\r",
                    "    }\r",
                    "\r",
                    "}\r",
                    "else if (monType==\"PDF\"){\r",
                    "    var fenetre = Ext.getCmp(record.data.text+\"PDFPreview\");\r",
                    "    if (Ext.isDefined(fenetre)){ fenetre.toFront(); }\r",
                    "    else {\r",
                    "        fenetre = Ext.widget('PDFPreviewWindow', {title:record.data.text, id:record.data.text+\"PDFPreview\"});\r",
                    "        fenetre.add(Ext.widget('container',{autoEl:{\r",
                    "            tag: 'iframe',\r",
                    "            style: 'height: 100%; width: 100%; border: none',\r",
                    "            src: record.data.fichier\r",
                    "        }}));\r",
                    "        Ext.getCmp('desktopCont').add(fenetre);\r",
                    "        fenetre.show();\r",
                    "    }\r",
                    "\r",
                    "}\r",
                    ""
                ],
                "name": "itemdblclick",
                "scope": "me",
                "designer|targetType": "Ext.view.View",
                "designer|controlQuery": "#MediaMainView"
            },
            "designerId": "1868ecb2-d3bd-4ac2-927c-54f119d5d5f7"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onDataviewSelectionChange",
                "fn": "onDataviewSelectionChange",
                "implHandler": [
                    "var boiteMeta = Ext.getCmp('contributionMedias').getDockedComponent('barreMeta').getComponent('boiteBarreMeta');\r",
                    "var imageMeta = Ext.getCmp('contributionMedias').getDockedComponent('barreMeta').getComponent('imageBarreMeta');\r",
                    "if (Ext.isEmpty(selections)) {\r",
                    "    var customMeta = Ext.getCmp('contributionMediasGrid').getSelectionModel().getLastSelected().data.titre;\r",
                    "    boiteMeta.update(customMeta);\r",
                    "    imageMeta.setSrc('resources/icones/'+MyPrefData.iconsDir+'/48x48/folder.png');\r",
                    "\r",
                    "} else if (selections.length==1) {\r",
                    "    var monType= Ext.getCmp('contributionMediasGrid').getSelectionModel().getLastSelected().data.type;   \r",
                    "    if (monType==\"Image\"){\r",
                    "        imageMeta.setSrc('resources/icones/'+MyPrefData.iconsDir+'/48x48/image.png');\r",
                    "        var customMeta=(selections[0].data.text+\"</br> Creation : \"+selections[0].data.meta.creation+\r",
                    "        \" Dernière modification : \"+selections[0].data.meta.derniereModification+\" Version : \"+selections[0].data.meta.version+\r",
                    "        \" Auteur : \"+selections[0].data.meta.auteur+\" Dimensions : \"+selections[0].data.conf.width+\"x\"+selections[0].data.conf.height);\r",
                    "        boiteMeta.update(customMeta);\r",
                    "    } else  if (monType==\"PDF\"){\r",
                    "        imageMeta.setSrc('resources/icones/'+MyPrefData.iconsDir+'/48x48/pdf.png');\r",
                    "        var customMeta=(selections[0].data.text+\"</br> Creation : \"+selections[0].data.meta.creation+\r",
                    "        \" Dernière modification : \"+selections[0].data.meta.derniereModification+\" Version : \"+selections[0].data.meta.version+\r",
                    "        \" Auteur : \"+selections[0].data.meta.auteur);\r",
                    "        boiteMeta.update(customMeta);\r",
                    "    }\r",
                    "} else {\r",
                    "    var monType= Ext.getCmp('contributionMediasGrid').getSelectionModel().getLastSelected().data.type;   \r",
                    "    if (monType==\"Image\"){\r",
                    "        imageMeta.setSrc('resources/icones/'+MyPrefData.iconsDir+'/48x48/image.png');\r",
                    "        var customMeta=(selections.length+\" Images\");\r",
                    "        boiteMeta.update(customMeta);\r",
                    "    } else if (monType==\"PDF\"){\r",
                    "        imageMeta.setSrc('resources/icones/'+MyPrefData.iconsDir+'/48x48/pdf.png');\r",
                    "        var customMeta=(selections.length+\" PDF\");\r",
                    "        boiteMeta.update(customMeta);\r",
                    "    }\r",
                    "\r",
                    "}"
                ],
                "name": "selectionchange",
                "scope": "me",
                "designer|targetType": "Ext.view.View",
                "designer|controlQuery": "#MediaMainView"
            },
            "designerId": "2a2ed000-fc23-4e82-b396-a8cafa297782"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "supprimeMedia",
                "fn": "supprimeMedia",
                "implHandler": [
                    "Ext.getCmp('MediaMainView').getStore().remove(Ext.getCmp('MediaMainView').getSelectionModel().getSelection());"
                ],
                "name": "click",
                "scope": "me",
                "designer|targetType": "Ext.button.Button",
                "designer|controlQuery": "#boutonSupprimerMedias"
            },
            "designerId": "a98295bf-93ec-4ab2-94f7-5550a70780a2"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "afficheMediaEditor",
                "fn": "afficheMediaEditor",
                "implHandler": [
                    "var monType =Ext.getCmp('contributionMediasGrid').getSelectionModel().getLastSelected().data.type;\r",
                    "var selectedStuf=Ext.getCmp('MediaMainView').getSelectionModel().getSelection();\r",
                    "if (selectedStuf.length==1){\r",
                    "    var record=selectedStuf[0];\r",
                    "    if (monType==\"Image\"){\r",
                    "        var fenetre = Ext.getCmp('mediaImageEditor');\r",
                    "        if (Ext.isDefined(fenetre)){ fenetre.toFront(); }\r",
                    "        else {\r",
                    "            fenetre = Ext.widget('mediaImageEditor', {title:record.data.text});\r",
                    "            var maTaille=record.data.conf;\r",
                    "            var image = Ext.widget('image', {\r",
                    "                src:record.data.fichier,\r",
                    "                height:maTaille.height,\r",
                    "                width:maTaille.width,\r",
                    "                resizable:true\r",
                    "            });\r",
                    "            image.on('resize', function(moi, height, width, oldWidth, oldHeight){\r",
                    "                Ext.getCmp('imageEditorHeightField').setValue(height);\r",
                    "                Ext.getCmp('imageEditorWidthField').setValue(width);\r",
                    "                Ext.getCmp('imageEditorHeightField').removeListener('click');\r",
                    "                Ext.getCmp('imageEditorUndo').on('click', function(){\r",
                    "                    image.setSize(oldWidth, oldHeight);\r",
                    "                    console.log(image.id);\r",
                    "                });\r",
                    "            });\r",
                    "            fenetre.getComponent(0).add(image);\r",
                    "\r",
                    "\r",
                    "            Ext.getCmp('desktopCont').add(fenetre);\r",
                    "            fenetre.show();\r",
                    "        }\r",
                    "\r",
                    "    }\r",
                    "}\r",
                    ""
                ],
                "name": "click",
                "scope": "me",
                "designer|targetType": "Ext.button.Button",
                "designer|controlQuery": "#boutonEditionMedias"
            },
            "designerId": "f1e7fea5-8b3f-4729-aeff-fc64453a7d03"
        }
    ]
}