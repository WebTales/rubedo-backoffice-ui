{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userAlias": "SitesController",
        "designer|userClassName": "SitesController"
    },
    "designerId": "75884ccb-3e5d-4d28-a9bc-a73fc3e63f6c",
    "cn": [
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#mainSitesGrid",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "selectSite",
                "implHandler": [
                    "if (Ext.isEmpty(selected)) {",
                    "    Ext.getCmp(\"sitesInterface\").getComponent(\"breadcrumb\").removeAll();",
                    "    Ext.getCmp(\"sitesInterface\").getComponent(\"breadcrumb\").add(Ext.widget(\"button\", {text: \"Sites\", iconCls:\"referencement_icon\"}));",
                    "    Ext.getCmp(\"siteRemoveBtn\").disable();",
                    "    Ext.getCmp(\"mainSiteProps\").up().up().disable();",
                    "    Ext.getCmp(\"updateSiteBtn\").disable();",
                    "    Ext.getCmp(\"mainSiteProps\").getForm().reset();",
                    "    Ext.getStore(\"SiteExternalStyles\").removeAll();",
                    "    Ext.getStore(\"SiteExternalScripts\").removeAll();",
                    "    Ext.getStore(\"SiteInternalStyles\").removeAll();",
                    "    Ext.getStore(\"SiteInternalScripts\").removeAll();",
                    "} else {",
                    "    Ext.getCmp(\"sitesInterface\").getComponent(\"breadcrumb\").removeAll();",
                    "    Ext.getCmp(\"sitesInterface\").getComponent(\"breadcrumb\").add(Ext.widget(\"button\", {text: \"Sites <b> > </b>\", iconCls:\"referencement_icon\"}));",
                    "    Ext.getCmp(\"sitesInterface\").getComponent(\"breadcrumb\").add(Ext.widget(\"button\", {text: selected[0].get(\"text\"), iconCls:\"referencement_icon\"}));",
                    "    Ext.getCmp(\"siteRemoveBtn\").enable();",
                    "    Ext.getCmp(\"mainSiteProps\").up().up().enable();",
                    "    Ext.getCmp(\"updateSiteBtn\").enable();",
                    "    Ext.getStore(\"PagePickerStore\").getProxy().extraParams.filter=\"[{\\\"property\\\":\\\"site\\\",\\\"value\\\":\\\"\"+selected[0].get(\"id\")+\"\\\"}]\";",
                    "    Ext.getStore(\"PagePickerStore\").load();",
                    "    var siteResources=Ext.clone(selected[0].get(\"resources\"));",
                    "    if (Ext.isEmpty(siteResources)){",
                    "        siteResources={",
                    "            externalStyles:[ ],",
                    "            externalScripts:[ ],",
                    "            internalStyles:[ ],",
                    "            internalScripts:[ ]",
                    "        };",
                    "    }",
                    "    Ext.getStore(\"SiteExternalStyles\").loadData(siteResources.externalStyles);",
                    "    Ext.getStore(\"SiteExternalScripts\").loadData(siteResources.externalScripts);",
                    "    Ext.getStore(\"SiteInternalStyles\").loadData(siteResources.internalStyles);",
                    "    Ext.getStore(\"SiteInternalScripts\").loadData(siteResources.internalScripts);",
                    "",
                    "    Ext.getCmp(\"mainSiteProps\").getForm().setValues(Ext.clone(selected[0].getData()));",
                    "    if (Ext.isEmpty(Ext.getCmp(\"sitesHomePicker\").getValue())){",
                    "        Ext.getCmp(\"sitesHomePicker\").setValue([]);",
                    "    }",
                    "    if (Ext.isEmpty(Ext.getCmp(\"sitesNotFoundPicker\").getValue())){",
                    "        Ext.getCmp(\"sitesNotFoundPicker\").setValue([]);",
                    "    }",
                    "    if ((!ACL.interfaceRights[\"write.ui.sites\"])||(selected[0].get(\"readOnly\"))){",
                    "        Ext.getCmp(\"updateSiteBtn\").disable();",
                    "        Ext.getCmp(\"siteRemoveBtn\").disable();",
                    "        Ext.Array.forEach(Ext.getCmp(\"mainSiteProps\").query(\"field\"), function(field){field.setReadOnly(true);});",
                    "    } else {",
                    "        Ext.Array.forEach(Ext.getCmp(\"mainSiteProps\").query(\"field\"), function(field){field.setReadOnly(false);});",
                    "    }",
                    "    Ext.getCmp(\"sitesDLSToolbar\").recievei18n(selected[0].get(\"i18n\"),selected[0].get(\"locale\"),selected[0].get(\"nativeLanguage\"));",
                    "    var boiteMeta = Ext.getCmp(\"sitesInterface\").getDockedComponent('barreMeta').getComponent('boiteBarreMeta');",
                    "    var valeurs= Ext.clone(selected[0].data);",
                    "    valeurs.creation= Ext.Date.format(valeurs.createTime, Ext.Date.defaultFormat);",
                    "    valeurs.derniereModification= Ext.Date.format(valeurs.lastUpdateTime, Ext.Date.defaultFormat);",
                    "    boiteMeta.update(valeurs);",
                    "    boiteMeta.show();",
                    "",
                    "}"
                ],
                "name": "selectionchange",
                "scope": "me"
            },
            "name": "selectSite",
            "designerId": "f556d022-ed69-445c-ae0b-256f2561b3b0"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#siteRemoveBtn",
                "designer|targetType": "Ext.button.Button",
                "fn": "deleteSite",
                "implHandler": [
                    "var target = Ext.getCmp('mainSitesGrid').getSelectionModel().getSelection()[0];\r",
                    "if (Ext.isDefined(target)) {\r",
                    "    var delCon = Ext.widget('delConfirmZ');\r",
                    "    delCon.show();\r",
                    "    Ext.getCmp('delConfirmZOui').on('click', function() { \r",
                    "\r",
                    "        if ((!Ext.isEmpty(Ext.getCmp(\"pagesSitesCombo\")))&&(Ext.getCmp(\"pagesSitesCombo\").getValue()==Ext.getCmp(\"mainSitesGrid\").getSelectionModel().getLastSelected().get(\"id\"))) {\r",
                    "            Ext.MessageBox.confirm(Rubedo.RubedoAutomatedElementsLoc.warningTitle,Rubedo.RubedoAutomatedElementsLoc.siteModifWarning, function(anser){\r",
                    "                if (anser==\"yes\"){\r",
                    "                    Ext.getCmp(\"contributionPages\").close();\r",
                    "                    Ext.getCmp('mainSitesGrid').getStore().remove(target);\r",
                    "                    Ext.getStore(\"SitesJson\").addListener(\"datachanged\",function(){\r",
                    "                        if (Ext.getStore(\"MasquesDataJson\").isUsed) {\r",
                    "                            Ext.getStore(\"MasquesDataJson\").load();\r",
                    "                        }\r",
                    "                    },this,{single:true});\r",
                    "                        //button.disable();\r",
                    "                        Ext.getCmp(\"sitesInterface\").getComponent(\"breadcrumb\").removeAll();\r",
                    "                        Ext.getCmp(\"sitesInterface\").getComponent(\"breadcrumb\").add(Ext.widget(\"button\", {text: \"Sites\", iconCls:\"referencement_icon\"}));\r",
                    "                        Ext.getCmp(\"sitesInterface\").getDockedComponent('barreMeta').getComponent('boiteBarreMeta').hide();\r",
                    "                        Ext.getCmp(\"mainSiteProps\").getForm().reset();\r",
                    "                        Ext.getCmp('delConfirmZ').close();\r",
                    "                    } \r",
                    "                });\r",
                    "            } else {\r",
                    "\r",
                    "\r",
                    "                Ext.getCmp('mainSitesGrid').getStore().remove(target);\r",
                    "                Ext.getStore(\"SitesJson\").addListener(\"datachanged\",function(){\r",
                    "                    if (Ext.getStore(\"MasquesDataJson\").isUsed) {\r",
                    "                        Ext.getStore(\"MasquesDataJson\").load();\r",
                    "                    }\r",
                    "                },this,{single:true});\r",
                    "                    //button.disable();\r",
                    "                    Ext.getCmp(\"sitesInterface\").getComponent(\"breadcrumb\").removeAll();\r",
                    "                    Ext.getCmp(\"sitesInterface\").getComponent(\"breadcrumb\").add(Ext.widget(\"button\", {text: \"Sites\", iconCls:\"referencement_icon\"}));\r",
                    "                    Ext.getCmp(\"sitesInterface\").getDockedComponent('barreMeta').getComponent('boiteBarreMeta').hide();\r",
                    "                    Ext.getCmp(\"mainSiteProps\").getForm().reset();\r",
                    "                    Ext.getCmp('delConfirmZ').close();\r",
                    "\r",
                    "                }});  \r",
                    "\r",
                    "            }"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "deleteSite",
            "designerId": "9e982d4b-bf73-4485-9935-2ad4712bb630"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#siteAddBtn",
                "designer|targetType": "Ext.button.Button",
                "fn": "openAddSiteWindow",
                "implHandler": [
                    "Ext.widget(\"siteBuilderWizzard\").show();"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "openAddSiteWindow",
            "designerId": "db880338-3f71-412b-8ce9-7ed7faa11844"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#newSiteSubmitBtn",
                "designer|targetType": "Ext.button.Button",
                "fn": "createNewSite",
                "implHandler": [
                    "var form = button.up().getForm();\r",
                    "if (form.isValid()){\r",
                    "    var newSite= Ext.create(\"Rubedo.model.sitesDataModel\", form.getValues());\r",
                    "    Ext.getStore(\"SitesJson\").add(newSite);\r",
                    "    Ext.getStore(\"SitesJson\").addListener(\"datachanged\",function(){\r",
                    "        Ext.getCmp('mainSitesGrid').getSelectionModel().select(newSite);\r",
                    "    },this,{single:true});\r",
                    "\r",
                    "\r",
                    "        button.up().up().close();\r",
                    "    }"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "createNewSite",
            "designerId": "93b162d4-b6dd-4c4f-b017-dcca9a36421c"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#updateSiteBtn",
                "designer|targetType": "Ext.button.Button",
                "fn": "updateSiteSubmit",
                "implHandler": [
                    "var me=this;",
                    "var form = Ext.getCmp(\"mainSiteProps\").getForm();",
                    "if (form.isValid()){",
                    "    var newSiteResources={",
                    "                    externalStyles:Ext.Array.pluck(Ext.getStore(\"SiteExternalStyles\").getRange(),\"data\"),",
                    "                    externalScripts:Ext.Array.pluck(Ext.getStore(\"SiteExternalScripts\").getRange(),\"data\"),",
                    "                    internalStyles:Ext.Array.pluck(Ext.getStore(\"SiteInternalStyles\").getRange(),\"data\"),",
                    "                    internalScripts:Ext.Array.pluck(Ext.getStore(\"SiteInternalScripts\").getRange(),\"data\")",
                    "                };",
                    "    if ((!Ext.isEmpty(Ext.getCmp(\"pagesSitesCombo\")))&&(Ext.getCmp(\"pagesSitesCombo\").getValue()==Ext.getCmp(\"mainSitesGrid\").getSelectionModel().getLastSelected().get(\"id\"))) {",
                    "        Ext.MessageBox.confirm(Rubedo.RubedoAutomatedElementsLoc.warningTitle,Rubedo.RubedoAutomatedElementsLoc.siteModifWarning, function(anser){",
                    "            if (anser==\"yes\"){",
                    "                Ext.getCmp(\"contributionPages\").close();",
                    "                var myRec=Ext.getCmp(\"mainSitesGrid\").getSelectionModel().getLastSelected();",
                    "                myRec.beginEdit();",
                    "                myRec.set(form.getValues(false, false, false, true));",
                    "                myRec.set(\"resources\",newSiteResources);",
                    "                Ext.getCmp(\"sitesDLSToolbar\").persisti18n(myRec);",
                    "                myRec.endEdit();",
                    "                Ext.getStore(\"SitesJson\").addListener(\"datachanged\",function(){",
                    "                    me.selectSite(Ext.getCmp(\"mainSitesGrid\"),[myRec]);",
                    "                    if (Ext.getStore(\"MasquesDataJson\").isUsed) {",
                    "                        Ext.getStore(\"MasquesDataJson\").load();",
                    "                    }",
                    "                },this,{single:true});",
                    "                }",
                    "            });",
                    "        } else {",
                    "            var myRec=Ext.getCmp(\"mainSitesGrid\").getSelectionModel().getLastSelected();",
                    "            myRec.beginEdit();",
                    "            myRec.set(form.getValues(false, false, false, true));",
                    "            myRec.set(\"resources\",newSiteResources);",
                    "            Ext.getCmp(\"sitesDLSToolbar\").persisti18n(myRec);",
                    "            myRec.endEdit();",
                    "            Ext.getStore(\"SitesJson\").addListener(\"datachanged\",function(){",
                    "                me.selectSite(Ext.getCmp(\"mainSitesGrid\"),[myRec]);",
                    "                if (Ext.getStore(\"MasquesDataJson\").isUsed) {",
                    "                    Ext.getStore(\"MasquesDataJson\").load();",
                    "                }",
                    "            },this,{single:true});",
                    "            }",
                    "}else{",
                    "    Ext.Msg.alert(Rubedo.RubedoAutomatedElementsLoc.errorTitle,Rubedo.RubedoAutomatedElementsLoc.invalidFieldsError);",
                    "}"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "updateSiteSubmit",
            "designerId": "0cd9478d-25ca-4ba2-8f1d-0706ea13fa61"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#sitesInterface",
                "designer|targetType": "Ext.window.Window",
                "fn": "onSitesInterfaceBeforeClose",
                "implHandler": [
                    "Ext.getStore(\"SitesJson\").removeAll();\r",
                    "Ext.getStore(\"PagePickerStore\").getProxy().extraParams.filter=\"[{\\\"property\\\":\\\"site\\\",\\\"value\\\":\\\"emptyDecoy\\\"}]\";\r",
                    "Ext.getStore(\"PagePickerStore\").load();\r",
                    "Ext.getStore(\"AllLanguagesStore\").removeAll();\r",
                    "Ext.getStore(\"AllLanguagesStore2\").removeAll();"
                ],
                "name": "beforeclose",
                "scope": "me"
            },
            "name": "onSitesInterfaceBeforeClose",
            "designerId": "ff32189d-a3ea-4f62-8b32-e8137715867d"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#mainSitesGrid",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onMainSitesGridRender",
                "implHandler": [
                    "Ext.getStore(\"SitesJson\").load();",
                    "Ext.getStore(\"AllLanguagesStore\").load();",
                    "Ext.getStore(\"AllLanguagesStore2\").load();",
                    "Ext.require(\"resources/ace/src/ace\");"
                ],
                "name": "render",
                "scope": "me"
            },
            "name": "onMainSitesGridRender",
            "designerId": "829e1c72-ddea-4fe6-b0b1-dbb2fa2da509"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#siteWizzardCreateBtn",
                "designer|targetType": "Ext.button.Button",
                "fn": "onSiteWizzardCreateBtnClick",
                "implHandler": [
                    "var form = button.up().up().getForm();\r",
                    "if (form.isValid()){\r",
                    "    var newSite= Ext.create(\"Rubedo.model.sitesDataModel\", form.getValues());\r",
                    "    var nativeLanguage=Ext.getCmp(\"workingLanguageField\").getValue();\r",
                    "    newSite.set(\"nativeLanguage\", nativeLanguage);\r",
                    "    newSite.set(\"locale\", nativeLanguage);\r",
                    "    var i18n= { };\r",
                    "    i18n[nativeLanguage]={\r",
                    "        title:form.getValues().title,\r",
                    "        description:form.getValues().description,\r",
                    "        author:form.getValues().author\r",
                    "    };\r",
                    "    newSite.set(\"i18n\",i18n);\r",
                    "    Ext.getStore(\"SitesJson\").add(newSite);\r",
                    "    Ext.getStore(\"SitesJson\").addListener(\"datachanged\",function(){\r",
                    "        Ext.getCmp('mainSitesGrid').getSelectionModel().select(newSite);\r",
                    "        if (Ext.getStore(\"MasquesDataJson\").isUsed) {\r",
                    "            Ext.getStore(\"MasquesDataJson\").load();\r",
                    "        }\r",
                    "    },this,{single:true});\r",
                    "        button.up().up().up().close();\r",
                    "    }"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onSiteWizzardCreateBtnClick",
            "designerId": "61472e76-7b05-4780-9bd8-0b6f54b24a0b"
        }
    ]
}