{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userAlias": "SitesController",
        "designer|userClassName": "SitesController"
    },
    "designerId": "75884ccb-3e5d-4d28-a9bc-a73fc3e63f6c",
    "cn": [
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#mainSitesGrid",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "selectSite",
                "implHandler": [
                    "if (Ext.isEmpty(selected)) {\r",
                    "    Ext.getCmp(\"sitesInterface\").getComponent(\"breadcrumb\").removeAll();\r",
                    "    Ext.getCmp(\"sitesInterface\").getComponent(\"breadcrumb\").add(Ext.widget(\"button\", {text: \"Sites\", iconCls:\"referencement_icon\"}));\r",
                    "    Ext.getCmp(\"siteRemoveBtn\").disable();\r",
                    "    Ext.getCmp(\"mainSiteProps\").up().disable();\r",
                    "    Ext.getCmp(\"updateSiteBtn\").disable();\r",
                    "    Ext.getCmp(\"mainSiteProps\").getForm().reset();\r",
                    "} else {\r",
                    "    Ext.getCmp(\"sitesInterface\").getComponent(\"breadcrumb\").removeAll();\r",
                    "    Ext.getCmp(\"sitesInterface\").getComponent(\"breadcrumb\").add(Ext.widget(\"button\", {text: \"Sites <b> > </b>\", iconCls:\"referencement_icon\"}));\r",
                    "    Ext.getCmp(\"sitesInterface\").getComponent(\"breadcrumb\").add(Ext.widget(\"button\", {text: selected[0].get(\"text\"), iconCls:\"referencement_icon\"}));\r",
                    "    Ext.getCmp(\"siteRemoveBtn\").enable();\r",
                    "    Ext.getCmp(\"mainSiteProps\").up().enable();\r",
                    "    Ext.getCmp(\"updateSiteBtn\").enable();\r",
                    "    Ext.getStore(\"PagePickerStore\").getProxy().extraParams.filter=\"[{\\\"property\\\":\\\"site\\\",\\\"value\\\":\\\"\"+selected[0].get(\"id\")+\"\\\"}]\";\r",
                    "    Ext.getStore(\"PagePickerStore\").load();\r",
                    "\r",
                    "    Ext.getCmp(\"mainSiteProps\").getForm().setValues(Ext.clone(selected[0].getData()));\r",
                    "    if (Ext.isEmpty(Ext.getCmp(\"sitesHomePicker\").getValue())){\r",
                    "        Ext.getCmp(\"sitesHomePicker\").setValue([]);\r",
                    "    }\r",
                    "    if ((!ACL.interfaceRights[\"write.ui.sites\"])||(selected[0].get(\"readOnly\"))){\r",
                    "        Ext.getCmp(\"updateSiteBtn\").disable();\r",
                    "        Ext.getCmp(\"siteRemoveBtn\").disable();\r",
                    "        Ext.Array.forEach(Ext.getCmp(\"mainSiteProps\").query(\"field\"), function(field){field.setReadOnly(true);});\r",
                    "    } else {\r",
                    "        Ext.Array.forEach(Ext.getCmp(\"mainSiteProps\").query(\"field\"), function(field){field.setReadOnly(false);});\r",
                    "    }\r",
                    "    Ext.getCmp(\"sitesDLSToolbar\").recievei18n(selected[0].get(\"i18n\"),selected[0].get(\"locale\"),selected[0].get(\"nativeLanguage\"));\r",
                    "    var boiteMeta = Ext.getCmp(\"sitesInterface\").getDockedComponent('barreMeta').getComponent('boiteBarreMeta');\r",
                    "    var valeurs= Ext.clone(selected[0].data);\r",
                    "    valeurs.creation= Ext.Date.format(valeurs.createTime, Ext.Date.defaultFormat);\r",
                    "    valeurs.derniereModification= Ext.Date.format(valeurs.lastUpdateTime, Ext.Date.defaultFormat);\r",
                    "    boiteMeta.update(valeurs);\r",
                    "    boiteMeta.show();\r",
                    "\r",
                    "}"
                ],
                "name": "selectionchange",
                "scope": "me"
            },
            "designerId": "f556d022-ed69-445c-ae0b-256f2561b3b0"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#siteRemoveBtn",
                "designer|targetType": "Ext.button.Button",
                "fn": "deleteSite",
                "implHandler": [
                    "var target = Ext.getCmp('mainSitesGrid').getSelectionModel().getSelection()[0];\r",
                    "if (Ext.isDefined(target)) {\r",
                    "    var delCon = Ext.widget('delConfirmZ');\r",
                    "    delCon.show();\r",
                    "    Ext.getCmp('delConfirmZOui').on('click', function() { \r",
                    "\r",
                    "        if ((!Ext.isEmpty(Ext.getCmp(\"pagesSitesCombo\")))&&(Ext.getCmp(\"pagesSitesCombo\").getValue()==Ext.getCmp(\"mainSitesGrid\").getSelectionModel().getLastSelected().get(\"id\"))) {\r",
                    "            Ext.MessageBox.confirm(Rubedo.RubedoAutomatedElementsLoc.warningTitle,Rubedo.RubedoAutomatedElementsLoc.siteModifWarning, function(anser){\r",
                    "                if (anser==\"yes\"){\r",
                    "                    Ext.getCmp(\"contributionPages\").close();\r",
                    "                    Ext.getCmp('mainSitesGrid').getStore().remove(target);\r",
                    "                    Ext.getStore(\"SitesJson\").addListener(\"datachanged\",function(){\r",
                    "                        if (Ext.getStore(\"MasquesDataJson\").isUsed) {\r",
                    "                            Ext.getStore(\"MasquesDataJson\").load();\r",
                    "                        }\r",
                    "                    },this,{single:true});\r",
                    "                        //button.disable();\r",
                    "                        Ext.getCmp(\"sitesInterface\").getComponent(\"breadcrumb\").removeAll();\r",
                    "                        Ext.getCmp(\"sitesInterface\").getComponent(\"breadcrumb\").add(Ext.widget(\"button\", {text: \"Sites\", iconCls:\"referencement_icon\"}));\r",
                    "                        Ext.getCmp(\"sitesInterface\").getDockedComponent('barreMeta').getComponent('boiteBarreMeta').hide();\r",
                    "                        Ext.getCmp(\"mainSiteProps\").getForm().reset();\r",
                    "                        Ext.getCmp('delConfirmZ').close();\r",
                    "                    } \r",
                    "                });\r",
                    "            } else {\r",
                    "\r",
                    "\r",
                    "                Ext.getCmp('mainSitesGrid').getStore().remove(target);\r",
                    "                Ext.getStore(\"SitesJson\").addListener(\"datachanged\",function(){\r",
                    "                    if (Ext.getStore(\"MasquesDataJson\").isUsed) {\r",
                    "                        Ext.getStore(\"MasquesDataJson\").load();\r",
                    "                    }\r",
                    "                },this,{single:true});\r",
                    "                    //button.disable();\r",
                    "                    Ext.getCmp(\"sitesInterface\").getComponent(\"breadcrumb\").removeAll();\r",
                    "                    Ext.getCmp(\"sitesInterface\").getComponent(\"breadcrumb\").add(Ext.widget(\"button\", {text: \"Sites\", iconCls:\"referencement_icon\"}));\r",
                    "                    Ext.getCmp(\"sitesInterface\").getDockedComponent('barreMeta').getComponent('boiteBarreMeta').hide();\r",
                    "                    Ext.getCmp(\"mainSiteProps\").getForm().reset();\r",
                    "                    Ext.getCmp('delConfirmZ').close();\r",
                    "\r",
                    "                }});  \r",
                    "\r",
                    "            }"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "9e982d4b-bf73-4485-9935-2ad4712bb630"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#siteAddBtn",
                "designer|targetType": "Ext.button.Button",
                "fn": "openAddSiteWindow",
                "implHandler": [
                    "Ext.widget(\"siteBuilderWizzard\").show();"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "db880338-3f71-412b-8ce9-7ed7faa11844"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#newSiteSubmitBtn",
                "designer|targetType": "Ext.button.Button",
                "fn": "createNewSite",
                "implHandler": [
                    "var form = button.up().getForm();\r",
                    "if (form.isValid()){\r",
                    "    var newSite= Ext.create(\"Rubedo.model.sitesDataModel\", form.getValues());\r",
                    "    Ext.getStore(\"SitesJson\").add(newSite);\r",
                    "    Ext.getStore(\"SitesJson\").addListener(\"datachanged\",function(){\r",
                    "        Ext.getCmp('mainSitesGrid').getSelectionModel().select(newSite);\r",
                    "    },this,{single:true});\r",
                    "\r",
                    "\r",
                    "        button.up().up().close();\r",
                    "    }"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "93b162d4-b6dd-4c4f-b017-dcca9a36421c"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#updateSiteBtn",
                "designer|targetType": "Ext.button.Button",
                "fn": "updateSiteSubmit",
                "implHandler": [
                    "var me=this;\r",
                    "var form = Ext.getCmp(\"mainSiteProps\").getForm();\r",
                    "if (form.isValid()){\r",
                    "    if ((!Ext.isEmpty(Ext.getCmp(\"pagesSitesCombo\")))&&(Ext.getCmp(\"pagesSitesCombo\").getValue()==Ext.getCmp(\"mainSitesGrid\").getSelectionModel().getLastSelected().get(\"id\"))) {\r",
                    "        Ext.MessageBox.confirm(Rubedo.RubedoAutomatedElementsLoc.warningTitle,Rubedo.RubedoAutomatedElementsLoc.siteModifWarning, function(anser){\r",
                    "            if (anser==\"yes\"){\r",
                    "                Ext.getCmp(\"contributionPages\").close();\r",
                    "                var myRec=Ext.getCmp(\"mainSitesGrid\").getSelectionModel().getLastSelected();\r",
                    "                myRec.beginEdit();\r",
                    "                myRec.set(form.getValues(false, false, false, true)); \r",
                    "                Ext.getCmp(\"sitesDLSToolbar\").persisti18n(myRec);\r",
                    "                myRec.endEdit();\r",
                    "                Ext.getStore(\"SitesJson\").addListener(\"datachanged\",function(){\r",
                    "                    me.selectSite(Ext.getCmp(\"mainSitesGrid\"),[myRec]);\r",
                    "                    if (Ext.getStore(\"MasquesDataJson\").isUsed) {\r",
                    "                        Ext.getStore(\"MasquesDataJson\").load();\r",
                    "                    }\r",
                    "                },this,{single:true});\r",
                    "                }\r",
                    "            });\r",
                    "        } else {\r",
                    "            var myRec=Ext.getCmp(\"mainSitesGrid\").getSelectionModel().getLastSelected();\r",
                    "            myRec.beginEdit();\r",
                    "            myRec.set(form.getValues(false, false, false, true)); \r",
                    "            Ext.getCmp(\"sitesDLSToolbar\").persisti18n(myRec);\r",
                    "            myRec.endEdit();\r",
                    "            Ext.getStore(\"SitesJson\").addListener(\"datachanged\",function(){\r",
                    "                me.selectSite(Ext.getCmp(\"mainSitesGrid\"),[myRec]);\r",
                    "                if (Ext.getStore(\"MasquesDataJson\").isUsed) {\r",
                    "                    Ext.getStore(\"MasquesDataJson\").load();\r",
                    "                }\r",
                    "            },this,{single:true});\r",
                    "            }\r",
                    "}else{\r",
                    "    Ext.Msg.alert(Rubedo.RubedoAutomatedElementsLoc.errorTitle,Rubedo.RubedoAutomatedElementsLoc.invalidFieldsError);\r",
                    "}"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "0cd9478d-25ca-4ba2-8f1d-0706ea13fa61"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#sitesInterface",
                "designer|targetType": "Ext.window.Window",
                "fn": "onSitesInterfaceBeforeClose",
                "implHandler": [
                    "Ext.getStore(\"SitesJson\").removeAll();\r",
                    "Ext.getStore(\"PagePickerStore\").getProxy().extraParams.filter=\"[{\\\"property\\\":\\\"site\\\",\\\"value\\\":\\\"emptyDecoy\\\"}]\";\r",
                    "Ext.getStore(\"PagePickerStore\").load();\r",
                    "Ext.getStore(\"AllLanguagesStore\").removeAll();\r",
                    "Ext.getStore(\"AllLanguagesStore2\").removeAll();"
                ],
                "name": "beforeclose",
                "scope": "me"
            },
            "designerId": "ff32189d-a3ea-4f62-8b32-e8137715867d"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#mainSitesGrid",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onMainSitesGridRender",
                "implHandler": [
                    "Ext.getStore(\"SitesJson\").load();\r",
                    "Ext.getStore(\"AllLanguagesStore\").load();\r",
                    "Ext.getStore(\"AllLanguagesStore2\").load();"
                ],
                "name": "render",
                "scope": "me"
            },
            "designerId": "829e1c72-ddea-4fe6-b0b1-dbb2fa2da509"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#siteWizzardCreateBtn",
                "designer|targetType": "Ext.button.Button",
                "fn": "onSiteWizzardCreateBtnClick",
                "implHandler": [
                    "var form = button.up().up().getForm();\r",
                    "if (form.isValid()){\r",
                    "    var newSite= Ext.create(\"Rubedo.model.sitesDataModel\", form.getValues());\r",
                    "    var nativeLanguage=Ext.getCmp(\"workingLanguageField\").getValue();\r",
                    "    newSite.set(\"nativeLanguage\", nativeLanguage);\r",
                    "    newSite.set(\"locale\", nativeLanguage);\r",
                    "    var i18n= { };\r",
                    "    i18n[nativeLanguage]={\r",
                    "        title:form.getValues().title,\r",
                    "        description:form.getValues().description,\r",
                    "        author:form.getValues().author\r",
                    "    };\r",
                    "    newSite.set(\"i18n\",i18n);\r",
                    "    Ext.getStore(\"SitesJson\").add(newSite);\r",
                    "    Ext.getStore(\"SitesJson\").addListener(\"datachanged\",function(){\r",
                    "        Ext.getCmp('mainSitesGrid').getSelectionModel().select(newSite);\r",
                    "        if (Ext.getStore(\"MasquesDataJson\").isUsed) {\r",
                    "            Ext.getStore(\"MasquesDataJson\").load();\r",
                    "        }\r",
                    "    },this,{single:true});\r",
                    "        button.up().up().up().close();\r",
                    "    }"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "61472e76-7b05-4780-9bd8-0b6f54b24a0b"
        }
    ]
}