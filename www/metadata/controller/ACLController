{
    "type": "controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "ACLController",
        "designer|userAlias": "ACLController"
    },
    "id": "ExtBox1-ext-gen4642",
    "designerId": "dc1acb41-f9a0-4ebc-8338-2cd4321f5712",
    "cn": [
        {
            "type": "fixedfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "init",
                "fn": "init",
                "designer|params": [
                    "application"
                ],
                "implHandler": [
                    "Ext.define('ACL', {\r",
                    "    singleton:true,\r",
                    "    CSRFToken:\"notYetSet\",\r",
                    "    interfaceRights:{\r",
                    "        \"read.ui.taxonomy\":false,\r",
                    "        \"write.ui.taxonomy\":false,\r",
                    "        \"read.ui.contentTypes\":false,\r",
                    "        \"write.ui.contentTypes\":false,\r",
                    "        \"read.ui.contents\":false,\r",
                    "        \"write.ui.contents\":false,\r",
                    "        \"read.ui.contents.draft\":false,\r",
                    "        \"read.ui.contents.pending\":false,\r",
                    "        \"read.ui.contents.published\":false,\r",
                    "        \"write.ui.contents.draft\":false,\r",
                    "        \"write.ui.contents.pending\":false,\r",
                    "        \"write.ui.contents.published\":false,\r",
                    "        \"write.ui.contents.draftToPending\":false,\r",
                    "        \"write.ui.contents.pendingToDraft\":false,\r",
                    "        \"write.ui.contents.pendingToPublished\":false,\r",
                    "        \"write.ui.contents.putOnline\":false,\r",
                    "        \"write.ui.contents.putOffline\":false,\r",
                    "        \"read.ui.masks\":false,\r",
                    "        \"write.ui.masks\":false,\r",
                    "        \"read.ui.users\":false,\r",
                    "        \"write.ui.users\":false,\r",
                    "        \"read.ui.sites\":false,\r",
                    "        \"write.ui.sites\":false,\r",
                    "        \"read.ui.pages\":false,\r",
                    "        \"write.ui.pages\":false,\r",
                    "        \"read.ui.medias\":false,\r",
                    "        \"write.ui.medias\":false,\r",
                    "        \"read.ui.groups\":false,\r",
                    "        \"write.ui.groups\":false,\r",
                    "        \"read.ui.workflows\":false,\r",
                    "        \"write.ui.workflows\":false,\r",
                    "        \"exe.ui.elasticSearch\":false\r",
                    "    }\r",
                    "});\r",
                    "Ext.Ajax.on(\"beforerequest\", function(conn, options){\r",
                    "    options.params.token=ACL.CSRFToken;\r",
                    "});"
                ]
            },
            "designerId": "2830bd31-d38c-4fac-869d-a550f739c628"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onComponentRender",
                "fn": "onComponentRender",
                "implHandler": [
                    "if (!Ext.isEmpty(abstractcomponent.ACL)) {   \r",
                    "    if (ACL.interfaceRights[abstractcomponent.ACL]===false){\r",
                    "        abstractcomponent.hide();\r",
                    "        abstractcomponent.clearListeners();\r",
                    "        abstractcomponent.fireEvent=Ext.emptyFn;\r",
                    "    }\r",
                    "}"
                ],
                "name": "render",
                "scope": "me",
                "designer|targetType": "Ext.Component",
                "designer|controlQuery": "component"
            },
            "designerId": "fa87d97c-595c-421e-b2c0-1f4f38d36f1a"
        },
        {
            "type": "fixedfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onLaunch",
                "fn": "onLaunch",
                "implHandler": [
                    "Ext.Ajax.request({\r",
                    "    url:'current-user/get-token',\r",
                    "    params:{\r",
                    "    },\r",
                    "    success:function(response){\r",
                    "        ACL.CSRFToken=Ext.JSON.decode(response.responseText).token;\r",
                    "    },\r",
                    "    failure:function(){\r",
                    "        Ext.Msg.alert('Erreur', 'Erreur dans la récupération du jeton de sécurité');\r",
                    "    }\r",
                    "});\r",
                    "Ext.Ajax.request({\r",
                    "    url:'acl',\r",
                    "    params:{\r",
                    "        data: Ext.JSON.encode(ACL.interfaceRights)\r",
                    "    },\r",
                    "    success:function(response){\r",
                    "        ACL.interfaceRights=Ext.JSON.decode(response.responseText);\r",
                    "        Ext.getCmp('boutonPincipalInterface').enable();\r",
                    "    },\r",
                    "    failure:function(){\r",
                    "        Ext.Msg.alert('Erreur', 'Erreur dans la récupération des droits');\r",
                    "    }\r",
                    "});"
                ]
            },
            "designerId": "83ba7d31-8371-4044-a1c9-120f85c20615"
        }
    ]
}