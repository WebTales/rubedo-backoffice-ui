{
    "type": "Ext.form.field.Hidden",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "allowedCT": null,
        "designer|userAlias": "ACEField",
        "designer|userClassName": "ACEField",
        "fieldLabel": "Label",
        "geoQueryMode": false,
        "labelSeparator": " ",
        "queryMode": true
    },
    "configAlternates": {
        "geoQueryMode": "boolean",
        "queryMode": "boolean"
    },
    "designerId": "6295ae72-9f6d-43f0-81a3-ad3d897accc7",
    "customConfigs": [
        {
            "group": "(Custom Properties)",
            "name": "allowedCT",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "queryMode",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "geoQueryMode",
            "type": "string"
        }
    ],
    "cn": [
        {
            "type": "basiceventbinding",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onHiddenfieldRender",
                "implHandler": [
                    "Ext.require(\"resources/ace/src/ace\");",
                    "var myComponent = Ext.widget(\"ACEFieldComponent\");",
                    "myComponent.setFieldLabel(component.fieldLabel+\" \");",
                    "component.on(\"change\", function(a,newValue){",
                    "    if (Ext.isEmpty(newValue)){",
                    "        myComponent.getComponent(\"addBtn\").show();",
                    "        myComponent.getComponent(\"editBtn\").hide();",
                    "        myComponent.getComponent(\"removeBtn\").hide();",
                    "    } else {",
                    "        myComponent.getComponent(\"addBtn\").hide();",
                    "        myComponent.getComponent(\"editBtn\").show();",
                    "        myComponent.getComponent(\"removeBtn\").show();",
                    "    }",
                    "});",
                    "myComponent.getComponent(\"removeBtn\").on(\"click\", function(){",
                    "    component.setValue(null);",
                    "});",
                    "myComponent.getComponent(\"addBtn\").on(\"click\", function(){",
                    "    var myEditor = Ext.widget(\"aceEditorWindow\");",
                    "    myEditor.targetedId=component.getId();",
                    "    myEditor.twigMode=component.twigMode;",
                    "    if (component.defaultTemplateUrl){",
                    "        Ext.Ajax.request({",
                    "            url: '/components/webtales/rubedo-frontoffice/templates/blocks/'+component.defaultTemplateUrl,",
                    "            params: {",
                    "            },",
                    "            success: function(response){",
                    "                myEditor.initialValue=response.responseText;",
                    "                myEditor.show();",
                    "            },",
                    "            failure:function(response){",
                    "                myEditor.initialValue=component.getValue();",
                    "                myEditor.show();",
                    "            }",
                    "        });",
                    "    } else { ",
                    "        myEditor.initialValue=component.getValue();",
                    "        myEditor.show();",
                    "    }",
                    "",
                    "});",
                    "",
                    "myComponent.getComponent(\"editBtn\").on(\"click\", function(){",
                    "    var myEditor = Ext.widget(\"aceEditorWindow\");",
                    "",
                    "    myEditor.targetedId=component.getId();",
                    "    myEditor.initialValue=component.getValue();",
                    "    myEditor.twigMode=component.twigMode;",
                    "    myEditor.show();",
                    "",
                    "",
                    "});",
                    "component.up().add(myComponent);",
                    "component.fireEvent(\"change\",component, component.getValue());",
                    ""
                ],
                "name": "render",
                "scope": "me"
            },
            "name": "onHiddenfieldRender",
            "designerId": "03dcb93b-d909-42e7-b3c4-7afb56ad76da"
        }
    ]
}