{
    "type": "Ext.form.field.Hidden",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "height": 0,
        "id": null,
        "designer|userClassName": "GFSFileField",
        "designer|userAlias": "GFSFileField",
        "fieldLabel": "Label"
    },
    "designerId": "ea685b1f-b6a0-400a-82aa-0035cbf60d53",
    "cn": [
        {
            "type": "basiceventbinding",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onHiddenfieldRender",
                "implHandler": [
                    "var sizer=\"\";\r",
                    "if (component.bigMode) {\r",
                    "    var myComponent = Ext.widget(\"GFSFileFieldComponentBig\");\r",
                    "} else {\r",
                    "    var myComponent = Ext.widget(\"GFSFileFieldComponent\");\r",
                    "    sizer=\"&size=thumbnail\";\r",
                    "}\r",
                    "myComponent.getComponent(0).setText(component.fieldLabel+\" \");\r",
                    "myComponent.getComponent(\"buttonHolder\").getComponent(\"fieldDownloadFile\").on(\"click\", function(){\r",
                    "    window.onbeforeunload=Ext.emptyFn;\r",
                    "    window.location.href=\"file/get?file-id=\"+component.getValue()+\"&attachment=download\";\r",
                    "    var task63 = new Ext.util.DelayedTask(function(){\r",
                    "        window.onbeforeunload = function() { return Rubedo.RubedoAutomatedElementsLoc.windowBeforeUnloadMessage; };\r",
                    "    });\r",
                    "    task63.delay(400);\r",
                    "});\r",
                    "myComponent.getComponent(\"buttonHolder\").getComponent(\"fieldPreviewFile\").on(\"click\", function(){\r",
                    "    if (component.fileType==\"Image\"){\r",
                    "        var showBox = Ext.widget(\"ImagePreviewWindow\", {maxWidth:window.innerWidth, maxHeight:window.innerHeight});\r",
                    "        showBox.getComponent(0).setSrc(\"image/get?file-id=\"+component.getValue());\r",
                    "        showBox.show();\r",
                    "    }\r",
                    "    //handle cases one by one\r",
                    "});\r",
                    "myComponent.on(\"afterrender\",function(){\r",
                    "    if (Ext.isEmpty(component.getValue())){\r",
                    "\r",
                    "        myComponent.getComponent(\"fieldImagePreview\").setSrc(\"resources/icones/\"+MyPrefData.iconsDir+\"/128x128/image_remove.png\");\r",
                    "\r",
                    "        myComponent.getComponent(\"buttonHolder\").getComponent(\"fieldDownloadFile\").disable();\r",
                    "        myComponent.getComponent(\"buttonHolder\").getComponent(\"fieldClearFile\").disable();\r",
                    "        if (component.bigMode) {\r",
                    "            myComponent.getComponent(\"buttonHolder\").getComponent(\"fieldEditFile\").disable();\r",
                    "        }\r",
                    "        myComponent.getComponent(\"buttonHolder\").getComponent(\"fieldPreviewFile\").disable();\r",
                    "    } else {\r",
                    "        if (component.fileType==\"Image\"){\r",
                    "            myComponent.getComponent(\"buttonHolder\").getComponent(\"fieldPreviewFile\").enable();\r",
                    "            myComponent.getComponent(\"fieldImagePreview\").setSrc(\"image/get?file-id=\"+component.getValue()+sizer);\r",
                    "            if (component.bigMode) {\r",
                    "                myComponent.getComponent(\"buttonHolder\").getComponent(\"fieldEditFile\").enable();\r",
                    "            }\r",
                    "        } else {\r",
                    "            myComponent.getComponent(\"fieldImagePreview\").setSrc(\"../file/get-thumbnail\");\r",
                    "            myComponent.getComponent(\"buttonHolder\").getComponent(\"fieldPreviewFile\").disable();\r",
                    "        }\r",
                    "        myComponent.getComponent(\"buttonHolder\").getComponent(\"fieldDownloadFile\").enable();\r",
                    "        myComponent.getComponent(\"buttonHolder\").getComponent(\"fieldClearFile\").enable();\r",
                    "    }\r",
                    "\r",
                    "    myComponent.getEl().on(\"click\",function(){\r",
                    "\r",
                    "        component.getEl().dom.click();\r",
                    "    });\r",
                    "});\r",
                    "component.up().add(myComponent);\r",
                    "myComponent.getComponent(\"buttonHolder\").getComponent(\"fieldChangeFile\").on(\"click\",function(){\r",
                    "    Ext.widget(\"GFSFieldUploadWindow\",{targetField:component.id}).show();\r",
                    "});\r",
                    "myComponent.getComponent(\"buttonHolder\").getComponent(\"fieldEditFile\").on(\"click\",function(){\r",
                    "    var myPixlrEditor=Ext.widget(\"pixlrEditorWindow\");\r",
                    "    myPixlrEditor.targetedImageId=component.getValue();\r",
                    "    myPixlrEditor.targetedImageTitle=Ext.getStore(\"DAMEditStore\").getRange()[0].get(\"title\");\r",
                    "    myPixlrEditor.on(\"beforeclose\",function(){\r",
                    "        var task = new Ext.util.DelayedTask(function(){\r",
                    "            myComponent.getComponent(\"fieldImagePreview\").setSrc(null);\r",
                    "            myComponent.getComponent(\"fieldImagePreview\").setSrc(\"image/get?file-id=\"+component.getValue()+sizer);\r",
                    "        });\r",
                    "        task.delay(400);\r",
                    "    }); \r",
                    "    myPixlrEditor.show();\r",
                    "});\r",
                    "myComponent.getComponent(\"buttonHolder\").getComponent(\"fieldClearFile\").on(\"click\",function(){\r",
                    "    var delCon = Ext.widget('delConfirmZ');\r",
                    "    delCon.show();\r",
                    "    Ext.getCmp('delConfirmZOui').on('click', function() { \r",
                    "        component.setValue(null);\r",
                    "        delCon.close();\r",
                    "    }); \r",
                    "});\r",
                    "component.on(\"change\",function(theField,newValue){\r",
                    "    if ((newValue===\"\")||(Ext.isEmpty(newValue))){\r",
                    "        myComponent.getComponent(\"fieldImagePreview\").setSrc(\"resources/icones/\"+MyPrefData.iconsDir+\"/128x128/image_remove.png\");\r",
                    "        myComponent.getComponent(\"buttonHolder\").getComponent(\"fieldDownloadFile\").disable();\r",
                    "        myComponent.getComponent(\"buttonHolder\").getComponent(\"fieldClearFile\").disable();\r",
                    "        if (component.bigMode) {\r",
                    "            myComponent.getComponent(\"buttonHolder\").getComponent(\"fieldEditFile\").disable();\r",
                    "        }\r",
                    "        myComponent.getComponent(\"buttonHolder\").getComponent(\"fieldPreviewFile\").disable();\r",
                    "\r",
                    "    } else {\r",
                    "        if (component.fileType==\"Image\"){\r",
                    "            myComponent.getComponent(\"buttonHolder\").getComponent(\"fieldPreviewFile\").enable();\r",
                    "            myComponent.getComponent(\"fieldImagePreview\").setSrc(\"image/get?file-id=\"+component.getValue()+sizer);\r",
                    "            if (component.bigMode) {\r",
                    "                myComponent.getComponent(\"buttonHolder\").getComponent(\"fieldEditFile\").enable();\r",
                    "            }\r",
                    "        } else {\r",
                    "            myComponent.getComponent(\"fieldImagePreview\").setSrc(\"../file/get-thumbnail\");\r",
                    "            myComponent.getComponent(\"buttonHolder\").getComponent(\"fieldPreviewFile\").disable();\r",
                    "        }\r",
                    "        myComponent.getComponent(\"buttonHolder\").getComponent(\"fieldDownloadFile\").enable();\r",
                    "        myComponent.getComponent(\"buttonHolder\").getComponent(\"fieldClearFile\").enable();\r",
                    "\r",
                    "    }\r",
                    "\r",
                    "});\r",
                    "if (component.readOnly){\r",
                    "    myComponent.getComponent(\"buttonHolder\").getComponent(\"fieldClearFile\").hide();\r",
                    "    if (component.bigMode) {\r",
                    "        myComponent.getComponent(\"buttonHolder\").getComponent(\"fieldEditFile\").hide();\r",
                    "    }\r",
                    "    myComponent.getComponent(\"buttonHolder\").getComponent(\"fieldChangeFile\").hide();\r",
                    "} else {\r",
                    "    myComponent.getComponent(\"buttonHolder\").getComponent(\"fieldClearFile\").show();\r",
                    "    if (component.bigMode) {\r",
                    "        myComponent.getComponent(\"buttonHolder\").getComponent(\"fieldEditFile\").show();\r",
                    "    }\r",
                    "    myComponent.getComponent(\"buttonHolder\").getComponent(\"fieldChangeFile\").show();\r",
                    "}\r",
                    "if (component.fileType!=\"Image\"){\r",
                    "    if (component.bigMode) {\r",
                    "        myComponent.getComponent(\"buttonHolder\").getComponent(\"fieldEditFile\").disable();\r",
                    "    }\r",
                    "} else {\r",
                    "    //handle image online editing\r",
                    "}\r",
                    "if (component.fileType==\"Office\"){\r",
                    "    myComponent.getComponent(\"buttonHolder\").getComponent(\"fieldPreviewFile\").hide();\r",
                    "}\r",
                    "\r",
                    "component.on(\"writeablechange\", function(){\r",
                    "    if (component.readOnly){\r",
                    "        myComponent.getComponent(\"buttonHolder\").getComponent(\"fieldClearFile\").hide();\r",
                    "        if (component.bigMode) {\r",
                    "            myComponent.getComponent(\"buttonHolder\").getComponent(\"fieldEditFile\").hide();\r",
                    "        }\r",
                    "        myComponent.getComponent(\"buttonHolder\").getComponent(\"fieldChangeFile\").hide();\r",
                    "    } else {\r",
                    "        myComponent.getComponent(\"buttonHolder\").getComponent(\"fieldClearFile\").show();\r",
                    "        if (component.bigMode) {\r",
                    "            myComponent.getComponent(\"buttonHolder\").getComponent(\"fieldEditFile\").show();\r",
                    "        }\r",
                    "        myComponent.getComponent(\"buttonHolder\").getComponent(\"fieldChangeFile\").show();\r",
                    "    }\r",
                    "    if (component.fileType!=\"Image\"){\r",
                    "        if (component.bigMode) {\r",
                    "            myComponent.getComponent(\"buttonHolder\").getComponent(\"fieldEditFile\").disable();\r",
                    "        }\r",
                    "    } else {\r",
                    "        //handle image online editing\r",
                    "    }\r",
                    "    if (component.fileType==\"Office\"){\r",
                    "        myComponent.getComponent(\"buttonHolder\").getComponent(\"fieldPreviewFile\").hide();\r",
                    "    }\r",
                    "});"
                ],
                "name": "render",
                "scope": "me"
            },
            "designerId": "3591409c-9d82-41a9-95bd-b545b760cbb4"
        }
    ]
}