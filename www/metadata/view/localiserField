{
    "type": "Ext.form.field.Hidden",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "height": null,
        "designer|userClassName": "localiserField",
        "designer|userAlias": "localiserField",
        "fieldLabel": "Label"
    },
    "designerId": "b0ae3c81-7792-47a7-91c2-3e7e993f879c",
    "cn": [
        {
            "type": "basiceventbinding",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onHiddenfieldRender",
                "implHandler": [
                    "var companion = Ext.widget(\"localiserFieldComponent\");\r",
                    "companion.setFieldLabel(component.getFieldLabel());\r",
                    "component.on(\"change\", function(a, newValue){\r",
                    "    var decoded = { };\r",
                    "    if (!Ext.isEmpty(newValue)){\r",
                    "        decoded = newValue;\r",
                    "    }\r",
                    "    Ext.Array.forEach(companion.query(\"field\"), function(field){\r",
                    "        field.suspendEvents(false);\r",
                    "        field.setValue(decoded[field.name]);\r",
                    "        field.resumeEvents();\r",
                    "    });\r",
                    "});\r",
                    "Ext.Array.forEach(companion.query(\"field\"), function(field){\r",
                    "    field.on(\"change\", function(a, newValue){\r",
                    "        if (field.isValid()){\r",
                    "            component.suspendEvents(false);\r",
                    "            var decoded = { };\r",
                    "            if (!Ext.isEmpty(component.getValue())) {\r",
                    "                decoded = component.getValue();\r",
                    "            }\r",
                    "            decoded[field.name]=newValue;   \r",
                    "            decoded.location={\r",
                    "                \"type\":\"Point\",\r",
                    "                \"coordinates\":[decoded.lon,decoded.lat]\r",
                    "            };\r",
                    "            component.setValue(decoded);\r",
                    "            component.resumeEvents();\r",
                    "            if ((field.name==\"address\")&&(!Ext.isEmpty(newValue))){\r",
                    "                if (Ext.isEmpty(field.geocoder)){\r",
                    "                    field.geocoder=new google.maps.Geocoder();\r",
                    "                }\r",
                    "                if (Ext.isEmpty(field.geoTask)){\r",
                    "                    field.geoTask=new Ext.util.DelayedTask(function(){\r",
                    "                        field.geocoder.geocode( { 'address': field.getValue()}, function(results, status) {\r",
                    "                        if (status == google.maps.GeocoderStatus.OK) {\r",
                    "                            decoded.lat=results[0].geometry.location.lat();\r",
                    "                            decoded.lon=results[0].geometry.location.lng();\r",
                    "                            decoded.location={\r",
                    "                                \"type\":\"Point\",\r",
                    "                                \"coordinates\":[decoded.lon,decoded.lat]\r",
                    "                            };\r",
                    "                            component.suspendEvents(false);\r",
                    "                            component.setValue(decoded);\r",
                    "                            component.resumeEvents();\r",
                    "                            Ext.Array.forEach(companion.query(\"field\"), function(field){\r",
                    "                                field.suspendEvents(false);\r",
                    "                                field.setValue(decoded[field.name]);\r",
                    "                                field.resumeEvents();\r",
                    "                            });\r",
                    "                        }\r",
                    "                    });\r",
                    "                });\r",
                    "            }\r",
                    "            field.geoTask.delay(500);\r",
                    "\r",
                    "        }\r",
                    "\r",
                    "    }});\r",
                    "});\r",
                    "companion.on(\"afterrender\",function(){\r",
                    "    companion.getEl().on(\"click\",function(){\r",
                    "\r",
                    "        component.getEl().dom.click();\r",
                    "    });\r",
                    "});\r",
                    "component.up().add(companion);"
                ],
                "name": "render",
                "scope": "me"
            },
            "designerId": "c87af72e-326b-4845-811b-cda3fdb7f007"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "setValue",
                "designer|params": [
                    "value"
                ],
                "implHandler": [
                    "var me=this;\r",
                    "me.value=value;\r",
                    "me.fireEvent(\"change\",me,value);"
                ]
            },
            "designerId": "0140f35c-9954-47e2-8639-03d3fde38933"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "getValue",
                "implHandler": [
                    "return(this.value);"
                ]
            },
            "designerId": "3e0f555a-13b7-45e6-99de-58115698cc5e"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "getSubmitValue",
                "implHandler": [
                    "return (this.value);"
                ]
            },
            "designerId": "e4af3ecf-e07d-4b8b-a422-61017b7cb3cb"
        }
    ]
}