{
    "type": "Ext.form.field.Hidden",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userAlias": "ImagePickerField",
        "designer|userClassName": "ImagePickerField",
        "fieldLabel": "Label",
        "height": 0,
        "id": null
    },
    "designerId": "29ccd34b-610a-4d7f-84de-be664235a5e8",
    "cn": [
        {
            "type": "basiceventbinding",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onHiddenfieldRender",
                "implHandler": [
                    "var icDir=\"blue\";",
                    "if (typeof(MyPrefData)!=\"undefined\"){",
                    "    icDir=MyPrefData.iconsDir;",
                    "}",
                    "if (component.smallMode) {",
                    "    var myComponent = Ext.widget(\"ImageFieldComponentSmall\");",
                    "} else {",
                    "    var myComponent = Ext.widget(\"ImageFieldComponent\");",
                    "}",
                    "myComponent.getComponent(0).setText(component.fieldLabel+\" \");",
                    "myComponent.on(\"afterrender\",function(){",
                    "    if (Ext.isEmpty(component.getValue())){",
                    "        myComponent.getComponent(\"fieldImagePreview\").setSrc(\"resources/icones/\"+icDir+\"/128x128/image_remove.png\");",
                    "        myComponent.getComponent(\"buttonHolder\").getComponent(\"fieldClearImage\").hide();",
                    "        myComponent.getComponent(\"buttonHolder\").getComponent(\"infoBtn\").hide();",
                    "    } else {",
                    "        myComponent.getComponent(\"fieldImagePreview\").setSrc(\"dam/get-thumbnail?id=\"+component.getValue());",
                    "        myComponent.getComponent(\"buttonHolder\").getComponent(\"fieldClearImage\").show();",
                    "        Ext.Ajax.request({",
                    "            url: 'dam/find-one',",
                    "            method:'GET',",
                    "            params: {",
                    "                id: component.getValue()",
                    "            },",
                    "            success: function(response){",
                    "                var answer = Ext.JSON.decode(response.responseText);",
                    "                myComponent.getComponent(\"buttonHolder\").getComponent(\"infoBtn\").setTooltip(answer.data.title);",
                    "                myComponent.getComponent(\"buttonHolder\").getComponent(\"infoBtn\").show();",
                    "            },",
                    "            failure:function(){",
                    "                console.log(\"failed to get content title\");",
                    "            }",
                    "        });",
                    "    }",
                    "    myComponent.getEl().on(\"click\",function(){",
                    "",
                    "        component.getEl().dom.click();",
                    "    });",
                    "});",
                    "component.up().add(myComponent);",
                    "myComponent.getComponent(\"buttonHolder\").getComponent(\"fieldChangeImage\").on(\"click\",function(){",
                    "    //Ext.widget(\"ImagePickerWindow\",{targetField:component.id}).show();",
                    "    var delay = 10;",
                    "    var prev = Ext.getCmp(\"searchResultsWindow\");",
                    "    if (!Ext.isEmpty(prev)){",
                    "        prev.close();",
                    "        delay=400;",
                    "    }",
                    "    var task = new Ext.util.DelayedTask(function(){",
                    "        var companion = Ext.widget(\"searchResultsWindow\");",
                    "        companion.targetId=component.getId();",
                    "        companion.MediaPickerMode=true;",
                    "        if (!Ext.isEmpty(component.allowedDAMTypes)){",
                    "            companion.allowedDT=component.allowedDAMTypes;",
                    "        }",
                    "        companion.show();",
                    "    });",
                    "    task.delay(delay);",
                    "});",
                    "myComponent.getComponent(\"buttonHolder\").getComponent(\"fieldClearImage\").on(\"click\",function(){",
                    "    component.setValue(null);",
                    "});",
                    "component.on(\"change\",function(theField,newValue){",
                    "    if ((newValue===\"\")||(Ext.isEmpty(newValue))){",
                    "        myComponent.getComponent(\"fieldImagePreview\").setSrc(\"resources/icones/\"+icDir+\"/128x128/image_remove.png\");",
                    "        myComponent.getComponent(\"buttonHolder\").getComponent(\"fieldClearImage\").hide();",
                    "        myComponent.getComponent(\"buttonHolder\").getComponent(\"infoBtn\").hide();",
                    "",
                    "    } else {",
                    "        myComponent.getComponent(\"fieldImagePreview\").setSrc(\"dam/get-thumbnail?id=\"+newValue);",
                    "        myComponent.getComponent(\"buttonHolder\").getComponent(\"fieldClearImage\").show();",
                    "        myComponent.getComponent(\"buttonHolder\").getComponent(\"infoBtn\").show();",
                    "        Ext.Ajax.request({",
                    "            url: 'dam/find-one',",
                    "            method:'GET',",
                    "            params: {",
                    "                id: newValue",
                    "            },",
                    "            success: function(response){",
                    "                var answer = Ext.JSON.decode(response.responseText);",
                    "                myComponent.getComponent(\"buttonHolder\").getComponent(\"infoBtn\").setTooltip(answer.data.title);",
                    "                myComponent.getComponent(\"buttonHolder\").getComponent(\"infoBtn\").show();",
                    "            },",
                    "            failure:function(){",
                    "                console.log(\"failed to get content title\");",
                    "            }",
                    "        });",
                    "    }",
                    "});"
                ],
                "name": "render",
                "scope": "me"
            },
            "name": "onHiddenfieldRender",
            "designerId": "3cb1e8fb-afa1-41c1-b5d9-26c2c7f1580d"
        }
    ]
}