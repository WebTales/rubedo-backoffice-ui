{
    "type": "Ext.form.field.Hidden",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "allowedCT": null,
        "designer|userAlias": "ACEFieldCauldron",
        "designer|userClassName": "ACEFieldCauldron",
        "fieldLabel": "Label",
        "geoQueryMode": false,
        "labelSeparator": " ",
        "queryMode": true
    },
    "name": "ACEField1",
    "configAlternates": {
        "geoQueryMode": "boolean",
        "queryMode": "boolean"
    },
    "designerId": "08678a37-584a-4c7c-8dd8-c3250c974e68",
    "customConfigs": [
        {
            "group": "(Custom Properties)",
            "name": "allowedCT",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "queryMode",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "geoQueryMode",
            "type": "string"
        }
    ],
    "cn": [
        {
            "type": "basiceventbinding",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onHiddenfieldRender",
                "implHandler": [
                    "var myComponent = Ext.widget(\"ACEFieldCauldronComponent\");",
                    "var brotherField=Ext.getCmp(component.brotherFieldId);",
                    "myComponent.setFieldLabel(component.fieldLabel+\" \");",
                    "component.on(\"change\", function(a,newValue){",
                    "    if (Ext.isEmpty(newValue)){",
                    "        myComponent.getComponent(\"addBtn\").show();",
                    "        myComponent.getComponent(\"editBtn\").hide();",
                    "        myComponent.getComponent(\"removeBtn\").hide();",
                    "    } else {",
                    "        myComponent.getComponent(\"addBtn\").hide();",
                    "        myComponent.getComponent(\"editBtn\").show();",
                    "        myComponent.getComponent(\"removeBtn\").show();",
                    "    }",
                    "});",
                    "myComponent.getComponent(\"removeBtn\").on(\"click\", function(){",
                    "    component.setValue(null);",
                    "    brotherField.setValue(null);",
                    "});",
                    "myComponent.getComponent(\"addBtn\").on(\"click\", function(){",
                    "    var myEditor = Ext.create('Ext.window.Window', {",
                    "        title: Rubedo.RubedoAutomatedElementsLoc.philterEditorText,",
                    "        height: 700,",
                    "        width: 1000,constrainHeader:true,",
                    "        modal:true,",
                    "        layout: 'fit',",
                    "        html:'<iframe src=\"/backoffice/resources/cauldron/\" style=\"width:100%; height:100%;\"></iframe>'",
                    "    });",
                    "    window.handleCauldronSave=function(cauldronConfig,philter){",
                    "        component.setValue(philter);",
                    "        brotherField.setValue(cauldronConfig);",
                    "        myEditor.close();",
                    "        window.handleCauldronSave=null;",
                    "    };",
                    "    myEditor.show();",
                    "",
                    "});",
                    "",
                    "myComponent.getComponent(\"editBtn\").on(\"click\", function(){",
                    "    var myEditor = Ext.create('Ext.window.Window', {",
                    "        title: Rubedo.RubedoAutomatedElementsLoc.philterEditorText,",
                    "        height: 700,",
                    "        width: 1000,constrainHeader:true,",
                    "        modal:true,",
                    "        layout: 'fit',",
                    "        html:'<iframe src=\"/backoffice/resources/cauldron/#?config='+encodeURIComponent(brotherField.getValue())+'\" style=\"width:100%; height:100%;\"></iframe>'",
                    "    });",
                    "    window.handleCauldronSave=function(cauldronConfig,philter){",
                    "        component.setValue(philter);",
                    "        brotherField.setValue(cauldronConfig);",
                    "        myEditor.close();",
                    "        window.handleCauldronSave=null;",
                    "    };",
                    "    myEditor.show();",
                    "",
                    "",
                    "});",
                    "component.up().add(myComponent);",
                    "component.fireEvent(\"change\",component, component.getValue());",
                    ""
                ],
                "name": "render",
                "scope": "me"
            },
            "name": "onHiddenfieldRender",
            "designerId": "fcc577f4-d62c-4ac7-a43b-bbbb88c58647"
        }
    ]
}