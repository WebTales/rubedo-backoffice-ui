{
    "type": "Ext.panel.Panel",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "container|align": "stretch",
        "designer|userAlias": "SystemStatusPanel",
        "designer|userClassName": "SystemStatusPanel",
        "layout": "hbox",
        "title": ""
    },
    "designerId": "8358557d-a673-413c-9932-235a249e7220",
    "cn": [
        {
            "type": "basiceventbinding",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onPanelDestroy",
                "implHandler": [
                    "var me =this;\r",
                    "clearTimeout(me.updateTimer);\r",
                    "me.updateTimer= null;"
                ],
                "name": "destroy",
                "scope": "me"
            },
            "designerId": "af7722e2-d40c-4671-880e-53f599dce235"
        },
        {
            "type": "Ext.container.Container",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "container|align": "stretch",
                "layout": "vbox",
                "layout|flex": 1
            },
            "designerId": "28a15491-520e-49ef-934c-b49ddf332736"
        },
        {
            "type": "Ext.container.Container",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "container|align": "stretch",
                "layout": "vbox",
                "layout|flex": 1
            },
            "designerId": "3a3ef5bf-011e-42bc-afe2-a79961891a8a"
        },
        {
            "type": "basiceventbinding",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onPanelBeforeRender",
                "implHandler": [
                    "Ext.chart.theme.Memory = Ext.extend(Ext.chart.theme.Base, {\r",
                    "    constructor: function(config) {\r",
                    "        Ext.chart.theme.Memory.superclass.constructor.call(this, Ext.apply({\r",
                    "            colors: [ 'rgb(244, 16, 0)',\r",
                    "            'rgb(248, 130, 1)',\r",
                    "            'rgb(0, 7, 255)',\r",
                    "            'rgb(84, 254, 0)']\r",
                    "        }, config));\r",
                    "    }\r",
                    "});\r",
                    "var me=this;\r",
                    "me.refreshRate= 500;\r",
                    "me.cpuLoadData = [];\r",
                    "me.cpuLoadStore = Ext.create('store.json', {\r",
                    "    fields: ['core1', 'core2', 'time']\r",
                    "});\r",
                    "\r",
                    "me.memoryArray = ['Wired', 'Active', 'Inactive', 'Free'];\r",
                    "me.memoryStore = Ext.create('store.json', {\r",
                    "    fields: ['name', 'memory'],\r",
                    "    data: me.generateData(me.memoryArray)\r",
                    "});\r",
                    "\r",
                    "me.pass = 0;\r",
                    "me.processArray = ['Apache', 'PHP', 'MongoD', 'ES', 'CLI', 'CRON'];\r",
                    "me.processesMemoryStore = Ext.create('store.json', {\r",
                    "    fields: ['name', 'memory'],\r",
                    "    data: me.generateData(me.processArray)\r",
                    "});\r",
                    "\r",
                    "me.generateCpuLoad();\r",
                    "\r",
                    "me.getComponent(0).add(me.createCpu1LoadChart(),\r",
                    "me.createCpu2LoadChart());\r",
                    "me.getComponent(1).add(me.createMemoryPieChart(),\r",
                    "me.createProcessChart());"
                ],
                "name": "beforerender",
                "scope": "me"
            },
            "designerId": "8009c46e-b9a7-4664-8fe1-3be2c6e187f6"
        },
        {
            "type": "basiceventbinding",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "delay": 100,
                "fn": "onPanelAfterRender",
                "implHandler": [
                    "var me=this;\r",
                    "me.updateCharts();"
                ],
                "name": "afterrender",
                "scope": "me"
            },
            "designerId": "92226f88-efd0-4846-9134-297f8e708d49"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "createCpu1LoadChart",
                "implHandler": [
                    "return {\r",
                    "    flex: 1,\r",
                    "    xtype: 'chart',\r",
                    "    theme: 'Category1',\r",
                    "    animate: false,\r",
                    "    store: this.cpuLoadStore,\r",
                    "    legend: {\r",
                    "        position: 'bottom'\r",
                    "    },\r",
                    "    axes: [{\r",
                    "        type: 'Numeric',\r",
                    "        position: 'left',\r",
                    "        minimum: 0,\r",
                    "        maximum: 100,\r",
                    "        fields: ['core1'],\r",
                    "        title: 'Charge processeur',\r",
                    "        grid: true,\r",
                    "        labelTitle: {\r",
                    "            font: '13px Arial'\r",
                    "        },\r",
                    "        label: {\r",
                    "            font: '11px Arial'\r",
                    "        }\r",
                    "    }],\r",
                    "    series: [{\r",
                    "        title: 'Core 1 (3.4GHz)',\r",
                    "        type: 'line',\r",
                    "        lineWidth: 4,\r",
                    "        showMarkers: false,\r",
                    "        fill: true,\r",
                    "        axis: 'left',\r",
                    "        xField: 'time',\r",
                    "        yField: 'core1',\r",
                    "        style: {\r",
                    "            'stroke-width': 1\r",
                    "        }\r",
                    "    }]\r",
                    "};"
                ]
            },
            "designerId": "a42ccc3d-0b63-4443-aaa1-01ccac7f815e"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "createCpu2LoadChart",
                "implHandler": [
                    "return {\r",
                    "    flex: 1,\r",
                    "    xtype: 'chart',\r",
                    "    theme: 'Category2',\r",
                    "    animate: false,\r",
                    "    store: this.cpuLoadStore,\r",
                    "    legend: {\r",
                    "        position: 'bottom'\r",
                    "    },\r",
                    "    axes: [{\r",
                    "        type: 'Numeric',\r",
                    "        position: 'left',\r",
                    "        minimum: 0,\r",
                    "        maximum: 100,\r",
                    "        grid: true,\r",
                    "        fields: ['core2'],\r",
                    "        title: 'Charge processeur',\r",
                    "        labelTitle: {\r",
                    "            font: '13px Arial'\r",
                    "        },\r",
                    "        label: {\r",
                    "            font: '11px Arial'\r",
                    "        }\r",
                    "    }],\r",
                    "    series: [{\r",
                    "        title: 'Core 2 (3.4GHz)',\r",
                    "        type: 'line',\r",
                    "        lineWidth: 4,\r",
                    "        showMarkers: false,\r",
                    "        fill: true,\r",
                    "        axis: 'left',\r",
                    "        xField: 'time',\r",
                    "        yField: 'core2',\r",
                    "        style: {\r",
                    "            'stroke-width': 1\r",
                    "        }\r",
                    "    }]\r",
                    "};"
                ]
            },
            "designerId": "525c19e6-d0b6-4594-8934-8421f7e6ef5e"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "createMemoryPieChart",
                "implHandler": [
                    "var me = this;\r",
                    "\r",
                    "return {\r",
                    "    flex: 1,\r",
                    "    xtype: 'chart',\r",
                    "    animate: {\r",
                    "        duration: 250\r",
                    "    },\r",
                    "    store: this.memoryStore,\r",
                    "    shadow: true,\r",
                    "\r",
                    "    legend: {\r",
                    "        position: 'right'\r",
                    "    },\r",
                    "    insetPadding: 40,\r",
                    "    theme: 'Memory:gradients',\r",
                    "    series: [{\r",
                    "        donut: 30,\r",
                    "        type: 'pie',\r",
                    "        field: 'memory',\r",
                    "        showInLegend: true,\r",
                    "        tips: {\r",
                    "            trackMouse: true,\r",
                    "            width: 140,\r",
                    "            height: 28,\r",
                    "            renderer: function(storeItem, item) {\r",
                    "                //calculate percentage.\r",
                    "                var total = 0;\r",
                    "                me.memoryStore.each(function(rec) {\r",
                    "                    total += rec.get('memory');\r",
                    "                });\r",
                    "                this.setTitle(storeItem.get('name') + ': ' +\r",
                    "                Math.round(storeItem.get('memory') / total * 100) + '%');\r",
                    "            }\r",
                    "        },\r",
                    "        highlight: {\r",
                    "            segment: {\r",
                    "                margin: 20\r",
                    "            }\r",
                    "        },\r",
                    "        labelTitle: {\r",
                    "            font: '13px Arial'\r",
                    "        },\r",
                    "        label: {\r",
                    "            field: 'name',\r",
                    "            display: 'rotate',\r",
                    "            contrast: true,\r",
                    "            font: '12px Arial'\r",
                    "        }\r",
                    "    }]\r",
                    "};"
                ]
            },
            "designerId": "a78313af-93da-422d-9c32-a678a87aa473"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "createProcessChart",
                "implHandler": [
                    "return {\r",
                    "    flex: 1,\r",
                    "    xtype: 'chart',\r",
                    "    theme: 'Category1',\r",
                    "    store: this.processesMemoryStore,\r",
                    "    animate: {\r",
                    "        easing: 'ease-in-out',\r",
                    "        duration: 750\r",
                    "    },\r",
                    "    axes: [{\r",
                    "        type: 'Numeric',\r",
                    "        position: 'left',\r",
                    "        minimum: 0,\r",
                    "        maximum: 10,\r",
                    "        fields: ['memory'],\r",
                    "        title: 'Memoire',\r",
                    "        labelTitle: {\r",
                    "            font: '13px Arial'\r",
                    "        },\r",
                    "        label: {\r",
                    "            font: '11px Arial'\r",
                    "        }\r",
                    "    },{\r",
                    "        type: 'Category',\r",
                    "        position: 'bottom',\r",
                    "        fields: ['name'],\r",
                    "        title: 'Processus système',\r",
                    "        labelTitle: {\r",
                    "            font: 'bold 14px Arial'\r",
                    "        },\r",
                    "        label: {\r",
                    "            rotation: {\r",
                    "                degrees: 45\r",
                    "            }\r",
                    "        }\r",
                    "    },{\r",
                    "        type: 'Numeric',\r",
                    "        position: 'top',\r",
                    "        fields: ['memory'],\r",
                    "        title: 'Memory Usage',\r",
                    "        labelTitle: {\r",
                    "            font: 'bold 14px Arial'\r",
                    "        },\r",
                    "        label: {\r",
                    "            fill: '#FFFFFF',\r",
                    "            stroke: '#FFFFFF'\r",
                    "        },\r",
                    "        axisStyle: {\r",
                    "            fill: '#FFFFFF',\r",
                    "            stroke: '#FFFFFF'\r",
                    "        }\r",
                    "    }],\r",
                    "    series: [{\r",
                    "        title: 'Processes',\r",
                    "        type: 'column',\r",
                    "        xField: 'name',\r",
                    "        yField: 'memory',\r",
                    "        renderer: function(sprite, record, attr, index, store) {\r",
                    "            var lowColor = Ext.draw.Color.fromString('#b1da5a'),\r",
                    "            value = record.get('memory'),\r",
                    "            color;\r",
                    "\r",
                    "            if (value > 5) {\r",
                    "                color = lowColor.getDarker((value - 5) / 15).toString();\r",
                    "            } else {\r",
                    "                color = lowColor.getLighter(((5 - value) / 20)).toString();\r",
                    "            }\r",
                    "\r",
                    "            if (value >= 8) {\r",
                    "                color = '#CD0000';\r",
                    "            }\r",
                    "\r",
                    "            return Ext.apply(attr, {\r",
                    "                fill: color\r",
                    "            });\r",
                    "        }\r",
                    "    }]\r",
                    "};"
                ]
            },
            "designerId": "31482b81-af51-43dc-abe7-22f94a7d2c6a"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "generateCpuLoad",
                "implHandler": [
                    " var me = this,\r",
                    "            data = me.cpuLoadData;\r",
                    "\r",
                    "        function generate(factor) {\r",
                    "            var value = factor + ((Math.floor(Math.random() * 2) % 2) ? -1 : 1) * Math.floor(Math.random() * 9);\r",
                    "\r",
                    "            if (value < 0 || value > 100) {\r",
                    "                value = 50;\r",
                    "            }\r",
                    "\r",
                    "            return value;\r",
                    "        }\r",
                    "\r",
                    "        if (data.length === 0) {\r",
                    "            data.push({\r",
                    "                core1: 0,\r",
                    "                core2: 0,\r",
                    "                time: 0\r",
                    "            });\r",
                    "\r",
                    "            for (var i = 1; i < 100; i++) {\r",
                    "                data.push({\r",
                    "                    core1: generate(data[i - 1].core1),\r",
                    "                    core2: generate(data[i - 1].core2),\r",
                    "                    time: i\r",
                    "                });\r",
                    "            }\r",
                    "\r",
                    "            me.cpuLoadStore.loadData(data);\r",
                    "        } else {\r",
                    "            me.cpuLoadStore.data.removeAt(0);\r",
                    "            me.cpuLoadStore.data.each(function(item, key) {\r",
                    "                item.data.time = key;\r",
                    "            });\r",
                    "\r",
                    "            var lastData = me.cpuLoadStore.last().data;\r",
                    "            me.cpuLoadStore.loadData([{\r",
                    "                core1: generate(lastData.core1),\r",
                    "                core2: generate(lastData.core2),\r",
                    "                time: lastData.time + 1\r",
                    "            }], true);\r",
                    "        }"
                ]
            },
            "designerId": "7fcd8def-ed8d-4164-8bf0-612b625d4268"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "names"
                ],
                "fn": "generateData",
                "implHandler": [
                    "var data = [],\r",
                    "i,\r",
                    "rest = names.length, consume;\r",
                    "\r",
                    "for (i = 0; i < names.length; i++) {\r",
                    "    consume = Math.floor(Math.random() * rest * 100) / 100 + 2;\r",
                    "    rest = rest - (consume - 5);\r",
                    "    data.push({\r",
                    "        name: names[i],\r",
                    "        memory: consume\r",
                    "    });\r",
                    "}\r",
                    "\r",
                    "return data;"
                ]
            },
            "designerId": "b233c08e-9a90-4b1d-802e-c18017f5a1cd"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "updateCharts",
                "implHandler": [
                    "var me = this;\r",
                    "        clearTimeout(me.updateTimer);\r",
                    "        me.updateTimer = setTimeout(function() {\r",
                    "            var start = new Date().getTime();\r",
                    "            if (me.pass % 3 === 0) {\r",
                    "                me.memoryStore.loadData(me.generateData(me.memoryArray));\r",
                    "            }\r",
                    "\r",
                    "            if (me.pass % 5 === 0) {\r",
                    "                me.processesMemoryStore.loadData(me.generateData(me.processArray));\r",
                    "            }\r",
                    "\r",
                    "            me.generateCpuLoad();\r",
                    "\r",
                    "            var end = new Date().getTime();\r",
                    "\r",
                    "            // no more than 25% average CPU load\r",
                    "            me.refreshRate = Math.max(me.refreshRate, (end - start) * 4);\r",
                    "\r",
                    "            me.updateCharts();\r",
                    "            me.pass++;\r",
                    "        }, me.refreshRate);"
                ]
            },
            "designerId": "ed811fd5-f1c1-4ed3-b71d-e2509cca2d54"
        }
    ]
}