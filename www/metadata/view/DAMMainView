{
    "type": "Ext.grid.Panel",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "id": null,
        "designer|userClassName": "DAMMainView",
        "designer|userAlias": "DAMMainView",
        "requires": [
            "Ext.ux.container.SwitchButtonSegment"
        ],
        "title": "",
        "forceFit": true,
        "store": "DAMStore"
    },
    "configAlternates": {
        "managesStore": "boolean"
    },
    "designerId": "bde1968a-cbce-4b3a-872c-548461f2e683",
    "cn": [
        {
            "type": "Ext.grid.View",
            "reference": {
                "name": "viewConfig",
                "type": "object"
            },
            "codeClass": null,
            "userConfig": {
                "id": "DAMImageDrop"
            },
            "designerId": "f7a3f49d-de46-4e94-922f-f9b262b0e41b"
        },
        {
            "type": "Ext.grid.column.Column",
            "reference": {
                "name": "columns",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "filter": true,
                "localiserId": "titleColumn",
                "align": null,
                "dataIndex": "text",
                "text": "Titre"
            },
            "configAlternates": {
                "filter": "boolean"
            },
            "designerId": "e7e3fdfa-11c6-42f3-8e08-3f335522b649",
            "customConfigs": [
                {
                    "group": "(Custom Properties)",
                    "name": "filter",
                    "type": "string"
                },
                {
                    "group": "(Custom Properties)",
                    "name": "localiserId",
                    "type": "string"
                }
            ],
            "cn": [
                {
                    "type": "fixedfunction",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "fn": "renderer",
                        "designer|params": [
                            "value",
                            "metaData",
                            "record",
                            "rowIndex",
                            "colIndex",
                            "store",
                            "view"
                        ],
                        "implHandler": [
                            "if (record.get(\"readOnly\")){\r",
                            "    return(\"<i style=\\\"color:#777;\\\">\"+value+\"</i>\");\r",
                            "} else {\r",
                            "    return(value);\r",
                            "}"
                        ]
                    },
                    "designerId": "1024ceea-d981-4850-8ef9-ed99cfd9c74d"
                }
            ]
        },
        {
            "type": "Ext.grid.column.Column",
            "reference": {
                "name": "columns",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "localiserId": "languageCoumn",
                "sortable": false,
                "dataIndex": "i18n",
                "text": "Languages",
                "flex": null
            },
            "designerId": "d57fa78d-3b6c-4fa9-b32f-d6b6710ab503",
            "customConfigs": [
                {
                    "group": "(Custom Properties)",
                    "name": "localiserId",
                    "type": "string"
                }
            ],
            "cn": [
                {
                    "type": "fixedfunction",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "fn": "renderer",
                        "designer|params": [
                            "value",
                            "metaData",
                            "record",
                            "rowIndex",
                            "colIndex",
                            "store",
                            "view"
                        ],
                        "implHandler": [
                            "if (Ext.getCmp(\"DAMInterface\").currentViewMode==\"search\"){\r",
                            "    var availableLanguages=record.get(\"availableLanguages\");\r",
                            "    var returner=\"\";\r",
                            "    try{Ext.Array.forEach(availableLanguages,function(item){\r",
                            "        try{var myFlagCode2=Ext.getStore(\"AllLanguagesStore3\").query(\"locale\",item,false,false,true).items[0].get(\"flagCode\");}\r",
                            "        catch(err){var myFlagCode2=\"_unknown\";}\r",
                            "        returner=returner+\" <img src=\\\"/assets/flags/16/\"+myFlagCode2+\".png\\\"> \";\r",
                            "    });}catch(err){returner=returner+\" <img src=\\\"/assets/flags/16/\"+\"_unknown\"+\".png\\\"> \";}\r",
                            "        return(returner);\r",
                            "    } else {\r",
                            "        try{var myFlagCode=Ext.getStore(\"AllLanguagesStore3\").query(\"locale\",record.get(\"locale\"),false,false,true).items[0].get(\"flagCode\");}\r",
                            "        catch(err){var myFlagCode=\"_unknown\";}\r",
                            "        var returner =\" <img src=\\\"/assets/flags/16/\"+myFlagCode+\".png\\\"> \";\r",
                            "        if(!Ext.isEmpty(value)){\r",
                            "            Ext.Object.each(value, function(key, value, myself) {\r",
                            "                if (key!=record.get(\"locale\")){\r",
                            "                    try{var myFlagCode2=Ext.getStore(\"AllLanguagesStore3\").query(\"locale\",key,false,false,true).items[0].get(\"flagCode\");}\r",
                            "                    catch(err){var myFlagCode2=\"_unknown\";}\r",
                            "                    if (myFlagCode2!=\"_unknown\"){\r",
                            "                    returner=returner+\" <img src=\\\"/assets/flags/16/\"+myFlagCode2+\".png\\\"> \";\r",
                            "                    }\r",
                            "                }\r",
                            "            });\r",
                            "        }\r",
                            "        return(returner);\r",
                            "    }"
                        ]
                    },
                    "designerId": "1e894fde-b7f3-4049-857b-660abc498cd9"
                },
                {
                    "type": "basiceventbinding",
                    "reference": {
                        "name": "listeners",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "fn": "onGridcolumnAfterRender",
                        "implHandler": [
                            "if (Ext.getStore(\"AllLanguagesStore3\").getRange().length==1){\r",
                            "    component.hide();\r",
                            "}"
                        ],
                        "name": "afterrender",
                        "scope": "me"
                    },
                    "designerId": "027222d6-d5e4-48bf-bf1e-4e7e80156e43"
                }
            ]
        },
        {
            "type": "Ext.grid.column.Column",
            "reference": {
                "name": "columns",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "localiserId": "authorColumn",
                "dataIndex": "author",
                "text": "Auteur"
            },
            "designerId": "a977c6e5-7685-4496-bb47-141c7708ba45",
            "customConfigs": [
                {
                    "group": "(Custom Properties)",
                    "name": "localiserId",
                    "type": "string"
                }
            ]
        },
        {
            "type": "Ext.grid.column.Date",
            "reference": {
                "name": "columns",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "localiserId": "createDateColumn",
                "dataIndex": "lastUpdateTime",
                "text": "Date de cr√©ation",
                "format": "d-m-Y"
            },
            "designerId": "020e5c52-64e1-4ab8-bb41-d0dadc1d826f",
            "customConfigs": [
                {
                    "group": "(Custom Properties)",
                    "name": "localiserId",
                    "type": "string"
                }
            ]
        },
        {
            "type": "processcfgfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "processDAMMainView",
                "designer|params": [
                    "config"
                ],
                "implHandler": [
                    "config.multiSelect= true;\r",
                    "config.viewConfig= {\r",
                    "    stripeRows: true,\r",
                    "    chunker: Ext.view.TableChunker,\r",
                    "    plugins: [\r",
                    "    Ext.create('Ext.grid.plugin.DragDrop', {\r",
                    "        ddGroup: 'DirectoriesDD',\r",
                    "        enableDrop:false\r",
                    "    })\r",
                    "    ]\r",
                    "\r",
                    "};\r",
                    "\r",
                    "config.plugins=[Ext.create('Ext.ux.grid.plugin.DragSelector')];\r",
                    "\r",
                    "config.features= [Ext.create('Ext.ux.grid.feature.Tileview', {\r",
                    "    viewMode: 'tileIcons',\r",
                    "    getAdditionalData: function(data, index, record, orig)\r",
                    "    {\r",
                    "\r",
                    "\r",
                    "\r",
                    "        generateThumbnail = function()\r",
                    "        {\r",
                    "            return \"dam/get-thumbnail?id=\"+record.get(\"id\")+\"&version=\"+record.get(\"version\");\r",
                    "        };\r",
                    "\r",
                    "        if(this.viewMode)\r",
                    "        {   \r",
                    "            var properName=record.get(\"text\");\r",
                    "            if (record.get(\"readOnly\")){properName=\"<i style=\\\"color:#777;\\\">\"+properName+\"</i>\";}\r",
                    "            return {\r",
                    "                thumbnails: generateThumbnail(),\r",
                    "                author:record.get(\"author\"),\r",
                    "                date: Ext.Date.format(record.get(\"lastUpdateTime\"), Ext.Date.defaultFormat),\r",
                    "                filename:properName,\r",
                    "                fileSize:Ext.util.Format.fileSize(record.get(\"fileSize\"))\r",
                    "            };\r",
                    "        }\r",
                    "        return {};\r",
                    "    },\r",
                    "    viewTpls:\r",
                    "    {\r",
                    "        mediumIcons: [\r",
                    "        '<td class=\"{cls} ux-explorerview-medium-icon-row\">',\r",
                    "        '<table class=\"x-grid-row-table\">',\r",
                    "        '<tbody>',\r",
                    "        '<tr>',\r",
                    "        '<td class=\"x-grid-col x-grid-cell ux-explorerview-icon\" style=\"background: transparent;\">',\r",
                    "        '<img src=\\\"{thumbnails}\\\" height=\\\"100\\\" width=\\\"100\\\">',\t\t\t\r",
                    "        '</td>',\r",
                    "        '</tr>',\r",
                    "        '<tr>',\r",
                    "        '<td class=\"x-grid-col x-grid-cell\">',\r",
                    "        '<div class=\"x-grid-cell-inner\" unselectable=\"on\">{filename}</div>',\r",
                    "        '</td>',\r",
                    "        '</tr>',\r",
                    "        '</tbody>',\r",
                    "        '</table>',\r",
                    "        '</td>'].join(''),\r",
                    "\r",
                    "        tileIcons: [\r",
                    "        '<td class=\"{cls} ux-explorerview-detailed-icon-row\">',\r",
                    "        '<table class=\"x-grid-row-table\">',\r",
                    "        '<tbody>',\r",
                    "        '<tr>',\r",
                    "        '<td class=\"x-grid-col x-grid-cell ux-explorerview-icon\" style=\"background: transparent;\">',\r",
                    "        '<img src=\\\"{thumbnails}\\\" height=\\\"50\\\" width=\\\"50\\\">',\t\t\t\r",
                    "        '</td>',\r",
                    "\r",
                    "        '<td class=\"x-grid-col x-grid-cell\">',\r",
                    "        '<div class=\"x-grid-cell-inner\" unselectable=\"on\">{filename}<br><span>{fileSize}<br>{author}<br>{date}</span></div>',\r",
                    "        '</td>',\r",
                    "        '</tr>',\r",
                    "        '</tbody>',\r",
                    "        '</table>',\r",
                    "        '</td>'].join('')\r",
                    "\r",
                    "    }\r",
                    "}),\r",
                    "{\r",
                    "    ftype: 'grouping',\r",
                    "    groupHeaderTpl: '{name} ({rows.length} Item{[values.rows.length > 1 ? \"s\" : \"\"]})',\r",
                    "    disabled: false\r",
                    "}];\r",
                    "config.tbar= [{},'->', {\r",
                    "xtype: 'switchbuttonsegment',\r",
                    "activeItem: 1,\r",
                    "scope: this,\r",
                    "items: [{\r",
                    "    tooltip: 'Details',\r",
                    "    viewMode: 'default',\r",
                    "    iconCls: 'icon-default'\r",
                    "}, {\r",
                    "    tooltip: 'Tiles',\r",
                    "    viewMode: 'tileIcons',\r",
                    "    iconCls: 'icon-tile'\r",
                    "}, {\r",
                    "    tooltip: 'Icons',\r",
                    "    viewMode: 'mediumIcons',\r",
                    "    iconCls: 'icon-medium'\r",
                    "}],\r",
                    "listeners: {\r",
                    "    change: function(btn, item)\r",
                    "    {\r",
                    "        btn.up().up().up().features[0].setView(btn.viewMode);\t\t\r",
                    "    },\r",
                    "    scope: this\r",
                    "}\r",
                    "}\r",
                    "];\r",
                    "return(config);"
                ]
            },
            "designerId": "e23a61b1-96f1-4e90-a90b-f24742116e7a"
        }
    ]
}