{
    "type": "Ext.form.field.TextArea",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "height": null,
        "minHeight": null,
        "designer|userClassName": "CKEField",
        "designer|userAlias": "CKEField",
        "fieldLabel": "Label"
    },
    "designerId": "d307504b-480a-4d03-adf2-dc2c18432b4f",
    "cn": [
        {
            "type": "basiceventbinding",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onTextareafieldAfterRender",
                "implHandler": [
                    "var myTBConfig=[\r",
                    "{ name: 'document', groups: [ 'mode', 'document', 'doctools' ], items: [ 'Source', '-', 'NewPage', 'Preview', 'Print', '-', 'Templates' ] },\r",
                    "{ name: 'clipboard', groups: [ 'clipboard', 'undo' ], items: [ 'Cut', 'Copy', 'Paste', 'PasteText', 'PasteFromWord', '-', 'Undo', 'Redo' ] },\r",
                    "{ name: 'editing', groups: [ 'find', 'selection', 'spellchecker' ], items: [ 'Find', 'Replace', '-', 'SelectAll', '-', 'Scayt' ] },\r",
                    "\r",
                    "'/',\r",
                    "{ name: 'basicstyles', groups: [ 'basicstyles', 'cleanup' ], items: [ 'Bold', 'Italic', 'Underline', 'Strike', 'Subscript', 'Superscript', '-', 'RemoveFormat' ] },\r",
                    "{ name: 'paragraph', groups: [ 'list', 'indent', 'blocks', 'align', 'bidi' ], items: [ 'NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 'Blockquote', '-', 'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock']},\r",
                    "\r",
                    "'/',\r",
                    "{ name: 'styles', items: [ 'Styles', 'Format', 'Font', 'FontSize' ] },\r",
                    "{ name: 'colors', items: [ 'TextColor', '-','BGColor' ] },\r",
                    "{ name: 'tools', items: [ 'Maximize', '-','ShowBlocks' ] },\r",
                    "{ name: 'links', items: [ 'Link', \"Rubedolink\", 'Unlink','-','Anchor' ] },\r",
                    "'/',\r",
                    "{ name: 'insert', items: [ 'Image',  '-', 'Table', 'HorizontalRule', 'SpecialChar', 'PageBreak', 'Iframe' ] }\r",
                    "];\r",
                    "if (component.CKETBConfig==\"Standard\"){\r",
                    "    myTBConfig=[\r",
                    "    { name: 'basicstyles', groups: [ 'basicstyles', 'cleanup' ], items: [ 'Bold', 'Italic', 'Underline', 'Strike', 'Subscript', 'Superscript', '-', 'RemoveFormat' ] },\r",
                    "    { name: 'paragraph', groups: [ 'list', 'indent', 'blocks', 'align', 'bidi' ], items: [ 'NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 'Blockquote', '-', 'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock']},\r",
                    "    { name: 'colors', items: [ 'TextColor', '-','BGColor' ] },'/',\r",
                    "    { name: 'styles', items: [ 'Styles', 'Format', 'Font', 'FontSize' ] }, \r",
                    "    { name: 'insert', items: [ 'Image',  '-', 'Table', 'SpecialChar', 'PageBreak', 'Link', \"Rubedolink\", 'Unlink'] },\r",
                    "    { name: 'managing', items: [ 'Maximize','-','Undo', 'Redo'  ] }\r",
                    "    ];\r",
                    "} else if (component.CKETBConfig==\"Basic\"){\r",
                    "    myTBConfig=[\r",
                    "    { name: 'basicstyles', groups: [ 'basicstyles', 'cleanup' ], items: [ 'Bold', 'Italic', 'Underline','Strike', '-', 'RemoveFormat' ] },\r",
                    "    { name: 'paragraph', groups: [ 'list', 'indent', 'blocks', 'align', 'bidi' ], items: [ 'NumberedList', 'BulletedList', '-',  'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock','-','Image']},\r",
                    "    { name: 'colors', items: [ 'TextColor', '-','BGColor' ] },\r",
                    "    { name: 'styles', items: [ 'Font', 'FontSize' ] }\r",
                    "\r",
                    "\r",
                    "    ];\r",
                    "}\r",
                    "\r",
                    "var targetId = component.getInputId();\r",
                    "component.editor= CKEDITOR.replace(targetId,{toolbar:  myTBConfig, extraPlugins:'rubedolink',resize_enabled:false, filebrowserImageBrowseUrl:\"ext-finder?type=Image\", filebrowserImageUploadUrl:\"ext-finder?type=Image\"});\r",
                    "component.editor.on('instanceReady', function(){\r",
                    "    component.up().doLayout();\r",
                    "    component.editor.document.getDocumentElement().on('click', function(){\r",
                    "        component.getEl().dom.click();\r",
                    "    });\r",
                    "    component.editor.on('blur', function(){\r",
                    "        component.validate();    \r",
                    "    });\r",
                    "    component.editor.on('afterSetData', function(){\r",
                    "        component.validate();    \r",
                    "    });\r",
                    "});\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "/* old config \r",
                    "[\r",
                    "{ name: 'clipboard', groups: [ 'clipboard', 'undo' ], items: [ 'Cut', 'Copy', 'Paste', 'PasteText', 'PasteFromWord', '-', 'Undo', 'Redo','Source' ] },\r",
                    "{ name: 'links', items: [ 'Link', 'Unlink','-', 'Anchor' ] },\r",
                    "{ name: 'insert', items: [ 'Image','-', 'Table', 'HorizontalRule', 'SpecialChar', 'PageBreak', 'Iframe' ] },\r",
                    "'/',\r",
                    "{ name: 'basicstyles', groups: [ 'basicstyles', 'cleanup' ], items: [ 'Bold', 'Italic', 'Underline', 'Strike', 'Subscript', 'Superscript', '-', 'RemoveFormat' ] },\r",
                    "{ name: 'paragraph', groups: [ 'list', 'indent', 'blocks', 'align', 'bidi' ], items: [ 'NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 'Blockquote', '-', 'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock']},\r",
                    "'/',\r",
                    "{ name: 'styles', items: [ 'Styles', 'Format', 'Font', 'FontSize' ] },\r",
                    "{ name: 'colors', items: [ 'TextColor','-', 'BGColor' ] },\r",
                    "{ name: 'tools', items: [ 'Maximize','-', 'ShowBlocks' ] },\r",
                    "{ name: 'editing', groups: [ 'find', 'selection', 'spellchecker' ], items: [ 'Find', 'Replace', '-', 'SpellChecker', 'Scayt' ] }\r",
                    "]\r",
                    "*/"
                ],
                "name": "afterrender",
                "scope": "me"
            },
            "designerId": "0d473cf7-8a08-442c-a253-4fe63b539c25"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "getValue",
                "implHandler": [
                    "return(this.getRawValue());"
                ]
            },
            "designerId": "8596bf7d-caf3-459d-8f8f-939c5177cd73"
        },
        {
            "type": "basiceventbinding",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onTextareafieldBeforeDestroy",
                "implHandler": [
                    "try {component.editor.destroy();} catch(err) {\r",
                    "    console.log(\"cke destroy anomaly\");\r",
                    "}"
                ],
                "name": "beforedestroy",
                "scope": "me"
            },
            "designerId": "b57e2716-9740-4f9d-b0ec-144e41eb45ec"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "setValue",
                "designer|params": [
                    "value"
                ],
                "implHandler": [
                    "var me=this;\r",
                    "if (Ext.isDefined(me.editor)) {\r",
                    "    me.editor.setData(value);\r",
                    "}"
                ]
            },
            "designerId": "0e06946f-efae-4aa6-83d8-7e108db4e464"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "getRawValue",
                "implHandler": [
                    "var me=this;\r",
                    "if (Ext.isDefined(me.editor)) {    \r",
                    "    return(me.editor.getData());\r",
                    "}"
                ]
            },
            "designerId": "611d8653-5926-4310-8fb5-0d14257c441a"
        },
        {
            "type": "basiceventbinding",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onTextareafieldErrorChange",
                "implHandler": [
                    "var me = this;\r",
                    "if (!Ext.isEmpty(error)){\r",
                    "    if (!me.editor.container.hasClass(\"ckefail\")){\r",
                    "        me.editor.container.addClass(\"ckefail\");\r",
                    "    }\r",
                    "} else {\r",
                    "    if (me.editor.container.hasClass(\"ckefail\")){\r",
                    "        me.editor.container.removeClass(\"ckefail\");\r",
                    "    }\r",
                    "\r",
                    "}"
                ],
                "name": "errorchange",
                "scope": "me"
            },
            "designerId": "469df81b-6f4f-4b44-aea4-29db38e871a0"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "setReadOnly",
                "designer|params": [
                    "readOnly"
                ],
                "implHandler": [
                    "try {\r",
                    "    var me = this,\r",
                    "    inputEl = me.inputEl;\r",
                    "    readOnly = !!readOnly;\r",
                    "    me[readOnly ? 'addCls' : 'removeCls'](me.readOnlyCls);\r",
                    "    me.readOnly = readOnly;\r",
                    "    if (inputEl) {\r",
                    "        inputEl.dom.readOnly = readOnly;\r",
                    "    } else if (me.rendering) {\r",
                    "        me.setReadOnlyOnBoxReady = true;\r",
                    "    }\r",
                    "    me.fireEvent('writeablechange', me, readOnly);\r",
                    "    me.editor.setReadOnly(readOnly);\r",
                    "} catch (err){\r",
                    "\tconsole.log(\"ckeditor readonly anomaly\");\r",
                    "}"
                ]
            },
            "designerId": "def3f505-9766-4202-a65e-6c79ac7a43f7"
        }
    ]
}