{
    "type": "Ext.tree.Panel",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "id": "TermesTaxonomieTree",
        "designer|userClassName": "TermesTaxonomieTree",
        "designer|userAlias": "TermesTaxonomieTree",
        "title": "",
        "forceFit": false,
        "store": null,
        "useArrows": true
    },
    "designerId": "a78850b9-8d6a-42a3-b37f-1a00b54aba85",
    "cn": [
        {
            "type": "Ext.tree.View",
            "reference": {
                "name": "viewConfig",
                "type": "object"
            },
            "codeClass": null,
            "userConfig": {
                "autoScroll": true,
                "disableSelection": false,
                "itemCls": null
            },
            "designerId": "6540d105-d54e-4bf2-9a22-4fe4d7d85df4",
            "cn": [
                {
                    "type": "Ext.tree.plugin.TreeViewDragDrop",
                    "reference": {
                        "name": "plugins",
                        "type": "array"
                    },
                    "codeClass": "Ext.tree.plugin.TreeViewDragDrop",
                    "userConfig": {
                        "pluginId": "termsDrager",
                        "ddGroup": "TaxoDD",
                        "dragText": "{0} terme{1} séléctionné{1}"
                    },
                    "designerId": "c30057c1-7987-483f-bff7-cba215698d02",
                    "cn": [
                        {
                            "type": "basiceventbinding",
                            "reference": {
                                "name": "listeners",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "fn": "onTreedragdroppluginBeforeDrop",
                                "implHandler": [
                                    "if (!ACL.interfaceRights[\"write.ui.taxonomyTerms\"]){\r",
                                    "    return(false);\r",
                                    "}\r",
                                    "Ext.getCmp(\"TermesTaxonomieTree\").getStore().suspendAutoSync();\r",
                                    "var movedOne=data.records[0];\r",
                                    "var interm=0;\r",
                                    "var targeted=overModel.get(\"orderValue\");\r",
                                    "\r",
                                    "if (dropPosition==\"before\"){\r",
                                    "    if ((movedOne.parentNode!=overModel.parentNode)&&(movedOne.parentNode.childNodes.length==1)){\r",
                                    "        movedOne.parentNode.set(\"expandable\", false);\r",
                                    "    }\r",
                                    "    if (!Ext.isEmpty(overModel.previousSibling)){interm=overModel.previousSibling.get(\"orderValue\");}\r",
                                    "    movedOne.set(\"orderValue\", (interm+targeted)/2);\r",
                                    "} else if (dropPosition==\"after\"){\r",
                                    "    if ((movedOne.parentNode!=overModel.parentNode)&&(movedOne.parentNode.childNodes.length==1)){\r",
                                    "        movedOne.parentNode.set(\"expandable\", false);\r",
                                    "    }\r",
                                    "    if (!Ext.isEmpty(overModel.nextSibling)){interm=overModel.nextSibling.get(\"orderValue\");}\r",
                                    "    else{interm=10000;}\r",
                                    "    movedOne.set(\"orderValue\", (interm+targeted)/2);\r",
                                    "} else if (dropPosition==\"append\"){\r",
                                    "    if ((movedOne.parentNode.childNodes.length==1)&&(movedOne.parentNode!=overModel)){\r",
                                    "        movedOne.parentNode.set(\"expandable\", false);\r",
                                    "    }\r",
                                    "\r",
                                    "    if (overModel.hasChildNodes()){\r",
                                    "        movedOne.set(\"orderValue\", overModel.lastChild.get(\"orderValue\")+100);\r",
                                    "    } else {\r",
                                    "        movedOne.set(\"orderValue\", 100);\r",
                                    "        overModel.set(\"expandable\", true);\r",
                                    "    }\r",
                                    "}"
                                ],
                                "name": "beforedrop",
                                "scope": "me"
                            },
                            "designerId": "8c3b19f9-6624-432b-8e65-7e0ca23cc88a"
                        },
                        {
                            "type": "basiceventbinding",
                            "reference": {
                                "name": "listeners",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "fn": "onTreedragdroppluginDrop",
                                "implHandler": [
                                    "var task= new Ext.util.DelayedTask(function(){\r",
                                    "    Ext.getCmp(\"TermesTaxonomieTree\").getStore().resumeAutoSync();\r",
                                    "    Ext.getCmp(\"TermesTaxonomieTree\").getStore().sync();\r",
                                    "});\r",
                                    "task.delay(200);"
                                ],
                                "name": "drop",
                                "scope": "me"
                            },
                            "designerId": "8a5d9f92-8515-4ee6-a425-a9e0b8d82ef3"
                        }
                    ]
                }
            ]
        },
        {
            "type": "Ext.tree.Column",
            "reference": {
                "name": "columns",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "localiserId": "termsCol",
                "dataIndex": "text",
                "text": "Termes",
                "flex": 1
            },
            "designerId": "fb2e8d1b-8817-43dc-b288-b5a97300ec7c",
            "customConfigs": [
                {
                    "group": "(Custom Properties)",
                    "name": "localiserId",
                    "type": "string"
                }
            ],
            "cn": [
                {
                    "type": "fixedfunction",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "fn": "renderer",
                        "designer|params": [
                            "value",
                            "metaData",
                            "record",
                            "rowIndex",
                            "colIndex",
                            "store",
                            "view"
                        ],
                        "implHandler": [
                            "if (record.isRoot()){\r",
                            "    return(\"<i style=\\\"color:#777;\\\">\"+Rubedo.RubedoAutomatedElementsLoc.rootText+\"</i>\");\r",
                            "}\r",
                            "else if ((record.get(\"readOnly\"))||(!ACL.interfaceRights[\"write.ui.taxonomyTerms\"])) {\r",
                            "    record.data.allowDrop=false;\r",
                            "    record.data.allowDrag=false;\r",
                            "    return(\"<i style=\\\"color:#777;\\\">\"+value+\"</i>\");\r",
                            "\r",
                            "} else {\r",
                            "    \r",
                            "    return(value);\r",
                            "}"
                        ]
                    },
                    "designerId": "73583cbc-947c-4cf6-8c42-0fd757af6dd0"
                }
            ]
        },
        {
            "type": "Ext.grid.column.Column",
            "reference": {
                "name": "columns",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "dataIndex": "i18n",
                "text": "Languages",
                "flex": 0.5
            },
            "designerId": "b7d2d51c-a8c4-4f88-bb9e-98812049407c",
            "cn": [
                {
                    "type": "fixedfunction",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "fn": "renderer",
                        "designer|params": [
                            "value",
                            "metaData",
                            "record",
                            "rowIndex",
                            "colIndex",
                            "store",
                            "view"
                        ],
                        "implHandler": [
                            "if(record.isRoot()){return(\"\");}\r",
                            "try{var myFlagCode=Ext.getStore(\"AllLanguagesStore3\").query(\"locale\",record.get(\"locale\"),false,false,true).items[0].get(\"flagCode\");}\r",
                            "catch(err){var myFlagCode=\"_unknown\";}\r",
                            "var returner =\" <img src=\\\"/assets/flags/16/\"+myFlagCode+\".png\\\"> \";\r",
                            "if(!Ext.isEmpty(value)){\r",
                            "    Ext.Object.each(value, function(key, value, myself) {\r",
                            "        if (key!=record.get(\"locale\")){\r",
                            "    \ttry{var myFlagCode2=Ext.getStore(\"AllLanguagesStore3\").query(\"locale\",key,false,false,true).items[0].get(\"flagCode\");}\r",
                            "\t\tcatch(err){var myFlagCode2=\"_unknown\";}\r",
                            "        returner=returner+\" <img src=\\\"/assets/flags/16/\"+myFlagCode2+\".png\\\"> \";\r",
                            "        }\r",
                            "    });\r",
                            "}\r",
                            "return(returner);"
                        ]
                    },
                    "designerId": "f08e9012-8df0-4a98-a911-b02e38e035a6"
                }
            ]
        },
        {
            "type": "Ext.grid.column.Column",
            "reference": {
                "name": "columns",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "usedLanguage": "en",
                "id": "specialLangTermColumn",
                "dataIndex": "decoyField",
                "text": "English",
                "flex": 1
            },
            "designerId": "3424dae7-4b88-420b-9c2c-1bef0e7e0f51",
            "customConfigs": [
                {
                    "group": "(Custom Properties)",
                    "name": "usedLanguage",
                    "type": "string"
                }
            ],
            "cn": [
                {
                    "type": "fixedfunction",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "fn": "renderer",
                        "designer|params": [
                            "value",
                            "metaData",
                            "record",
                            "rowIndex",
                            "colIndex",
                            "store",
                            "view"
                        ],
                        "implHandler": [
                            "var lang=Ext.getCmp(\"specialLangTermColumn\").usedLanguage;\r",
                            "if (record.isRoot()) {return(null);}\r",
                            "else if (!Ext.isEmpty(record.get(\"i18n\")[lang])){\r",
                            "return(record.get(\"i18n\")[lang].text);\r",
                            "} else {return(\"\");}"
                        ]
                    },
                    "designerId": "ad8e22ce-2552-4e99-9833-b8020ad21876"
                },
                {
                    "type": "Ext.form.field.Text",
                    "reference": {
                        "name": "editor",
                        "type": "object"
                    },
                    "codeClass": null,
                    "designerId": "2aff21be-3be8-4f4e-82f0-82bf635527fb"
                }
            ]
        },
        {
            "type": "basiceventbinding",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onTermesTaxonomieTreeItemClick",
                "implHandler": [
                    "var lang=Ext.getCmp(\"specialLangTermColumn\").usedLanguage;\r",
                    "if (Ext.isEmpty(record.get(\"i18n\")[lang])){\r",
                    "    record.set(\"decoyField\",\"\");\r",
                    "} else {\r",
                    "    record.set(\"decoyField\",record.get(\"i18n\")[lang].text);\r",
                    "}"
                ],
                "name": "itemclick",
                "scope": "me"
            },
            "designerId": "732569e4-a773-4994-868a-8a0e5811e4ff"
        }
    ]
}