{
    "type": "Ext.form.field.Hidden",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "allowedCT": null,
        "designer|userAlias": "DCEField",
        "designer|userClassName": "DCEField",
        "fieldLabel": "Label",
        "labelSeparator": " "
    },
    "designerId": "d8f7ec5e-c852-435a-bb17-6c19e843c898",
    "customConfigs": [
        {
            "group": "(Custom Properties)",
            "name": "allowedCT",
            "type": "string"
        }
    ],
    "cn": [
        {
            "type": "basiceventbinding",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onHiddenfieldRender",
                "implHandler": [
                    "var myComponent = Ext.widget(\"DCEFieldComponent\");\r",
                    "myComponent.setFieldLabel(component.fieldLabel+\" \");\r",
                    "component.on(\"change\", function(a,newValue){\r",
                    "    if (Ext.isEmpty(newValue)){\r",
                    "        myComponent.getComponent(\"addBtn\").show();\r",
                    "        myComponent.getComponent(\"chooseBtn\").show();\r",
                    "        myComponent.getComponent(\"editBtn\").hide();\r",
                    "        myComponent.getComponent(\"removeBtn\").hide();\r",
                    "        myComponent.getComponent(\"contentTitleBtn\").hide();\r",
                    "    } else {\r",
                    "        myComponent.getComponent(\"addBtn\").hide();\r",
                    "        myComponent.getComponent(\"chooseBtn\").show();\r",
                    "        myComponent.getComponent(\"editBtn\").show();\r",
                    "        myComponent.getComponent(\"removeBtn\").show();\r",
                    "        Ext.Ajax.request({\r",
                    "            url: 'contents/find-one',\r",
                    "            method:'GET',\r",
                    "            params: {\r",
                    "                id: newValue\r",
                    "            },\r",
                    "            success: function(response){\r",
                    "                var answer = Ext.JSON.decode(response.responseText);\r",
                    "                myComponent.getComponent(\"contentTitleBtn\").setText(answer.data.text);\r",
                    "                myComponent.getComponent(\"contentTitleBtn\").setTooltip(answer.data.text);\r",
                    "                myComponent.getComponent(\"contentTitleBtn\").show();\r",
                    "            },\r",
                    "            failure:function(){\r",
                    "                console.log(\"failed to get content title\");\r",
                    "            }\r",
                    "        });\r",
                    "\r",
                    "\r",
                    "\r",
                    "    }\r",
                    "    if ((component.chooseOnly)||(Ext.isEmpty(component.allowedCT))){\r",
                    "        myComponent.getComponent(\"addBtn\").hide();\r",
                    "    }\r",
                    "    if (component.addOnly){\r",
                    "        myComponent.getComponent(\"chooseBtn\").hide();\r",
                    "    }\r",
                    "    if (component.noEdit){\r",
                    "        myComponent.getComponent(\"editBtn\").hide();\r",
                    "    }\r",
                    "\r",
                    "});\r",
                    "\r",
                    "myComponent.on(\"afterrender\",function(){\r",
                    "    myComponent.getEl().on(\"click\",function(){\r",
                    "\r",
                    "        component.getEl().dom.click();\r",
                    "    });\r",
                    "});\r",
                    "myComponent.getComponent(\"removeBtn\").on(\"click\", function(){\r",
                    "    component.setValue(null);\r",
                    "});\r",
                    "myComponent.getComponent(\"addBtn\").on(\"click\", function(){\r",
                    "\r",
                    "    Rubedo.controller.ContributionContenusController.prototype.specialContentCreate(component.allowedCT, component.getId());\r",
                    "\r",
                    "});\r",
                    "myComponent.getComponent(\"chooseBtn\").on(\"click\", function(){\r",
                    "    var delay = 10;\r",
                    "    var prev = Ext.getCmp(\"searchResultsWindow\");\r",
                    "    if (!Ext.isEmpty(prev)){\r",
                    "        prev.close();\r",
                    "        delay=400;\r",
                    "    }\r",
                    "    var task = new Ext.util.DelayedTask(function(){\r",
                    "    var companion = Ext.widget(\"searchResultsWindow\");\r",
                    "    companion.targetId=component.getId();\r",
                    "    companion.DCEFMode=true;\r",
                    "    companion.allowedCT=component.allowedCT;\r",
                    "    companion.show();\r",
                    "    });\r",
                    "    task.delay(delay);\r",
                    "});\r",
                    "myComponent.getComponent(\"editBtn\").on(\"click\", function(){\r",
                    "    Rubedo.controller.ContributionContenusController.prototype.unitaryContentEdit(component.getValue(), !Ext.isEmpty(component.allowedCT), component.getId());\r",
                    "});\r",
                    "component.up().add(myComponent);\r",
                    "component.fireEvent(\"change\",component, component.getValue());"
                ],
                "name": "render",
                "scope": "me"
            },
            "name": "onHiddenfieldRender",
            "designerId": "24204efa-0256-46c8-8667-2d3936141ed9"
        }
    ]
}