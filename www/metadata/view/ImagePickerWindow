{
    "type": "window",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "ImagePickerWindow",
        "designer|userAlias": "ImagePickerWindow",
        "height": 406,
        "id": "ImagePickerWindow",
        "width": 600,
        "layout": "fit",
        "title": "Choix DAM",
        "constrainHeader": true,
        "maximizable": null,
        "modal": true
    },
    "id": "ExtBox1-ext-gen30568",
    "designerId": "529b2508-9046-4453-930b-c1aa11abce73",
    "cn": [
        {
            "type": "basiceventbinding",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onImagePickerWindowRender",
                "fn": "onImagePickerWindowRender",
                "implHandler": [
                    "Ext.getStore(\"DAMPickerStore\").clearFilter(true);\r",
                    "var allowedTypes=Ext.getCmp(abstractcomponent.targetField).allowedDAMTypes;\r",
                    "var columnsOver= [\r",
                    "                {\r",
                    "                    xtype: 'gridcolumn',\r",
                    "                    filter: true,\r",
                    "                    dataIndex: 'title',\r",
                    "                    text: 'Titre'\r",
                    "                },\r",
                    "                {\r",
                    "                    xtype: 'gridcolumn',\r",
                    "                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {\r",
                    "                        return(value.fullName);\r",
                    "                    },\r",
                    "                    dataIndex: 'createUser',\r",
                    "                    text: 'Auteur'\r",
                    "                },\r",
                    "                {\r",
                    "                    xtype: 'datecolumn',\r",
                    "                    dataIndex: 'createTime',\r",
                    "                    text: 'Date de cr√©ation',\r",
                    "                    format: 'd-m-Y'\r",
                    "                }\r",
                    "            ];\r",
                    "if (Ext.isEmpty(allowedTypes)){\r",
                    "    delete Ext.getStore(\"DAMPickerStore\").getProxy().extraParams.tFilter;\r",
                    "    Ext.getStore(\"DAMPickerStore\").load();    \r",
                    "}else if (allowedTypes.length==1){\r",
                    "    Ext.getStore(\"DAMPickerStore\").getProxy().extraParams.tFilter=\"[{\\\"property\\\":\\\"typeId\\\",\\\"value\\\":\\\"\"+allowedTypes[0]+\"\\\"}]\";\r",
                    "    Ext.getStore(\"DAMPickerStore\").load();\r",
                    "} else {\r",
                    "    Ext.getStore(\"MediaTypesFORDAMPicker\").getProxy().extraParams.filter=\"[{\\\"property\\\":\\\"id\\\",\\\"operator\\\":\\\"$in\\\",\\\"value\\\":\"+Ext.JSON.encode(allowedTypes)+\"}]\";\r",
                    "    Ext.getStore(\"MediaTypesFORDAMPicker\").load();\r",
                    "    columnsOver.push({\r",
                    "                    xtype:'gridcolumn',\r",
                    "                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {\r",
                    "                        if (Ext.isEmpty(Ext.getStore(\"MediaTypesFORDAMPicker\").findRecord(\"id\",value))) {\r",
                    "                            return(value);\r",
                    "                        } else {\r",
                    "                            return(Ext.getStore(\"MediaTypesFORDAMPicker\").findRecord(\"id\",value).get(\"type\"));\r",
                    "                        }\r",
                    "                    },\r",
                    "                    filter: {\r",
                    "                        type: 'combo',\r",
                    "                        valueField: 'id',\r",
                    "                        displayField: 'type',\r",
                    "                        store: 'MediaTypesFORDAMPicker'\r",
                    "                    },\r",
                    "                    dataIndex: 'typeId',\r",
                    "    \r",
                    "                    text: 'Type'\r",
                    "                });\r",
                    "    \r",
                    "    Ext.getStore(\"DAMPickerStore\").getProxy().extraParams.tFilter=\"[{\\\"property\\\":\\\"typeId\\\",\\\"operator\\\":\\\"$in\\\",\\\"value\\\":\"+Ext.JSON.encode(allowedTypes)+\"}]\";\r",
                    "    Ext.getStore(\"DAMPickerStore\").load();\r",
                    "}\r",
                    "var DAMPicker = Ext.widget(\"DAMMainView\", {id:\"DAMPickerView\", store:Ext.getStore(\"DAMPickerStore\"),columns:columnsOver, multiSelect:false, plugins:[\r",
                    "        Ext.create('Ext.ux.grid.FilterBar', {renderHidden: false, showShowHideButton: true,showClearAllButton: true})\r",
                    "        \r",
                    "    ], features: [Ext.create('Ext.ux.grid.feature.Tileview', {\r",
                    "            viewMode: 'tileIcons',\r",
                    "\t\t\tgetAdditionalData: function(data, index, record, orig)\r",
                    "\t\t\t{\r",
                    "\t\t\t\t\r",
                    "\t            \r",
                    "\t            \r",
                    "\t            generateThumbnail = function()\r",
                    "\t            {\r",
                    "\t                return \"dam/get-thumbnail?id=\"+record.get(\"id\");\r",
                    "\t            };\r",
                    "   \r",
                    "\t\t\t\tif(this.viewMode)\r",
                    "\t\t\t\t{\r",
                    "\t\t\t\t\treturn {\r",
                    "\t\t\t\t\t\tthumbnails: generateThumbnail(),\r",
                    "\t\t\t\t\t\tauthor:record.get(\"createUser\").fullName,\r",
                    "                        date: Ext.Date.format(record.get(\"createTime\"), 'd-m-Y'),\r",
                    "                        filename:record.get(\"title\")\r",
                    "\t\t\t\t\t};\r",
                    "\t\t\t\t}\r",
                    "\t\t\t\treturn {};\r",
                    "\t\t\t},\r",
                    "\t\t\tviewTpls:\r",
                    "\t\t\t{\r",
                    "\t\t\t\t\tmediumIcons: [\r",
                    "\t\t\t\t\t\t'<td class=\"{cls} ux-explorerview-medium-icon-row\">',\r",
                    "\t\t\t\t\t\t'<table class=\"x-grid-row-table\">',\r",
                    "\t\t\t\t\t\t\t'<tbody>',\r",
                    "\t\t\t\t\t\t\t\t'<tr>',\r",
                    "\t\t\t\t\t\t\t\t\t'<td class=\"x-grid-col x-grid-cell ux-explorerview-icon\" style=\"background: transparent;\">',\r",
                    "\t\t\t\t\t\t'<img src=\\\"{thumbnails}\\\" height=\\\"100\\\" width=\\\"100\\\">',\t\t\t\r",
                    "                        '</td>',\r",
                    "\t\t\t\t\t\t\t\t'</tr>',\r",
                    "\t\t\t\t\t\t\t\t'<tr>',\r",
                    "\t\t\t\t\t\t\t\t\t'<td class=\"x-grid-col x-grid-cell\">',\r",
                    "\t\t\t\t\t\t\t\t\t\t'<div class=\"x-grid-cell-inner\" unselectable=\"on\">{filename}</div>',\r",
                    "\t\t\t\t\t\t\t\t\t'</td>',\r",
                    "\t\t\t\t\t\t\t\t'</tr>',\r",
                    "\t\t\t\t\t\t\t'</tbody>',\r",
                    "\t\t\t\t\t\t'</table>',\r",
                    "\t\t\t\t\t\t'</td>'].join(''),\r",
                    "\t\t\t\t  \r",
                    "\t\t  \t\t\ttileIcons: [\r",
                    "\t\t\t\t\t\t'<td class=\"{cls} ux-explorerview-detailed-icon-row\">',\r",
                    "\t\t\t\t\t\t'<table class=\"x-grid-row-table\">',\r",
                    "\t\t\t\t\t\t\t'<tbody>',\r",
                    "\t\t\t\t\t\t\t\t'<tr>',\r",
                    "\t\t\t\t\t\t\t\t\t'<td class=\"x-grid-col x-grid-cell ux-explorerview-icon\" style=\"background: transparent;\">',\r",
                    "\t\t\t\t\t\t'<img src=\\\"{thumbnails}\\\" height=\\\"50\\\" width=\\\"50\\\">',\t\t\t\r",
                    "                        '</td>',\r",
                    "\t\t\t\t\t\t\t\t\r",
                    "\t\t\t\t\t\t\t\t\t'<td class=\"x-grid-col x-grid-cell\">',\r",
                    "\t\t\t\t\t\t\t\t\t\t'<div class=\"x-grid-cell-inner\" unselectable=\"on\">{filename}<br><span>{author}<br>{date}</span></div>',\r",
                    "\t\t\t\t\t\t\t\t\t'</td>',\r",
                    "\t\t\t\t\t\t\t\t'</tr>',\r",
                    "\t\t\t\t\t\t\t'</tbody>',\r",
                    "\t\t\t\t\t\t'</table>',\r",
                    "\t\t\t\t\t\t'</td>'].join('')\r",
                    "\t\t\r",
                    "    \t\t}\r",
                    "        }),\r",
                    "\t\t{\r",
                    "            ftype: 'grouping',\r",
                    "            groupHeaderTpl: 'Cuisine: {name} ({rows.length} Item{[values.rows.length > 1 ? \"s\" : \"\"]})',\r",
                    "            disabled: false\r",
                    "        }],\r",
                    "    tbar: [{},'->', {\r",
                    "            xtype: 'switchbuttonsegment',\r",
                    "            activeItem: 1,\r",
                    "            scope: this,\r",
                    "            items: [{\r",
                    "                tooltip: 'Details',\r",
                    "                viewMode: 'default',\r",
                    "                iconCls: 'icon-default'\r",
                    "            }, {\r",
                    "                tooltip: 'Tiles',\r",
                    "                viewMode: 'tileIcons',\r",
                    "                iconCls: 'icon-tile'\r",
                    "            }, {\r",
                    "                tooltip: 'Icons',\r",
                    "                viewMode: 'mediumIcons',\r",
                    "                iconCls: 'icon-medium'\r",
                    "            }],\r",
                    "            listeners: {\r",
                    "                change: function(btn, item)\r",
                    "                {\r",
                    "\t\t\t\t\tbtn.up().up().up().features[0].setView(btn.viewMode);\t\t\r",
                    "                },\r",
                    "                scope: this\r",
                    "            }\r",
                    "        }\r",
                    "        ]});\r",
                    "DAMPicker.on(\"selectionchange\", function(g, s){\r",
                    "    if (Ext.isEmpty(s)){\r",
                    "        Ext.getCmp(\"imagePickerAcceptBtn\").disable();\r",
                    "    } else {\r",
                    "        Ext.getCmp(\"imagePickerAcceptBtn\").enable();\r",
                    "    }\r",
                    "});\r",
                    "\r",
                    "\r",
                    "abstractcomponent.add(DAMPicker);"
                ],
                "name": "render",
                "scope": "me"
            },
            "designerId": "c5d8bf98-04ca-4bc5-acdf-f03b207127ae"
        },
        {
            "type": "basiceventbinding",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onImagePickerWindowBeforeClose",
                "fn": "onImagePickerWindowBeforeClose",
                "implHandler": [
                    "Ext.getStore(\"DAMPickerStore\").removeAll();\r",
                    "Ext.getStore(\"DAMPickerStore\").clearFilter(true);\r",
                    "Ext.getStore(\"MediaTypesFORDAMPicker\").removeAll();"
                ],
                "name": "beforeclose",
                "scope": "me"
            },
            "designerId": "32a02590-abaf-438e-a255-dbd261bf0cf6"
        },
        {
            "type": "pagingtoolbar",
            "reference": {
                "name": "dockedItems",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "dock": "bottom",
                "designer|userClassName": "MyPagingToolbar3",
                "width": 360,
                "displayInfo": true,
                "store": "DAMPickerStore"
            },
            "designerId": "82616952-af27-4097-a217-c945fd01b259",
            "cn": [
                {
                    "type": "button",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "layout|flex": null,
                        "designer|userClassName": "MyButton206",
                        "disabled": true,
                        "id": "imagePickerAcceptBtn",
                        "iconCls": "ouiSpetit",
                        "text": "Choisir"
                    },
                    "designerId": "b5f0469a-4889-4227-a446-e1319ad527b5",
                    "cn": [
                        {
                            "type": "basiceventbinding",
                            "reference": {
                                "name": "listeners",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "designer|userClassName": "onImagePickerAcceptBtnClick",
                                "fn": "onImagePickerAcceptBtnClick",
                                "implHandler": [
                                    "var target = button.up().up().getComponent(0).getSelectionModel().getLastSelected();\r",
                                    "Ext.getCmp(button.up().up().targetField).setValue(target.get(\"id\"));\r",
                                    "button.up().up().close();"
                                ],
                                "name": "click",
                                "scope": "me"
                            },
                            "designerId": "2acb7d2d-c1a9-4fdd-a6b2-5dd3f618f6b4"
                        }
                    ]
                },
                {
                    "type": "button",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "layout|flex": null,
                        "designer|userClassName": "MyButton207",
                        "iconCls": "close",
                        "text": "Annuler"
                    },
                    "designerId": "81c29517-6564-4a65-8100-ebff5447b45a",
                    "cn": [
                        {
                            "type": "fixedfunction",
                            "reference": {
                                "name": "items",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "designer|userClassName": "handler",
                                "fn": "handler",
                                "designer|params": [
                                    "button",
                                    "event"
                                ],
                                "implHandler": [
                                    "this.up().up().close();"
                                ]
                            },
                            "designerId": "81bf382b-7076-4a7a-a8bb-bc557dbb9746"
                        }
                    ]
                }
            ]
        },
        {
            "type": "linkedinstance",
            "reference": {
                "name": "tools",
                "type": "array"
            },
            "codeClass": null,
            "designerId": "05561d8c-f690-4953-8383-9b280c060bda",
            "masterInstanceId": "ExtBox1-ext-gen2736"
        }
    ]
}