{
    "type": "Ext.window.Window",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "localiserId": "damPickerWindow",
        "height": 406,
        "id": "ImagePickerWindow",
        "width": 600,
        "designer|userClassName": "ImagePickerWindow",
        "designer|userAlias": "ImagePickerWindow",
        "layout": "fit",
        "constrainHeader": true,
        "title": "Choix DAM",
        "maximizable": null,
        "modal": true
    },
    "designerId": "529b2508-9046-4453-930b-c1aa11abce73",
    "customConfigs": [
        {
            "group": "(Custom Properties)",
            "name": "localiserId",
            "type": "string"
        }
    ],
    "cn": [
        {
            "type": "basiceventbinding",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onImagePickerWindowRender",
                "implHandler": [
                    "Ext.getStore(\"DAMPickerStore\").clearFilter(true);\r",
                    "Ext.getStore('TaxonomyForDam2').load();\r",
                    "var allowedTypes=Ext.getCmp(component.targetField).allowedDAMTypes;\r",
                    "if ((!Ext.isEmpty(allowedTypes))&&(!Ext.isArray(allowedTypes))){\r",
                    "    allowedTypes=[allowedTypes];\r",
                    "}\r",
                    "this.allowedTypes=allowedTypes;\r",
                    "var allowedFileType=Ext.getCmp(component.targetField).allowedFileType;\r",
                    "var columnsOver= [\r",
                    "    {\r",
                    "                    xtype: 'gridcolumn',\r",
                    "                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {\r",
                    "                        var link=\"dam/get-thumbnail?id=\"+record.get(\"id\")+\"&version=\"+record.get(\"version\");\r",
                    "                        return ('<img src=\\\"'+link+'\\\" height=\\\"100\\\" width=\\\"100\\\">');\r",
                    "                    },\r",
                    "                    dataIndex: 'originalFileId',\r",
                    "        width:130,\r",
                    "                    text: 'Main file'\r",
                    "                },\r",
                    "{\r",
                    "    xtype: 'gridcolumn',\r",
                    "    filter: true,\r",
                    "    dataIndex: 'title',\r",
                    "    text: 'Title'\r",
                    "},\r",
                    "    {\r",
                    "                    xtype: 'gridcolumn',\r",
                    "                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {\r",
                    "                        return(Ext.util.Format.fileSize(record.get(\"fileSize\")));\r",
                    "                    },\r",
                    "                    dataIndex: 'fileSize',\r",
                    "                    text: 'Size'\r",
                    "                },\r",
                    "{\r",
                    "    xtype: 'gridcolumn',\r",
                    "    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {\r",
                    "        return(value.fullName);\r",
                    "    },\r",
                    "    dataIndex: 'createUser',\r",
                    "    text: 'Author'\r",
                    "},\r",
                    "{\r",
                    "    xtype: 'datecolumn',\r",
                    "    dataIndex: 'createTime',\r",
                    "    text: 'Creation date',\r",
                    "    format: 'd-m-Y'\r",
                    "}\r",
                    "];\r",
                    "if (Ext.isEmpty(allowedTypes)){\r",
                    "    if (Ext.isEmpty(allowedFileType)){\r",
                    "        delete Ext.getStore(\"MediaTypesFORDAMPicker\").getProxy().extraParams.filter;\r",
                    "        Ext.getStore(\"MediaTypesFORDAMPicker\").load();\r",
                    "        columnsOver.push({\r",
                    "            xtype:'gridcolumn',\r",
                    "            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {\r",
                    "                if (Ext.isEmpty(Ext.getStore(\"MediaTypesFORDAMPicker\").findRecord(\"id\",value))) {\r",
                    "                    return(value);\r",
                    "                } else {\r",
                    "                    return(Ext.getStore(\"MediaTypesFORDAMPicker\").findRecord(\"id\",value).get(\"type\"));\r",
                    "                }\r",
                    "            },\r",
                    "            filter: {\r",
                    "                type: 'list',\r",
                    "                labelField: 'type',\r",
                    "                store: Ext.getStore('MediaTypesFORDAMPicker')\r",
                    "            },\r",
                    "            dataIndex: 'typeId',\r",
                    "\r",
                    "            text: 'Type'\r",
                    "        });\r",
                    "        delete Ext.getStore(\"DAMPickerStore\").getProxy().extraParams.tFilter;\r",
                    "        Ext.getStore(\"DAMPickerStore\").load();   \r",
                    "    } else {\r",
                    "        Ext.getStore(\"MediaTypesFORDAMPicker\").getProxy().extraParams.filter=\"[{\\\"property\\\":\\\"mainFileType\\\",\\\"value\\\":\\\"\"+allowedFileType+\"\\\"}]\";\r",
                    "        Ext.getStore(\"MediaTypesFORDAMPicker\").load();\r",
                    "        columnsOver.push({\r",
                    "            xtype:'gridcolumn',\r",
                    "            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {\r",
                    "                if (Ext.isEmpty(Ext.getStore(\"MediaTypesFORDAMPicker\").findRecord(\"id\",value))) {\r",
                    "                    return(value);\r",
                    "                } else {\r",
                    "                    return(Ext.getStore(\"MediaTypesFORDAMPicker\").findRecord(\"id\",value).get(\"type\"));\r",
                    "                }\r",
                    "            },\r",
                    "            filter: {\r",
                    "                type: 'list',\r",
                    "                labelField: 'type',\r",
                    "                store: Ext.getStore('MediaTypesFORDAMPicker')\r",
                    "            },\r",
                    "            dataIndex: 'typeId',\r",
                    "\r",
                    "            text: 'Type'\r",
                    "        });\r",
                    "        Ext.getStore(\"DAMPickerStore\").getProxy().extraParams.tFilter=\"[{\\\"property\\\":\\\"mainFileType\\\",\\\"value\\\":\\\"\"+allowedFileType+\"\\\"}]\";\r",
                    "        Ext.getStore(\"DAMPickerStore\").load();\r",
                    "    }\r",
                    "}else if (allowedTypes.length==1){\r",
                    "    Ext.getStore(\"DAMPickerStore\").getProxy().extraParams.tFilter=\"[{\\\"property\\\":\\\"typeId\\\",\\\"value\\\":\\\"\"+allowedTypes[0]+\"\\\"}]\";\r",
                    "    Ext.getStore(\"DAMPickerStore\").load();\r",
                    "    Ext.getStore(\"MediaTypesFORDAMPicker\").getProxy().extraParams.filter=\"[{\\\"property\\\":\\\"id\\\",\\\"operator\\\":\\\"$in\\\",\\\"value\\\":\"+Ext.JSON.encode(allowedTypes)+\"}]\";\r",
                    "    Ext.getStore(\"MediaTypesFORDAMPicker\").load();\r",
                    "} else {\r",
                    "    Ext.getStore(\"MediaTypesFORDAMPicker\").getProxy().extraParams.filter=\"[{\\\"property\\\":\\\"id\\\",\\\"operator\\\":\\\"$in\\\",\\\"value\\\":\"+Ext.JSON.encode(allowedTypes)+\"}]\";\r",
                    "    Ext.getStore(\"MediaTypesFORDAMPicker\").load();\r",
                    "    columnsOver.push({\r",
                    "        xtype:'gridcolumn',\r",
                    "        renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {\r",
                    "            if (Ext.isEmpty(Ext.getStore(\"MediaTypesFORDAMPicker\").findRecord(\"id\",value))) {\r",
                    "                return(value);\r",
                    "            } else {\r",
                    "                return(Ext.getStore(\"MediaTypesFORDAMPicker\").findRecord(\"id\",value).get(\"type\"));\r",
                    "            }\r",
                    "        },\r",
                    "        filter: {\r",
                    "            type: 'list',\r",
                    "            labelField: 'type',\r",
                    "            store: Ext.getStore('MediaTypesFORDAMPicker')\r",
                    "        },\r",
                    "        dataIndex: 'typeId',\r",
                    "\r",
                    "        text: 'Type'\r",
                    "    });\r",
                    "\r",
                    "    Ext.getStore(\"DAMPickerStore\").getProxy().extraParams.tFilter=\"[{\\\"property\\\":\\\"typeId\\\",\\\"operator\\\":\\\"$in\\\",\\\"value\\\":\"+Ext.JSON.encode(allowedTypes)+\"}]\";\r",
                    "    Ext.getStore(\"DAMPickerStore\").load();\r",
                    "}\r",
                    "var DAMPicker = Ext.widget(\"DAMMainView\", {features:[Ext.create(\"Ext.ux.grid.FiltersFeature\",{encode:true,local:false})],id:\"DAMPickerView\", store:Ext.getStore(\"DAMPickerStore\"),columns:columnsOver, multiSelect:false\r",
                    "});\r",
                    "DAMPicker.on(\"selectionchange\", function(g, s){\r",
                    "if (Ext.isEmpty(s)){\r",
                    "    Ext.getCmp(\"imagePickerAcceptBtn\").disable();\r",
                    "} else {\r",
                    "    Ext.getCmp(\"imagePickerAcceptBtn\").enable();\r",
                    "}\r",
                    "});\r",
                    "DAMPicker.on(\"itemdblclick\", function(){\r",
                    "try{\r",
                    "    Ext.getCmp(\"imagePickerAcceptBtn\").fireEvent(\"click\",Ext.getCmp(\"imagePickerAcceptBtn\"));\r",
                    "} catch(err){}\r",
                    "});\r",
                    "\r",
                    "\r",
                    "component.add(DAMPicker);"
                ],
                "name": "render",
                "scope": "me"
            },
            "designerId": "c5d8bf98-04ca-4bc5-acdf-f03b207127ae"
        },
        {
            "type": "basiceventbinding",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onImagePickerWindowBeforeClose",
                "implHandler": [
                    "Ext.getStore(\"DAMPickerStore\").removeAll();\r",
                    "Ext.getStore(\"DAMPickerStore\").clearFilter(true);\r",
                    "Ext.getStore(\"MediaTypesFORDAMPicker\").removeAll();"
                ],
                "name": "beforeclose",
                "scope": "me"
            },
            "designerId": "32a02590-abaf-438e-a255-dbd261bf0cf6"
        },
        {
            "type": "Ext.toolbar.Paging",
            "reference": {
                "name": "dockedItems",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "dock": "bottom",
                "width": 360,
                "displayInfo": true,
                "store": "DAMPickerStore"
            },
            "designerId": "82616952-af27-4097-a217-c945fd01b259",
            "cn": [
                {
                    "type": "Ext.button.Button",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "localiserId": "chooseBtn",
                        "layout|flex": null,
                        "disabled": true,
                        "id": "imagePickerAcceptBtn",
                        "iconCls": "ouiSpetit",
                        "text": "Choisir"
                    },
                    "designerId": "b5f0469a-4889-4227-a446-e1319ad527b5",
                    "customConfigs": [
                        {
                            "group": "(Custom Properties)",
                            "name": "localiserId",
                            "type": "string"
                        }
                    ],
                    "cn": [
                        {
                            "type": "basiceventbinding",
                            "reference": {
                                "name": "listeners",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "fn": "onImagePickerAcceptBtnClick",
                                "implHandler": [
                                    "var target = button.up().up().getComponent(0).getSelectionModel().getLastSelected();\r",
                                    "Ext.getCmp(button.up().up().targetField).setValue(target.get(\"id\"));\r",
                                    "button.up().up().close();"
                                ],
                                "name": "click",
                                "scope": "me"
                            },
                            "designerId": "2acb7d2d-c1a9-4fdd-a6b2-5dd3f618f6b4"
                        }
                    ]
                },
                {
                    "type": "Ext.button.Button",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "localiserId": "addBtn",
                        "layout|flex": null,
                        "id": "DAMPickerAddBtn",
                        "iconCls": "add",
                        "text": "Ajouter"
                    },
                    "designerId": "38b4192f-6d63-460e-9114-816838ddef57",
                    "customConfigs": [
                        {
                            "group": "(Custom Properties)",
                            "name": "localiserId",
                            "type": "string"
                        }
                    ],
                    "cn": [
                        {
                            "type": "basiceventbinding",
                            "reference": {
                                "name": "listeners",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "fn": "onDAMPickerAddBtnClick",
                                "implHandler": [
                                    "if ((!Ext.isEmpty(Ext.getCmp('chooseMTInPickerCombo')))&&(!Ext.isEmpty(Ext.getCmp('chooseMTInPickerCombo').getValue()))) {\r",
                                    "    var DAMType=Ext.getStore(\"MediaTypesFORDAMPicker\").findRecord(\"id\", Ext.getCmp('chooseMTInPickerCombo').getValue());\r",
                                    "    var myEditor = Ext.widget(\"DAMCreateUpdateWindow\");\r",
                                    "    Ext.getCmp(\"DAMMainFileFieldBox\").up().remove(Ext.getCmp(\"DAMMainFileFieldBox\"));\r",
                                    "    myEditor.typeId=DAMType.get(\"id\");\r",
                                    "    myEditor.mainFileType=DAMType.get(\"mainFileType\");\r",
                                    "    myEditor.setTitle(Rubedo.RubedoAutomatedElementsLoc.newDamText+\" \"+DAMType.get(\"type\"));\r",
                                    "    myEditor.directContribute=true;\r",
                                    "    myEditor.show();\r",
                                    "    Rubedo.controller.DAMController.prototype.renderDAMTypeFields(DAMType, false);\r",
                                    "    Rubedo.controller.DAMController.prototype.renderTaxoFields(DAMType,true);\r",
                                    "    Ext.getCmp(\"DAMCreateUpdateWindow\").doLayout();\r",
                                    "} else if (!Ext.isEmpty(Ext.getStore(\"MediaTypesFORDAMPicker\").getRange())){\r",
                                    "    Ext.widget(\"DAMChooseMTWindow\").show();\r",
                                    "    Ext.getCmp(\"DAMChooseMTWindow\").getComponent(0).getComponent(0).bindStore(Ext.getStore(\"MediaTypesFORDAMPicker\"));\r",
                                    "    Ext.getCmp(\"addDamAfterTypeBtn\").nonClassic=true;\r",
                                    "    Ext.getCmp(\"addDamAfterTypeBtn\").setHandler(function(){\r",
                                    "        var form=Ext.getCmp(\"addDamAfterTypeBtn\").up();\r",
                                    "        if (form.getForm().isValid()){\r",
                                    "            var DAMType=Ext.getStore(\"MediaTypesFORDAMPicker\").findRecord(\"id\", form.getComponent(0).getValue());\r",
                                    "            var myEditor = Ext.widget(\"DAMCreateUpdateWindow\");\r",
                                    "            Ext.getCmp(\"DAMMainFileFieldBox\").up().remove(Ext.getCmp(\"DAMMainFileFieldBox\"));\r",
                                    "            myEditor.typeId=DAMType.get(\"id\");\r",
                                    "            myEditor.mainFileType=DAMType.get(\"mainFileType\");\r",
                                    "            myEditor.setTitle(Rubedo.RubedoAutomatedElementsLoc.newDamText+\" \"+DAMType.get(\"type\"));\r",
                                    "            myEditor.directContribute=true;\r",
                                    "            myEditor.show();\r",
                                    "            Ext.getCmp(\"addDamAfterTypeBtn\").up().up().close();\r",
                                    "            Rubedo.controller.DAMController.prototype.renderDAMTypeFields(DAMType, false);\r",
                                    "            Rubedo.controller.DAMController.prototype.renderTaxoFields(DAMType,true);\r",
                                    "            Ext.getCmp(\"DAMCreateUpdateWindow\").doLayout();\r",
                                    "        }\r",
                                    "\r",
                                    "    });\r",
                                    "\r",
                                    "\r",
                                    "\r",
                                    "\r",
                                    "} else {\r",
                                    "    Ext.Msg.alert(\"Erreur\", \"Aucun type de média défini\");\r",
                                    "}\r",
                                    ""
                                ],
                                "name": "click",
                                "scope": "me"
                            },
                            "designerId": "04d12175-05f0-49d6-b852-600597648f1c"
                        },
                        {
                            "type": "basiceventbinding",
                            "reference": {
                                "name": "listeners",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "fn": "onDAMPickerAddBtnRender",
                                "implHandler": [
                                    "if (typeof(Rubedo.view.DAMCreateUpdateWindow)==\"undefined\"){\r",
                                    "    component.hide();\r",
                                    "}"
                                ],
                                "name": "render",
                                "scope": "me"
                            },
                            "designerId": "9541c829-4bb4-4a0b-b319-0879f292b29a"
                        }
                    ]
                },
                {
                    "type": "Ext.button.Button",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "localiserId": "cancelBtn",
                        "layout|flex": null,
                        "iconCls": "close",
                        "text": "Annuler"
                    },
                    "designerId": "81c29517-6564-4a65-8100-ebff5447b45a",
                    "customConfigs": [
                        {
                            "group": "(Custom Properties)",
                            "name": "localiserId",
                            "type": "string"
                        }
                    ],
                    "cn": [
                        {
                            "type": "fixedfunction",
                            "reference": {
                                "name": "items",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "fn": "handler",
                                "designer|params": [
                                    "button",
                                    "event"
                                ],
                                "implHandler": [
                                    "this.up().up().close();"
                                ]
                            },
                            "designerId": "81bf382b-7076-4a7a-a8bb-bc557dbb9746"
                        }
                    ]
                }
            ]
        },
        {
            "type": "linkedinstance",
            "reference": {
                "name": "tools",
                "type": "array"
            },
            "codeClass": null,
            "designerId": "05561d8c-f690-4953-8383-9b280c060bda",
            "masterInstanceId": "1ab0b0a2-44a7-48b2-8bf5-cfcf4aa29237"
        }
    ]
}