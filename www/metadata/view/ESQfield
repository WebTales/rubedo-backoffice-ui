{
    "type": "Ext.form.field.Hidden",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "allowedCT": null,
        "damQueryMode": false,
        "designer|userAlias": "ESQfield",
        "designer|userClassName": "ESQfield",
        "fieldLabel": "Label",
        "geoQueryMode": false,
        "labelSeparator": " ",
        "queryMode": true
    },
    "configAlternates": {
        "geoQueryMode": "boolean",
        "queryMode": "boolean",
        "damQueryMode": "boolean"
    },
    "designerId": "40dcc4f4-8a58-473c-b8f1-982fef6fab5f",
    "customConfigs": [
        {
            "group": "(Custom Properties)",
            "name": "allowedCT",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "queryMode",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "geoQueryMode",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "damQueryMode",
            "type": "string"
        }
    ],
    "cn": [
        {
            "type": "basiceventbinding",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onHiddenfieldRender",
                "implHandler": [
                    "var myComponent = Ext.widget(\"ESQfieldComponent\");",
                    "myComponent.setFieldLabel(component.fieldLabel+\" \");",
                    "component.on(\"change\", function(a,newValue){",
                    "    if (Ext.isEmpty(newValue)){",
                    "        myComponent.getComponent(\"addBtn\").show();",
                    "        myComponent.getComponent(\"editBtn\").hide();",
                    "        myComponent.getComponent(\"removeBtn\").hide();",
                    "    } else {",
                    "        myComponent.getComponent(\"addBtn\").hide();",
                    "        myComponent.getComponent(\"editBtn\").show();",
                    "        myComponent.getComponent(\"removeBtn\").show();",
                    "    }",
                    "});",
                    "myComponent.getComponent(\"removeBtn\").on(\"click\", function(){",
                    "    component.setValue(null);",
                    "    if (component.advancedESQMode){",
                    "        component.up().getComponent(\"displayedFacetsBrotherField\").setValue(\"['all']\");",
                    "    }",
                    "});",
                    "myComponent.getComponent(\"addBtn\").on(\"click\", function(){",
                    "    var delay = 10;",
                    "    var prev = Ext.getCmp(\"searchResultsWindow\");",
                    "    if (!Ext.isEmpty(prev)){",
                    "        prev.close();",
                    "        delay=400;",
                    "    }",
                    "    var task = new Ext.util.DelayedTask(function(){",
                    "        var initialDF = [ ];",
                    "        if (component.advancedESQMode){",
                    "            var candidateValue=component.up().getComponent(\"displayedFacetsBrotherField\").getValue();",
                    "            if ((Ext.isString(candidateValue))&&(candidateValue!=\"all\")){",
                    "                candidateValue=Ext.JSON.decode(candidateValue);",
                    "                if ((Ext.isArray(candidateValue))&&(candidateValue.length>0)&&(Ext.isObject(candidateValue[0]))){",
                    "                    initialDF=Ext.clone(candidateValue);",
                    "                }",
                    "            }",
                    "        }",
                    "",
                    "        Ext.widget(\"searchResultsWindow\", {",
                    "            queryMode:component.queryMode,",
                    "            productQueryMode:component.productQueryMode,",
                    "            userQueryMode:component.userQueryMode,",
                    "            geoQueryMode:component.geoQueryMode,",
                    "            advancedESQMode:component.advancedESQMode,",
                    "            initialDF:initialDF,",
                    "            damQueryMode:component.damQueryMode,",
                    "            targetedId:component.getId(),",
                    "            predefFacettes:null",
                    "        }).show();",
                    "",
                    "    });",
                    "    task.delay(delay);",
                    "",
                    "});",
                    "",
                    "myComponent.getComponent(\"editBtn\").on(\"click\", function(){",
                    "    var delay = 10;",
                    "    var prev = Ext.getCmp(\"searchResultsWindow\");",
                    "    if (!Ext.isEmpty(prev)){",
                    "        prev.close();",
                    "        delay=400;",
                    "    }",
                    "    var initialDF = [ ];",
                    "    if (component.advancedESQMode){",
                    "        var candidateValue=component.up().getComponent(\"displayedFacetsBrotherField\").getValue();",
                    "        if ((Ext.isString(candidateValue))&&(candidateValue!=\"all\")){",
                    "            candidateValue=Ext.JSON.decode(candidateValue);",
                    "            if ((Ext.isArray(candidateValue))&&(candidateValue.length>0)&&(Ext.isObject(candidateValue[0]))){",
                    "                initialDF=Ext.clone(candidateValue);",
                    "            }",
                    "        }",
                    "    }",
                    "    var task = new Ext.util.DelayedTask(function(){",
                    "        Ext.widget(\"searchResultsWindow\", {",
                    "            queryMode:component.queryMode,",
                    "            userQueryMode:component.userQueryMode,",
                    "            geoQueryMode:component.geoQueryMode,",
                    "            advancedESQMode:component.advancedESQMode,",
                    "            initialDF:initialDF,",
                    "            damQueryMode:component.damQueryMode,",
                    "            targetedId:component.getId(),",
                    "            predefFacettes:Ext.JSON.decode(component.getValue())",
                    "        }).show();",
                    "    });",
                    "    task.delay(delay);",
                    "",
                    "});",
                    "component.up().add(myComponent);",
                    "component.fireEvent(\"change\",component, component.getValue());"
                ],
                "name": "render",
                "scope": "me"
            },
            "name": "onHiddenfieldRender",
            "designerId": "2a7c74a8-33c7-46cc-9da5-e07723204199"
        }
    ]
}