{
    "type": "Ext.window.Window",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "constrain": true,
        "designer|userAlias": "aceEditorWindow",
        "designer|userClassName": "aceEditorWindow",
        "height": 459,
        "iconCls": "edit",
        "id": "aceEditorWindow",
        "layout": "fit",
        "localiserId": "codeEditorWindow",
        "modal": true,
        "title": "Code editor",
        "width": 850
    },
    "designerId": "26b584ef-18d7-4675-8753-f42da6633fbb",
    "customConfigs": [
        {
            "group": "(Custom Properties)",
            "name": "localiserId",
            "type": "string"
        }
    ],
    "cn": [
        {
            "type": "Ext.Component",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "name": "MyComponent",
            "designerId": "06879fa8-59e1-47f2-9d47-b8107d24ab6f"
        },
        {
            "type": "basiceventbinding",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onAceEditorWindowAfterRender",
                "implHandler": [
                    "component.editor=ace.edit(component.getComponent(0).getEl().id);",
                    "if (component.cssMode){",
                    "    component.editor.getSession().setMode(\"ace/mode/css\");",
                    "} else if (component.jsMode){",
                    "    component.editor.getSession().setMode(\"ace/mode/javascript\");",
                    "} else if (component.twigMode){",
                    "    component.editor.getSession().setMode(\"ace/mode/twig\");",
                    "} else if (component.rawObjectMode) {",
                    "    component.editor.getSession().setMode(\"ace/mode/json\");",
                    "}else {",
                    "\tcomponent.editor.getSession().setMode(\"ace/mode/html\");",
                    "}",
                    "component.editor.setTheme(\"ace/theme/monokai\");",
                    "if (component.rawObjectMode) {",
                    "    if (Ext.isEmpty(component.initialValue)){",
                    "        component.editor.setValue(Ext.JSON.encode({",
                    "        ",
                    "        }));",
                    "    } else {",
                    "        component.editor.setValue(JSON.stringify(component.initialValue, null, '\\t'));",
                    "    }",
                    "    ",
                    "} else {",
                    "    component.editor.setValue(component.initialValue);",
                    "}",
                    "var task = new Ext.util.DelayedTask(function(){",
                    "    component.editor.setTheme(\"ace/theme/monokai\");",
                    "});",
                    "task.delay(200);"
                ],
                "name": "afterrender",
                "scope": "me"
            },
            "name": "onAceEditorWindowAfterRender",
            "designerId": "d2f3bbb1-6976-4c06-8971-f819f7b86880"
        },
        {
            "type": "Ext.toolbar.Toolbar",
            "reference": {
                "name": "dockedItems",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "dock": "bottom"
            },
            "name": "MyToolbar96",
            "designerId": "0c7e2744-6a00-4382-b32d-67cf30b6aad7",
            "cn": [
                {
                    "type": "Ext.toolbar.Fill",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "layout|flex": null
                    },
                    "name": "MyFill54",
                    "designerId": "839df592-fbb8-4936-843c-3751dd77b67c"
                },
                {
                    "type": "Ext.button.Button",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "iconCls": "save",
                        "id": "aceWindowSaveBtn",
                        "layout|flex": null,
                        "localiserId": "saveBtn",
                        "text": "Save"
                    },
                    "name": "MyButton434",
                    "designerId": "ff3e03eb-1695-4a6e-a348-8e05ff20e6be",
                    "customConfigs": [
                        {
                            "group": "(Custom Properties)",
                            "name": "localiserId",
                            "type": "string"
                        }
                    ],
                    "cn": [
                        {
                            "type": "basiceventbinding",
                            "reference": {
                                "name": "listeners",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "fn": "onAceWindowSaveBtnClick",
                                "implHandler": [
                                    "var component=button.up().up();",
                                    "if (component.targetedRec){",
                                    "    component.targetedRec.set(\"code\",component.editor.getValue());",
                                    "    component.close();",
                                    "} else if (component.rawObjectMode) {",
                                    "    try {",
                                    "        var decoded=Ext.JSON.decode(component.editor.getValue());",
                                    "        Ext.getCmp(component.targetedId).setValue(decoded);",
                                    "        component.close();",
                                    "    }",
                                    "    catch(err) {",
                                    "        Ext.Msg.alert(\"Error\",\"Invalid JSON\");",
                                    "    }",
                                    "} else {",
                                    "    Ext.getCmp(component.targetedId).setValue(component.editor.getValue());",
                                    "    component.close();",
                                    "}",
                                    ""
                                ],
                                "name": "click",
                                "scope": "me"
                            },
                            "name": "onAceWindowSaveBtnClick",
                            "designerId": "a80108b8-22d4-4dd7-b456-3c2dec8ab7a1"
                        }
                    ]
                }
            ]
        },
        {
            "type": "basiceventbinding",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onAceEditorWindowBeforeClose",
                "implHandler": [
                    "panel.editor.destroy();"
                ],
                "name": "beforeclose",
                "scope": "me"
            },
            "name": "onAceEditorWindowBeforeClose",
            "designerId": "f4d4bee0-53a9-4353-8222-07a7fa9f87d8"
        },
        {
            "type": "basiceventbinding",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onAceEditorWindowMaximize",
                "implHandler": [
                    "window.editor.setTheme(\"ace/theme/monokai\");"
                ],
                "name": "maximize",
                "scope": "me"
            },
            "name": "onAceEditorWindowMaximize",
            "designerId": "8c639d2b-61bb-4d6d-9a03-6ddabbb56e9a"
        },
        {
            "type": "basiceventbinding",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onAceEditorWindowMinimize",
                "implHandler": [
                    "window.editor.setTheme(\"ace/theme/monokai\");"
                ],
                "name": "minimize",
                "scope": "me"
            },
            "name": "onAceEditorWindowMinimize",
            "designerId": "31237d43-92a5-4a4a-b6e3-35745b628a12"
        }
    ]
}